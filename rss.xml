<?xml version="1.0" encoding="utf-8"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>MatNoble</title><link>https://matnoble.me/</link><description>数学系在读研究生; 公众号:「数系家园」, 分享数学, 计算机和 LaTeX 排版等知识, 分享学习心得, 分享生活感悟．&lt;br />Graduate student in the Department of Mathematics; sharing knowledge about mathematics, computer and LaTeX typesetting, sharing learning experience, sharing life experience</description><generator>Hugo 0.81.0 https://gohugo.io/</generator><language>zh-CN</language><managingEditor>hustmatnoble@gmail.com (数学小兵儿)</managingEditor><webMaster>hustmatnoble@gmail.com (数学小兵儿)</webMaster><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><lastBuildDate>Sat, 13 Mar 2021 20:35:10 +0800</lastBuildDate><atom:link rel="self" type="application/rss+xml" href="https://matnoble.me/rss.xml"/><item><title>子集，组合，全排列</title><link>https://matnoble.me/dsa/topics/backtrack/</link><guid isPermaLink="true">https://matnoble.me/dsa/topics/backtrack/</guid><pubDate>Sat, 13 Mar 2021 00:11:30 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h1 id="目录">目录&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="./#78-%E5%AD%90%E9%9B%86">78. 子集&lt;/a>&lt;/li>
&lt;li>&lt;a href="./#77-%E7%BB%84%E5%90%88">77. 组合&lt;/a>&lt;/li>
&lt;li>&lt;a href="./#46-%E5%85%A8%E6%8E%92%E5%88%97">46. 全排列&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="78-子集">78. 子集&lt;/h2>
&lt;h3 id="题目描述">题目描述&lt;/h3>
&lt;style type="text/css">.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:"Font Awesome 5 Free",FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:'\f071'}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:'\f05a'}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:'\f06a'}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:'\f058'}.notice.tip{background:#e6f9e6}&lt;/style>&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;/div>
&lt;h3 id="思路">思路&lt;/h3>
&lt;h3 id="代码">代码&lt;/h3>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h3 id="复杂度">复杂度&lt;/h3>
&lt;ul>
&lt;li>时间复杂度：&lt;/li>
&lt;li>空间复杂度：&lt;/li>
&lt;/ul>
&lt;h2 id="77-组合">77. 组合&lt;/h2>
&lt;h3 id="题目描述-1">题目描述&lt;/h3>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;/div>
&lt;h3 id="思路-1">思路&lt;/h3>
&lt;h3 id="代码-1">代码&lt;/h3>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h3 id="复杂度-1">复杂度&lt;/h3>
&lt;ul>
&lt;li>时间复杂度：&lt;/li>
&lt;li>空间复杂度：&lt;/li>
&lt;/ul>
&lt;h2 id="46-全排列">46. 全排列&lt;/h2>
&lt;h3 id="题目描述-2">题目描述&lt;/h3>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;/div>
&lt;h3 id="思路-2">思路&lt;/h3>
&lt;h3 id="代码-2">代码&lt;/h3>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h3 id="复杂度-2">复杂度&lt;/h3>
&lt;ul>
&lt;li>时间复杂度：&lt;/li>
&lt;li>空间复杂度：&lt;/li>
&lt;/ul></description><category domain="https://matnoble.me/dsa/">dsa</category><category domain="https://matnoble.me/dsa/topics/">topics</category><category domain="https://matnoble.me/tags/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/">回溯算法</category><category domain="https://matnoble.me/tags/%E5%AD%90%E9%9B%86/">子集</category><category domain="https://matnoble.me/tags/%E7%BB%84%E5%90%88/">组合</category><category domain="https://matnoble.me/tags/%E5%85%A8%E6%8E%92%E5%88%97/">全排列</category><category domain="https://matnoble.me/tags/%E5%8F%8C%E6%8C%87%E9%92%88/">双指针</category><category domain="https://matnoble.me/tags/%E7%BC%96%E7%A8%8B%E5%88%B7%E9%A2%98/">编程刷题</category><category domain="https://matnoble.me/tags/%E4%BA%8C%E5%88%86%E6%B3%95/">二分法</category></item><item><title>Python collections 类</title><link>https://matnoble.me/tech/programming/python/collections/</link><guid isPermaLink="true">https://matnoble.me/tech/programming/python/collections/</guid><pubDate>Sat, 13 Mar 2021 00:10:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>
&lt;blockquote>
&lt;p>这个模块实现了特定目标的容器，以提供 Python 标准内建容器 &lt;code>dict&lt;/code>, &lt;code>list&lt;/code>, &lt;code>set&lt;/code>, 和 &lt;code>tuple&lt;/code> 的替代选择。&lt;/p>
&lt;footer>
&lt;strong>Python 官方文档&lt;/strong>
&lt;cite>
&lt;a href="https://docs.python.org/zh-cn/3/library/collections.html" title="https://docs.python.org/zh-cn/3/library/collections.html">collections --- 容器数据类型&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
&lt;h2 id="deque">deque&lt;/h2>
&lt;blockquote>
&lt;p>Deque 队列是由栈或者 queue 队列生成的（发音是 “deck”，”double-ended queue”的简称）。Deque 支持线程安全，内存高效添加 (append) 和弹出 (pop)，从两端都可以，两个方向的大概开销都是 O(1) 复杂度。&lt;/p>
&lt;footer>
&lt;strong>Python 官方文档&lt;/strong>
&lt;cite>
&lt;a href="https://docs.python.org/zh-cn/3/library/collections.html#collections.deque" title="https://docs.python.org/zh-cn/3/library/collections.html#collections.deque">collections.deque() 双项队列&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
&lt;ul>
&lt;li>添加
&lt;ul>
&lt;li>append(x)
添加 x 到右端&lt;/li>
&lt;li>appendleft(x)
添加 x 到左端&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>删除队尾 or 队首
&lt;ul>
&lt;li>pop()
移去并且返回一个元素，deque 最右侧的那一个&lt;/li>
&lt;li>popleft()
移去并且返回一个元素，deque 最左侧的那一个&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>删除
&lt;ul>
&lt;li>remove(value)
移除找到的第一个 value&lt;/li>
&lt;li>clear()
移除所有元素，使其长度为 0&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>旋转
&lt;ul>
&lt;li>reverse()
将 &lt;code>deque&lt;/code> 逆序排列。返回 &lt;code>None&lt;/code>&lt;/li>
&lt;li>rotate(n=1)
向右循环移动 n 步。 如果 n 是负数，就向左循环&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>count(x)
计算 deque 中元素等于 x 的个数&lt;/li>
&lt;/ul>
&lt;h2 id="counter">Counter&lt;/h2>
&lt;blockquote>
&lt;p>&lt;p>Counter 是实现的 dict 的一个子类，可以用来方便地计数。&lt;/p>
&lt;p>&lt;strong>注解&lt;/strong>&lt;br>
..计数器..主要是为了表达运行的..正..的计数而设计；但是，小心不要预先排除负数或者其他类型。为了帮助这些用例，这一节记录了最小范围和类型限制。&lt;br>
&lt;code>Counter&lt;/code> 类是一个字典的子类，不限制键和值。值用于表示计数，但你实际上 可以 存储任何其他值。&lt;/p>
&lt;ul>
&lt;li>&lt;code>most_common()&lt;/code> 方法在值需要排序的时候用&lt;/li>
&lt;li>原地操作比如 &lt;code>c[key] += 1&lt;/code>，值类型只需要支持加和减。所以分数，小数，和十进制都可以用，负值也可以支持。这两个方法 &lt;code>update()&lt;/code> 和 &lt;code>subtract()&lt;/code> 的输入和输出也一样支持负数和 0&lt;/li>
&lt;li>&lt;code>Multiset&lt;/code> 多集合方法只为正值的使用情况设计。输入可以是负数或者 0，但只输出计数为正的值。没有类型限制，但值类型需要支持加，减和比较操作&lt;/li>
&lt;li>&lt;code>elements()&lt;/code> 方法要求正整数计数。忽略 0 和负数计数&lt;/li>
&lt;/ul>
&lt;/p>
&lt;footer>
&lt;strong>Python 官方文档&lt;/strong>
&lt;cite>
&lt;a href="https://docs.python.org/zh-cn/3/library/collections.html#collections.Counter" title="https://docs.python.org/zh-cn/3/library/collections.html#collections.Counter">collections.Counter() 计数器工具&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
&lt;ul>
&lt;li>elements()
返回一个迭代器，其中每个元素将重复出现计数值所指定次&lt;/li>
&lt;li>most_common(n)
返回一个列表，其中包含 n 个最常见的元素及出现次数，按常见程度由高到低排序&lt;/li>
&lt;li>items()
从 dict 类中继承的方法&lt;/li>
&lt;li>update()
增加元素&lt;/li>
&lt;li>subtract()
原来的元素减去新传入的元素&lt;/li>
&lt;li>Counter 对象的常用案例
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="nb">sum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">values&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="c1"># total of all counts&lt;/span>
&lt;span class="n">c&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">clear&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1"># reset all counts&lt;/span>
&lt;span class="nb">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># list unique elements&lt;/span>
&lt;span class="nb">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># convert to a set&lt;/span>
&lt;span class="nb">dict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># convert to a regular dictionary&lt;/span>
&lt;span class="n">c&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1"># convert to a list of (elem, cnt) pairs&lt;/span>
&lt;span class="n">Counter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">dict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">list_of_pairs&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1"># convert from a list of (elem, cnt) pairs&lt;/span>
&lt;span class="n">c&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">most_common&lt;/span>&lt;span class="p">()[:&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="c1"># n least common elements&lt;/span>
&lt;span class="o">+&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="c1"># remove zero and negative counts&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Counter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Counter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">d&lt;/span> &lt;span class="c1"># add two counters together: c[x] + d[x]&lt;/span>
&lt;span class="n">Counter&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">})&lt;/span>
&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">d&lt;/span> &lt;span class="c1"># subtract (keeping only positive counts)&lt;/span>
&lt;span class="n">Counter&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">})&lt;/span>
&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">d&lt;/span> &lt;span class="c1"># intersection: min(c[x], d[x]) &lt;/span>
&lt;span class="n">Counter&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">})&lt;/span>
&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">d&lt;/span> &lt;span class="c1"># union: max(c[x], d[x])&lt;/span>
&lt;span class="n">Counter&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Counter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="o">=-&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="n">c&lt;/span>
&lt;span class="n">Counter&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">})&lt;/span>
&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">c&lt;/span>
&lt;span class="n">Counter&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="defaultdict">defaultdict&lt;/h2>
&lt;blockquote>
&lt;p>返回一个新的类似字典的对象。 defaultdict 是内置 dict 类的子类。它重载了一个方法并添加了一个可写的实例变量。其余的功能与 dict 类相同&lt;/p>
&lt;footer>
&lt;strong>Python 官方文档&lt;/strong>
&lt;cite>
&lt;a href="https://docs.python.org/zh-cn/3/library/collections.html#collections.defaultdict" title="https://docs.python.org/zh-cn/3/library/collections.html#collections.defaultdict">collections.defaultdict()&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
&lt;!--
https://www.jianshu.com/p/26df28b3bfc8
https://nfwcap.github.io/2019/03/05/%E5%85%B3%E4%BA%8EPython-collections-defaultdict-%E4%B8%8Edict%E7%9A%84%E4%BD%BF%E7%94%A8%E5%92%8C%E5%8C%BA%E5%88%AB/
-->&lt;blockquote>
&lt;/blockquote></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/programming/">programming</category><category domain="https://matnoble.me/tags/%E7%BC%96%E7%A8%8B%E4%B9%8B%E9%81%93/">编程之道</category></item><item><title>动态规划 -- 基础问题</title><link>https://matnoble.me/dsa/topics/dp-basic/</link><guid isPermaLink="true">https://matnoble.me/dsa/topics/dp-basic/</guid><pubDate>Fri, 12 Mar 2021 00:19:30 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>动态规划问题的一般形式就是..求最值..，求解动态规划的核心问题是..穷举..。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>动态规划问题一定会具备 &lt;strong>最优子结构&lt;/strong> ，才能通过子问题的最值得到原问题的最值。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>只有列出正确的 &lt;strong>状态转移方程&lt;/strong> 才能正确地穷举。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>当存在 &lt;strong>重叠子问题&lt;/strong> 时，需要「备忘录 memo」或者「DP table」来优化穷举过程，避免不必要的计算。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>动态规划三要素：&lt;/p>
&lt;ul>
&lt;li>最优子结构&lt;/li>
&lt;li>状态转移方程(最难)&lt;/li>
&lt;li>重叠子问题&lt;/li>
&lt;/ul>
&lt;p>求状态转移方程步骤：&lt;/p>
&lt;blockquote>
&lt;p>明确「状态」 -&amp;gt; 定义 dp 数组/函数的含义 -&amp;gt; 明确「选择」-&amp;gt; 明确 base case&lt;/p>
&lt;/blockquote>
&lt;h2 id="斐波那契数列">斐波那契数列&lt;/h2>
&lt;blockquote>
&lt;p>&lt;p>斐波那契数列（意大利语：Successione di Fibonacci），又译为菲波拿契数列、菲波那西数列、斐氏数列、黄金分割数列。&lt;/p>
&lt;p>在数学上，斐波那契数列是以递归的方法来定义：&lt;/p>
&lt;ul>
&lt;li>$F_{0}=0$&lt;/li>
&lt;li>$F_{1}=1$&lt;/li>
&lt;li>$F_{n}=F_{{n-1}}+F_{{n-2}}~(n≧2)$&lt;/li>
&lt;/ul>
&lt;p>用文字来说，就是斐波那契数列由 $0$ 和 $1$ 开始，之后的斐波那契数就是由之前的两数相加而得出。首几个斐波那契数是：&lt;/p>
&lt;p>$1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233 \dots$&lt;/p>
&lt;p>特别指出：$0$ 不是第一项，而是第零项。&lt;/p>
&lt;/p>
&lt;footer>
&lt;strong>维基百科&lt;/strong>
&lt;cite>
&lt;a href="https://zh.wikipedia.org/wiki/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97" title="https://zh.wikipedia.org/wiki/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97">斐波那契数列&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
&lt;h3 id="暴力递归">暴力递归&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">def&lt;/span> &lt;span class="nf">fib&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">fib&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">fib&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">11&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fib&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1"># ：[1, 1, 2, 3, 5, 8, 13, 21, 34, 55]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>时间复杂度：$O(2^n)$ &lt;strong>指数爆炸&lt;/strong>&lt;/li>
&lt;/ul>
&lt;style type="text/css">.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:"Font Awesome 5 Free",FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:'\f071'}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:'\f05a'}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:'\f06a'}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:'\f058'}.notice.tip{background:#e6f9e6}&lt;/style>&lt;div class="notice tip" >
&lt;p class="first notice-title">Tips&lt;/p>&lt;p>递归算法的「时间复杂度」怎么算？&lt;br>
子问题个数乘以解决一个子问题需要的时间。&lt;/p>&lt;/div>
&lt;h3 id="dp-优化递归">dp 优化（递归）&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">def&lt;/span> &lt;span class="nf">fib&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">]:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fib&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">fib&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">10&lt;/span>
&lt;span class="n">dp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">fib&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">:]&lt;/span>
&lt;span class="c1"># : [1, 1, 2, 3, 5, 8, 13, 21, 34, 55]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;/ul>
&lt;h3 id="dp-迭代">dp 迭代&lt;/h3>
&lt;p>..递归..叫做「自顶向下」，..动态规划..叫做「自底向上」&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">def&lt;/span> &lt;span class="nf">fib&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="n">dp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="p">[&lt;/span> &lt;span class="n">fib&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">11&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">]&lt;/span>
&lt;span class="c1"># : [1, 1, 2, 3, 5, 8, 13, 21, 34, 55]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(n)$&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>状态转移方程&lt;/strong>&lt;/p>
&lt;p>$$
f(n) =
\begin{cases}
1 &amp;amp; n = 1, 2 \\&lt;br>
f(n-1) + f(n-2) &amp;amp; n &amp;gt; 2
\end{cases}
$$&lt;/p>
&lt;h3 id="再优化空间">再优化（空间）&lt;/h3>
&lt;p>不需要存储 &lt;code>dp&lt;/code> 表&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">def&lt;/span> &lt;span class="nf">fib&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">_&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">b&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">a&lt;/span>
&lt;span class="p">[&lt;/span> &lt;span class="n">fib&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">11&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">]&lt;/span>
&lt;span class="c1"># : [1, 1, 2, 3, 5, 8, 13, 21, 34, 55]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(1)$&lt;/li>
&lt;/ul>
&lt;hr />
&lt;h2 id="凑零钱问题">凑零钱问题&lt;/h2>
&lt;p>先看下题目：给你 &lt;code>k&lt;/code> 种面值的硬币，面值分别为 &lt;code>c1&lt;/code>, &lt;code>c2&lt;/code> ... &lt;code>ck&lt;/code>，每种硬币的数量无限，再给一个总金额 &lt;code>amount&lt;/code>，问你最少需要几枚硬币凑出这个金额，如果不可能凑出，算法返回 &lt;code>-1&lt;/code> 。算法的函数签名如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># coins 中是可选硬币面值，amount 是目标金额&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">coinChange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">coins&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">amount&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>比如说 &lt;code>k = 3&lt;/code>，面值分别为 &lt;code>1&lt;/code>，&lt;code>2&lt;/code>，&lt;code>5&lt;/code>，总金额 &lt;code>amount = 11&lt;/code>。那么最少需要 &lt;code>3&lt;/code> 枚硬币凑出，即 &lt;code>11 = 5 + 5 + 1&lt;/code>。&lt;/p>
&lt;div class="notice tip" >
&lt;p class="first notice-title">Tips&lt;/p>&lt;p>你认为计算机应该如何解决这个问题？&lt;br>
显然，就是把所有肯能的凑硬币方法都..穷举..出来，然后找找看最少需要多少枚硬币。&lt;/p>&lt;/div>
&lt;h3 id="暴力解法">暴力解法&lt;/h3>
&lt;p>「最优子结构」：子问题间必须互相独立&lt;/p>
&lt;p>&lt;strong>状态转移方程：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>确定「状态」
原问题 --&amp;gt; 子问题。
状态为：目标金额 &lt;code>amount&lt;/code>&lt;/li>
&lt;li>确定 &lt;code>dp&lt;/code> 函数的定义&lt;br>
函数 &lt;code>dp(n)&lt;/code> 表示，当前的目标金额是 &lt;code>n&lt;/code>，至少需要 &lt;code>dp(n)&lt;/code> 个硬币凑出该金额&lt;/li>
&lt;li>&lt;strong>确定「选择」并择优&lt;/strong>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">def&lt;/span> &lt;span class="nf">dp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">float&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;inf&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">coin&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">coins&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">coin&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>&lt;strong>确定 base case&lt;/strong>
&lt;ul>
&lt;li>&lt;code>if n ==0: return 0&lt;/code>&lt;/li>
&lt;li>&lt;code>if n &amp;lt; 0: return -1&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>所以，状态转移方程为
$$
dp(n)
\begin{cases}
-1 &amp;amp; n &amp;lt; 0 \\&lt;br>
0 &amp;amp; n = 0 \\&lt;br>
\min\{1+dp(n-coin)|coin \in coins\} &amp;amp; n &amp;gt; 0
\end{cases}
$$&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">def&lt;/span> &lt;span class="nf">coinChange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">coins&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">amount&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">dp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">float&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;inf&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">coin&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">coins&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">dp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">coin&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">continue&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">coin&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">res&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="nb">float&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;inf&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">dp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">amount&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">coins&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">amount&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">11&lt;/span>
&lt;span class="n">coinChange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">coins&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">amount&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># ：3&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>时间复杂度：$O(k*n^k)$ # k = len(coins)&lt;/li>
&lt;/ul>
&lt;h3 id="dp-优化递归-1">dp 优化（递归）&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">def&lt;/span> &lt;span class="nf">coinChange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">coins&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">amount&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">dp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="c1"># 避免重复计算&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">memo&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">memo&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">float&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;inf&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">coin&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">coins&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">dp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">coin&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">continue&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">coin&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1"># 计入备忘录&lt;/span>
&lt;span class="n">memo&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">res&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">res&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="nb">float&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;inf&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">memo&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">dp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">amount&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">memo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="n">coins&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">amount&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">11&lt;/span>
&lt;span class="n">coinChange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">coins&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">amount&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># ：3&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>时间复杂度：$O(kn)$&lt;/p>
&lt;h3 id="dp-迭代-1">dp 迭代&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">def&lt;/span> &lt;span class="nf">coinChange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">coins&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">amount&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="c1"># 初始化 dp&lt;/span>
&lt;span class="n">dp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">amount&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">amount&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># base case&lt;/span>
&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="c1"># 外层循环：依次更新 dp 表&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">amount&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="c1"># 内层循环：「选择」最优&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">coin&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">coins&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">coin&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">continue&lt;/span>
&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">coin&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">amount&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">coins&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">amount&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">11&lt;/span>
&lt;span class="n">coinChange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">coins&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">amount&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># ：3&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="程序实现">程序实现&lt;/h2>
&lt;p>&lt;a href="https://colab.research.google.com/drive/1gAKqXeyGgktdiouAz6AITT_O3INjVqGu?usp=sharing">&lt;img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab">&lt;/a>&lt;/p></description><category domain="https://matnoble.me/dsa/">dsa</category><category domain="https://matnoble.me/dsa/topics/">topics</category><category domain="https://matnoble.me/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/">动态规划</category><category domain="https://matnoble.me/tags/%E7%BC%96%E7%A8%8B%E5%88%B7%E9%A2%98/">编程刷题</category><category domain="https://matnoble.me/tags/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/">滑动窗口</category></item><item><title>判断括号合法性</title><link>https://matnoble.me/dsa/top/valid-parentheses/</link><guid isPermaLink="true">https://matnoble.me/dsa/top/valid-parentheses/</guid><pubDate>Fri, 05 Mar 2021 00:20:30 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h2 id="目录">目录&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="./#%E5%8F%AA%E5%A4%84%E7%90%86%E4%B8%80%E7%A7%8D%E6%8B%AC%E5%8F%B7">只处理一种括号&lt;/a>&lt;/li>
&lt;li>&lt;a href="./#678-%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8D%8E%E4%B8%BA%E9%9D%A2%E8%AF%95">678. 有效的括号字符串(华为面试)&lt;/a>&lt;/li>
&lt;li>&lt;a href="./#20-%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7">20. 有效的括号&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="只处理一种括号">只处理一种括号&lt;/h3>
&lt;h4 id="题目描述">题目描述&lt;/h4>
&lt;style type="text/css">.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:"Font Awesome 5 Free",FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:'\f071'}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:'\f05a'}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:'\f06a'}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:'\f058'}.notice.tip{background:#e6f9e6}&lt;/style>&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>字符串中只有圆括号 &lt;code>(&lt;/code> 和 &lt;code>)&lt;/code>，判断输入字符串的合法性。&lt;/p>
&lt;p>&lt;strong>示例 2&lt;/strong>&lt;br>
输入：&lt;code>)(&lt;/code>&lt;br>
输出：&lt;code>false&lt;/code>&lt;/p>
&lt;p>&lt;strong>示例 2&lt;/strong>&lt;br>
输入：&lt;code>()))((&lt;/code>&lt;br>
输出：&lt;code>false&lt;/code>&lt;/p>
&lt;p>&lt;strong>示例 3&lt;/strong>&lt;br>
输入：&lt;code>(())()&lt;/code>&lt;br>
输出：&lt;code>true&lt;/code>&lt;/p>&lt;/div>
&lt;h4 id="思路">思路&lt;/h4>
&lt;p>每个右括号 &lt;code>)&lt;/code> 的左边必须有一个左括号 &lt;code>(&lt;/code> 和它匹配&lt;/p>
&lt;h4 id="代码">代码&lt;/h4>
&lt;ul>
&lt;li>栈方法&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">def&lt;/span> &lt;span class="nf">isValid0&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">stack&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;(&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">elif&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">stack&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">False&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">True&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">stack&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="bp">False&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>计数法&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">def&lt;/span> &lt;span class="nf">isValid1&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="bp">False&lt;/span> &lt;span class="c1"># 奇数，直接 False&lt;/span>
&lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;(&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">count&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">count&lt;/span> &lt;span class="o">-=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="bp">False&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="复杂度">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(n)$&lt;/li>
&lt;/ul>
&lt;hr />
&lt;h3 id="678-有效的括号字符串华为面试">678. 有效的括号字符串(华为面试)&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/valid-parenthesis-string/">https://leetcode-cn.com/problems/valid-parenthesis-string/&lt;/a>&lt;/p>
&lt;h4 id="题目描述-1">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给定一个只包含三种字符的字符串：&lt;code>(&lt;/code>, &lt;code>)&lt;/code> 和 &lt;code>*&lt;/code>。写一个函数来检验这个字符串是否为有效字符串。有效字符串具有如下规则：&lt;/p>
&lt;ul>
&lt;li>任何左括号 &lt;code>(&lt;/code> 必须有相应的右括号 &lt;code>)&lt;/code>；&lt;/li>
&lt;li>任何右括号 &lt;code>)&lt;/code> 必须有相应的左括号 &lt;code>(&lt;/code>；&lt;/li>
&lt;li>左括号 &lt;code>(&lt;/code> 必须在对应的右括号 &lt;code>)&lt;/code> 之前；&lt;/li>
&lt;li>&lt;code>*&lt;/code> 可以被视为单个右括号 &lt;code>)&lt;/code>, 或单个左括号 &lt;code>(&lt;/code>, 或一个空字符；&lt;/li>
&lt;li>一个空字符串也被视为有效字符串。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>示例 1：&lt;/strong>&lt;br>
输入：&lt;code>&amp;quot;()&amp;quot;&lt;/code>&lt;br>
输出: &lt;code>true&lt;/code>&lt;/p>
&lt;p>&lt;strong>示例 2：&lt;/strong>&lt;br>
输入：&lt;code>&amp;quot;(*)&amp;quot;&lt;/code>&lt;br>
输出: &lt;code>true&lt;/code>&lt;/p>
&lt;p>&lt;strong>示例 3：&lt;/strong>&lt;br>
输入：&lt;code>&amp;quot;(*))&amp;quot;&lt;/code> &lt;br>
输出: &lt;code>true&lt;/code>&lt;/p>
&lt;p>&lt;strong>注意：&lt;/strong>&lt;br>
字符串大小将在 $[1, 100]$ 范围内。&lt;/p>&lt;/div>
&lt;h4 id="思路-1">思路&lt;/h4>
&lt;ul>
&lt;li>双向遍历
&lt;ul>
&lt;li>左 --&amp;gt; 右&lt;br>
当 &lt;code>)&lt;/code> 左侧没有可匹配的 &lt;code>(&lt;/code> 或 &lt;code>*&lt;/code>，返回 &lt;code>False&lt;/code>&lt;/li>
&lt;li>左 &amp;lt;-- 右&lt;br>
当 &lt;code>(&lt;/code> 右侧没有可匹配的 &lt;code>)&lt;/code> 或 &lt;code>*&lt;/code>，返回 &lt;code>False&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> 双栈法&lt;br>
待补充...&lt;/li>
&lt;/ul>
&lt;h4 id="代码-1">代码&lt;/h4>
&lt;ul>
&lt;li>双向遍历&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">checkValidString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="c1">## 双向遍历&lt;/span>
&lt;span class="c1"># 左 --&amp;gt; 右&lt;/span>
&lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;)&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">count&lt;/span> &lt;span class="o">-=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">count&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="bp">False&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="bp">True&lt;/span>
&lt;span class="c1"># 左 &amp;lt;-- 右&lt;/span>
&lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;(&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">count&lt;/span> &lt;span class="o">-=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">count&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="bp">False&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">True&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>双栈法&lt;/li>
&lt;/ul>
&lt;h4 id="复杂度-1">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(1)$&lt;/li>
&lt;/ul>
&lt;hr />
&lt;h3 id="20-有效的括号">20. 有效的括号&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/valid-parentheses/">https://leetcode-cn.com/problems/valid-parentheses/&lt;/a>&lt;/p>
&lt;h4 id="题目描述-2">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给定一个只包括 &lt;code>'('，')'&lt;/code>，&lt;code>'{'，'}'&lt;/code>，&lt;code>'['，']'&lt;/code> 的字符串 &lt;code>s&lt;/code> ，判断字符串是否有效。&lt;/p>
&lt;p>有效字符串需满足：&lt;/p>
&lt;ol>
&lt;li>左括号必须用相同类型的右括号闭合。&lt;/li>
&lt;li>左括号必须以正确的顺序闭合。&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>示例 1：&lt;/strong>&lt;br>
输入：&lt;code>s = &amp;quot;()&amp;quot;&lt;/code>&lt;br>
输出：&lt;code>true&lt;/code>&lt;/p>
&lt;p>&lt;strong>示例 2：&lt;/strong>&lt;br>
输入：&lt;code>s = &amp;quot;()[]{}&amp;quot;&lt;/code>&lt;br>
输出：&lt;code>true&lt;/code>&lt;/p>
&lt;p>&lt;strong>示例 3：&lt;/strong>&lt;br>
输入：&lt;code>s = &amp;quot;(]&amp;quot;&lt;/code>&lt;br>
输出：&lt;code>false&lt;/code>&lt;/p>
&lt;p>&lt;strong>示例 4：&lt;/strong>&lt;br>
输入：&lt;code>s = &amp;quot;([)]&amp;quot;&lt;/code>&lt;br>
输出：&lt;code>false&lt;/code>&lt;/p>
&lt;p>&lt;strong>示例 5：&lt;/strong>&lt;br>
输入：&lt;code>s = &amp;quot;{[]}&amp;quot;&lt;/code>&lt;br>
输出：&lt;code>true&lt;/code>&lt;/p>
&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>$1 &amp;lt;= s.length &amp;lt;= 10^4$&lt;/li>
&lt;li>&lt;code>s&lt;/code> 仅由括号 &lt;code>()[]{}&lt;/code> 组成&lt;/li>
&lt;/ul>&lt;/div>
&lt;h4 id="思路-2">思路&lt;/h4>
&lt;p>遇到左括号就入栈，遇到右括号就去栈中寻找最近的左括号，看是否匹配。&lt;/p>
&lt;h4 id="代码-2">代码&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">isValid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="c1"># 栈 + 字典&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="bp">False&lt;/span>
&lt;span class="c1"># a = [&amp;#39;(&amp;#39;, &amp;#39;[&amp;#39;, &amp;#39;{&amp;#39;]&lt;/span>
&lt;span class="c1"># b = [&amp;#39;)&amp;#39;, &amp;#39;]&amp;#39;, &amp;#39;}&amp;#39;]&lt;/span>
&lt;span class="c1"># d = dict(zip(b, a))&lt;/span>
&lt;span class="n">d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;)&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s1">&amp;#39;(&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;]&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s1">&amp;#39;[&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;}&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s1">&amp;#39;{&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="n">stack&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">elif&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stack&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">stack&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">False&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stack&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="复杂度-2">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(n)$&lt;/li>
&lt;/ul>
&lt;!--
#### 题目描述
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;/div>
#### 思路
#### 代码
&lt;details>
&lt;summary> Python &lt;/summary>
```python
```
&lt;/details>
#### 复杂度
- 时间复杂度：
- 空间复杂度：
-->&lt;blockquote>
&lt;/blockquote></description><category domain="https://matnoble.me/dsa/">dsa</category><category domain="https://matnoble.me/dsa/top/">top</category><category domain="https://matnoble.me/tags/%E9%AB%98%E9%A2%91%E7%AE%97%E6%B3%95%E9%A2%98/">高频算法题</category><category domain="https://matnoble.me/tags/%E7%BC%96%E7%A8%8B%E5%88%B7%E9%A2%98/">编程刷题</category></item><item><title>栈与队列</title><link>https://matnoble.me/dsa/basic/stack-and-queue/</link><guid isPermaLink="true">https://matnoble.me/dsa/basic/stack-and-queue/</guid><pubDate>Fri, 05 Mar 2021 00:19:30 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h2 id="栈-stack">栈 Stack&lt;/h2>
&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images/Data_stack.svg"/>
&lt;p>&lt;strong>栈&lt;/strong> 具有 &lt;code>先进后出&lt;/code> 特性。有如下几个操作：&lt;/p>
&lt;ul>
&lt;li>&lt;code>push(x)&lt;/code>: 将 &lt;code>x&lt;/code> 压入..栈顶..&lt;/li>
&lt;li>&lt;code>pop()&lt;/code>: 删除并返回..栈顶..元素&lt;/li>
&lt;li>&lt;code>top()&lt;/code>: 返回..栈顶..元素&lt;/li>
&lt;li>&lt;code>isEmpty()&lt;/code>: 判断是否为空&lt;/li>
&lt;/ul>
&lt;hr />
&lt;h2 id="队列-queue">队列 Queue&lt;/h2>
&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images/20210305151512.png"/>
&lt;p>&lt;strong>队列&lt;/strong> 具有 &lt;code>先进先出&lt;/code> 特性。有如下几个操作：&lt;/p>
&lt;ul>
&lt;li>&lt;code>push(x)&lt;/code>: 将 &lt;code>x&lt;/code> 压入..队尾..&lt;/li>
&lt;li>&lt;code>pop()&lt;/code>: 删除并返回..队首..元素&lt;/li>
&lt;li>&lt;code>peek()&lt;/code>: 返回..队首..元素&lt;/li>
&lt;li>&lt;code>isEmpty()&lt;/code>: 判断是否为空&lt;/li>
&lt;/ul>
&lt;hr />
&lt;h2 id="leetcode-题目">LeetCode 题目&lt;/h2>
&lt;h3 id="232-用栈实现队列">232. 用栈实现队列&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/implement-queue-using-stacks/">https://leetcode-cn.com/problems/implement-queue-using-stacks/&lt;/a>&lt;/p>
&lt;h4 id="题目描述">题目描述&lt;/h4>
&lt;style type="text/css">.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:"Font Awesome 5 Free",FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:'\f071'}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:'\f05a'}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:'\f06a'}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:'\f058'}.notice.tip{background:#e6f9e6}&lt;/style>&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>请你仅使用两个栈实现先入先出队列。队列应当支持一般队列的支持的所有操作（&lt;code>push&lt;/code>、&lt;code>pop&lt;/code>、&lt;code>peek&lt;/code>、&lt;code>empty&lt;/code>）：&lt;/p>
&lt;p>实现 &lt;code>MyQueue&lt;/code> 类：&lt;/p>
&lt;ul>
&lt;li>&lt;code>void push(int x)&lt;/code> 将元素 x 推到队列的末尾&lt;/li>
&lt;li>&lt;code>int pop()&lt;/code> 从队列的开头移除并返回元素&lt;/li>
&lt;li>&lt;code>int peek()&lt;/code> 返回队列开头的元素&lt;/li>
&lt;li>&lt;code>boolean empty()&lt;/code> 如果队列为空，返回 &lt;code>true&lt;/code> ；否则，返回 &lt;code>false&lt;/code>
 &lt;/li>
&lt;/ul>
&lt;p>&lt;strong>说明：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>你只能使用标准的栈操作 —— 也就是只有 &lt;code>push to top&lt;/code>, &lt;code>peek/pop from top&lt;/code>, &lt;code>size&lt;/code>, 和 &lt;code>is empty&lt;/code> 操作是合法的。&lt;/li>
&lt;li>你所使用的语言也许不支持栈。你可以使用 list 或者 deque（双端队列）来模拟一个栈，只要是标准的栈操作即可。
 &lt;/li>
&lt;/ul>
&lt;p>&lt;strong>进阶：&lt;/strong>&lt;br>
你能否实现每个操作均摊时间复杂度为 $O(1)$ 的队列？换句话说，执行 $n$ 个操作的总时间复杂度为 $O(n)$ ，即使其中一个操作可能花费较长时间。&lt;/p>
&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>1 &amp;lt;= x &amp;lt;= 9&lt;/code>&lt;/li>
&lt;li>最多调用 100 次 &lt;code>push&lt;/code>、&lt;code>pop&lt;/code>、&lt;code>peek&lt;/code> 和 &lt;code>empty&lt;/code>&lt;/li>
&lt;li>假设所有操作都是有效的 （例如，一个空的队列不会调用 &lt;code>pop&lt;/code> 或者 &lt;code>peek&lt;/code> 操作）&lt;/li>
&lt;/ul>&lt;/div>
&lt;h4 id="思路">思路&lt;/h4>
&lt;ul>
&lt;li>用数组 list 实现栈&lt;/li>
&lt;li>栈与队列的区别：&lt;strong>栈作用于栈顶，队列作用于队首&lt;/strong>
&lt;ul>
&lt;li>&lt;code>pop()&lt;/code>&lt;/li>
&lt;li>&lt;code>peek()&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>设计
&lt;ul>
&lt;li>用 &lt;code>self.a&lt;/code> 记录队首(栈底)元素&lt;/li>
&lt;li>&lt;code>pop()&lt;/code> 操作时，..主栈.. &lt;code>self.A&lt;/code> 需要借助..辅助栈.. &lt;code>self.B&lt;/code>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">while&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>&lt;code>peek()&lt;/code> 操作，直接返回 &lt;code>self.a&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="代码-python">代码 Python&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">MyQueue&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span class="s2"> Initialize your data structure here.
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">B&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[],&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">None&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="bp">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span class="s2"> Push element x to the back of queue.
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">pop&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span class="s2"> Removes the element from in front of queue and returns that element.
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">peek&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span class="s2"> Get the front element.
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">a&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">empty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span class="s2"> Returns whether the queue is empty.
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">A&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr />
&lt;h3 id="225-用队列实现栈">225. 用队列实现栈&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/implement-stack-using-queues/">https://leetcode-cn.com/problems/implement-stack-using-queues/&lt;/a>&lt;/p>
&lt;h4 id="题目描述-1">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>请你仅使用两个队列实现一个后入先出（LIFO）的栈，并支持普通队列的全部四种操作（&lt;code>push&lt;/code>、&lt;code>top&lt;/code>、&lt;code>pop&lt;/code> 和 &lt;code>empty&lt;/code>）。&lt;/p>
&lt;p>实现 &lt;code>MyStack&lt;/code> 类：&lt;/p>
&lt;ul>
&lt;li>&lt;code>void push(int x)&lt;/code> 将元素 &lt;code>x&lt;/code> 压入栈顶。&lt;/li>
&lt;li>&lt;code>int pop()&lt;/code> 移除并返回栈顶元素。&lt;/li>
&lt;li>&lt;code>int top()&lt;/code> 返回栈顶元素。&lt;/li>
&lt;li>&lt;code>boolean empty()&lt;/code> 如果栈是空的，返回 &lt;code>true&lt;/code> ；否则，返回 &lt;code>false&lt;/code> 。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>注意：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>你只能使用队列的基本操作 —— 也就是 &lt;code>push to back&lt;/code>、&lt;code>peek/pop from front&lt;/code>、&lt;code>size&lt;/code> 和 &lt;code>is empty&lt;/code> 这些操作。&lt;/li>
&lt;li>你所使用的语言也许不支持队列。 你可以使用 list （列表）或者 deque（双端队列）来模拟一个队列 , 只要是标准的队列操作即可。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>1 &amp;lt;= x &amp;lt;= 9&lt;/code>&lt;/li>
&lt;li>最多调用100 次 &lt;code>push&lt;/code>、&lt;code>pop&lt;/code>、&lt;code>top&lt;/code> 和 &lt;code>empty&lt;/code>&lt;/li>
&lt;li>每次调用 &lt;code>pop&lt;/code> 和 &lt;code>top&lt;/code> 都保证栈不为空&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>进阶：&lt;/strong> 你能否实现每种操作的均摊时间复杂度为 $O(1)$ 的栈？换句话说，执行 $n$ 个操作的总时间复杂度 $O(n)$ ，尽管其中某个操作可能需要比其他操作更长的时间。你可以使用两个以上的队列。&lt;/p>&lt;/div>
&lt;h4 id="思路-1">思路&lt;/h4>
&lt;ul>
&lt;li>思路类似于 &lt;a href="./#232-%E7%94%A8%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97">232 用栈实现队列&lt;/a>&lt;/li>
&lt;li>用 &lt;code>self.a&lt;/code> 记录栈顶(队尾)元素&lt;/li>
&lt;li>&lt;code>pop()&lt;/code> 操作时，..主队列.. self.A 需要借助..辅助队列.. self.B
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">while&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">popleft&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">popleft&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">popleft&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>&lt;code>top()&lt;/code> 操作时，直接返回 &lt;code>self.a&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="代码-python-1">代码 Python&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">from&lt;/span> &lt;span class="nn">collections&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">deque&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">MyStack&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span class="s2"> Initialize your data structure here.
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">B&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">deque&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">deque&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">None&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="bp">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span class="s2"> Push element x onto stack.
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">pop&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span class="s2"> Removes the element on top of the stack and returns that element.
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">popleft&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">popleft&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">popleft&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">top&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span class="s2"> Get the top element.
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">a&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">empty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span class="s2"> Returns whether the stack is empty.
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description><category domain="https://matnoble.me/dsa/">dsa</category><category domain="https://matnoble.me/dsa/basic/">basic</category><category domain="https://matnoble.me/tags/leetcode%E9%A2%98%E8%A7%A3/">LeetCode题解</category><category domain="https://matnoble.me/tags/%E7%BC%96%E7%A8%8B%E5%88%B7%E9%A2%98/">编程刷题</category></item><item><title>最长递增子序列</title><link>https://matnoble.me/dsa/top/lis/</link><guid isPermaLink="true">https://matnoble.me/dsa/top/lis/</guid><pubDate>Thu, 04 Mar 2021 00:19:30 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h2 id="目录">目录&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="./#674-%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E9%80%92%E5%A2%9E%E5%BA%8F%E5%88%97">674. 最长连续递增序列&lt;/a>&lt;/li>
&lt;li>&lt;a href="./#300-%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97">300. 最长递增子序列&lt;/a>&lt;/li>
&lt;li>&lt;a href="./#354-%E4%BF%84%E7%BD%97%E6%96%AF%E5%A5%97%E5%A8%83%E4%BF%A1%E5%B0%81%E9%97%AE%E9%A2%98">354. 俄罗斯套娃信封问题&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="674-最长连续递增序列">674. 最长连续递增序列&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/longest-continuous-increasing-subsequence/">https://leetcode-cn.com/problems/longest-continuous-increasing-subsequence/&lt;/a>&lt;/p>
&lt;h4 id="题目描述">题目描述&lt;/h4>
&lt;style type="text/css">.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:"Font Awesome 5 Free",FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:'\f071'}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:'\f05a'}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:'\f06a'}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:'\f058'}.notice.tip{background:#e6f9e6}&lt;/style>&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给定一个未经排序的整数数组，找到最长且 &lt;strong>连续递增的子序列&lt;/strong>。，并返回该序列的长度。&lt;/p>
&lt;p>&lt;strong>连续递增的子序列&lt;/strong> 可以由两个下标 &lt;code>l&lt;/code> 和 &lt;code>r&lt;/code>（&lt;code>l &amp;lt; r&lt;/code>）确定，如果对于每个 &lt;code>l &amp;lt;= i &amp;lt; r&lt;/code>，都有 &lt;code>nums[i] &amp;lt; nums[i + 1]&lt;/code>，那么子序列 &lt;code>[nums[l], nums[l + 1], ..., nums[r - 1], nums[r]]&lt;/code> 就是连续递增子序列。&lt;/p>
&lt;p>&lt;strong>示例 1：&lt;/strong>&lt;br>
&lt;strong>输入：&lt;/strong> nums = [1,3,5,4,7]&lt;br>
&lt;strong>输出：&lt;/strong> 3&lt;br>
&lt;strong>解释：&lt;/strong> 最长连续递增序列是 [1,3,5], 长度为3。
尽管 [1,3,5,7] 也是升序的子序列, 但它不是连续的，因为 5 和 7 在原数组里被 4 隔开。&lt;/p>
&lt;p>&lt;strong>示例 2：&lt;/strong>&lt;br>
&lt;strong>输入：&lt;/strong> nums = [2,2,2,2,2]&lt;br>
&lt;strong>输出：&lt;/strong> 1&lt;br>
&lt;strong>解释：&lt;/strong> 最长连续递增序列是 [2], 长度为1。&lt;/p>
&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>$0 \leq nums.length \leq 10^4$&lt;/li>
&lt;li>$-10^9 \leq nums[i] \leq 10^9$&lt;/li>
&lt;/ul>&lt;/div>
&lt;h4 id="思路">思路&lt;/h4>
&lt;ul>
&lt;li>双指针 - 滑动窗口&lt;/li>
&lt;li>使用 &lt;code>while&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="代码">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">findLengthOfLCIS&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="c1"># 滑动窗口&lt;/span>
&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">n&lt;/span>
&lt;span class="n">l&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">r&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">r&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">r&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">]:&lt;/span> &lt;span class="n">r&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">r&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">l&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">r&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">r&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(1)$&lt;/li>
&lt;/ul>
&lt;hr />
&lt;h3 id="300-最长递增子序列">300. 最长递增子序列&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/longest-increasing-subsequence/">https://leetcode-cn.com/problems/longest-increasing-subsequence/&lt;/a>&lt;/p>
&lt;h4 id="题目描述-1">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给你一个整数数组 &lt;code>nums&lt;/code>，找到其中最长严格递增子序列的长度。&lt;/p>
&lt;p>子序列是由数组派生而来的序列，删除（或不删除）数组中的元素而不改变其余元素的顺序。例如，[3,6,2,7] 是数组 [0,3,1,6,2,2,7] 的子序列。&lt;/p>
&lt;p>&lt;strong>示例 1：&lt;/strong>&lt;br>
&lt;strong>输入：&lt;/strong> &lt;code>nums = [10,9,2,5,3,7,101,18]&lt;/code>&lt;br>
&lt;strong>输出：&lt;/strong> &lt;code>4&lt;/code>&lt;br>
&lt;strong>解释：&lt;/strong> 最长递增子序列是 &lt;code>[2,3,7,101]&lt;/code>，因此长度为 &lt;code>4&lt;/code> 。&lt;/p>
&lt;p>&lt;strong>示例 2：&lt;/strong>&lt;br>
&lt;strong>输入：&lt;/strong> &lt;code>nums = [0,1,0,3,2,3]&lt;/code>&lt;br>
&lt;strong>输出：&lt;/strong> &lt;code>4&lt;/code>&lt;/p>
&lt;p>&lt;strong>示例 3：&lt;/strong>&lt;br>
&lt;strong>输入：&lt;/strong> &lt;code>nums = [7,7,7,7,7,7,7]&lt;/code>&lt;br>
&lt;strong>输出：&lt;/strong> &lt;code>1&lt;/code>&lt;/p>
&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>$1 &amp;lt;= nums.length &amp;lt;= 2500$&lt;/li>
&lt;li>$-10^4 &amp;lt;= nums[i] &amp;lt;= 10^4$
 &lt;/li>
&lt;/ul>
&lt;p>&lt;strong>进阶：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>你可以设计时间复杂度为 $O(n^2)$ 的解决方案吗？&lt;/li>
&lt;li>你能将算法的时间复杂度降低到 $O(n log(n))$ 吗?&lt;/li>
&lt;/ul>&lt;/div>
&lt;h4 id="思路-1">思路&lt;/h4>
&lt;h4 id="代码-1">代码&lt;/h4>
&lt;details>
&lt;summary> Python 暴力解&lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">lengthOfLIS&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="err">动态规划&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">暴力解&lt;/span>
&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">dp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">n&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;details>
&lt;summary> Python 动态规划 + 二分 &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">lengthOfLIS&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="c1"># 动态规划 + 二分&lt;/span>
&lt;span class="c1"># 二分： 寻找最左满足条件的索引&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">binary_search&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">mid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="mi">2&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">i&lt;/span>
&lt;span class="c1"># 遍历数组，生成最长单调数组 dp&lt;/span>
&lt;span class="n">n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">num&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">dp&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">dp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">continue&lt;/span>
&lt;span class="n">idx&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">binary_search&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">idx&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">num&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-1">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：
&lt;ul>
&lt;li>暴力解: $O(n^2)$&lt;/li>
&lt;li>动态规划: $O(nlogN)$&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>空间复杂度：$O(n)$&lt;/li>
&lt;/ul>
&lt;hr />
&lt;h3 id="354-俄罗斯套娃信封问题">354. 俄罗斯套娃信封问题&lt;/h3>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://cdn.jsdelivr.net/gh/MatNoble/Images/20210304183914.png"
title="第一次 hard 题 100%"
alt="第一次 hard 题 100%"
width="95%"
>
&lt;span class="caption">◎ 第一次 hard 题 100%&lt;/span>
&lt;/span>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/russian-doll-envelopes/">https://leetcode-cn.com/problems/russian-doll-envelopes/&lt;/a>&lt;/p>
&lt;h4 id="题目描述-2">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给你一个二维整数数组 &lt;code>envelopes&lt;/code>，其中 &lt;code>envelopes[i] = [wi, hi]&lt;/code>，表示第 &lt;code>i&lt;/code> 个信封的宽度和高度。&lt;/p>
&lt;p>当另一个信封的宽度和高度都比这个信封大的时候，这个信封就可以放进另一个信封里，如同俄罗斯套娃一样。&lt;/p>
&lt;p>请计算 &lt;strong>最多能有多少个&lt;/strong> 信封能组成一组“俄罗斯套娃”信封（即可以把一个信封放到另一个信封里面）。&lt;/p>
&lt;p>&lt;strong>注意：&lt;/strong> 不允许旋转信封。&lt;/p>
&lt;p>&lt;strong>示例 1：&lt;/strong>&lt;br>
输入：&lt;code>envelopes = [[5,4],[6,4],[6,7],[2,3]]&lt;/code>&lt;br>
输出：&lt;code>3&lt;/code>&lt;br>
解释：最多信封的个数为 &lt;code>3&lt;/code>, 组合为: &lt;code>[2,3] =&amp;gt; [5,4] =&amp;gt; [6,7]&lt;/code>。&lt;/p>
&lt;p>&lt;strong>示例 2：&lt;/strong>&lt;br>
输入：&lt;code>envelopes = [[1,1],[1,1],[1,1]]&lt;/code>&lt;br>
输出：&lt;code>1&lt;/code>
 &lt;/p>
&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>$1 &amp;lt;= envelopes.length &amp;lt;= 5000$&lt;/li>
&lt;li>$envelopes[i].length == 2$&lt;/li>
&lt;li>$1 &amp;lt;= wi, hi &amp;lt;= 10^4$&lt;/li>
&lt;/ul>&lt;/div>
&lt;h4 id="思路-2">思路&lt;/h4>
&lt;ul>
&lt;li>二维最长递增子序列问题&lt;/li>
&lt;li>优先对 &lt;code>x[:][0]&lt;/code> 列排序，对 &lt;code>x[:][1]&lt;/code> 列次优排序&lt;/li>
&lt;li>对 &lt;code>x[:][1]&lt;/code> 列求最长递增子序列&lt;/li>
&lt;/ul>
&lt;h4 id="代码-2">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">maxEnvelopes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">envelopes&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">]])&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">binary_search&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">l&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">l&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">r&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">mid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">l&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="mi">2&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">l&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">l&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">lis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">num&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">d&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">d&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">continue&lt;/span>
&lt;span class="n">idx&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">binary_search&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">idx&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">num&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">envelopes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">lambda&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">:(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]))&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">lis&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="n">h&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">h&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">envelopes&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-2">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(nlogN)$&lt;/li>
&lt;li>空间复杂度：$O(n)$&lt;/li>
&lt;/ul>
&lt;!--
#### 题目描述
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;/div>
#### 思路
#### 代码
&lt;details>
&lt;summary> Python &lt;/summary>
```python
```
&lt;/details>
#### 复杂度
- 时间复杂度：
- 空间复杂度：
-->&lt;blockquote>
&lt;/blockquote></description><category domain="https://matnoble.me/dsa/">dsa</category><category domain="https://matnoble.me/dsa/top/">top</category><category domain="https://matnoble.me/tags/%E9%AB%98%E9%A2%91%E7%AE%97%E6%B3%95%E9%A2%98/">高频算法题</category><category domain="https://matnoble.me/tags/%E7%BC%96%E7%A8%8B%E5%88%B7%E9%A2%98/">编程刷题</category></item><item><title>二分法</title><link>https://matnoble.me/dsa/topics/binary-search/</link><guid isPermaLink="true">https://matnoble.me/dsa/topics/binary-search/</guid><pubDate>Mon, 01 Mar 2021 00:20:30 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h1 id="目录">目录&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="./#%E4%BA%8C%E5%88%86%E6%A8%A1%E6%9D%BF">二分模板&lt;/a>
&lt;ul>
&lt;li>&lt;a href="./#%E6%A8%A1%E6%9D%BF-1">模板 1&lt;/a>&lt;/li>
&lt;li>&lt;a href="./#%E6%A8%A1%E6%9D%BF-2">模板 2&lt;/a>&lt;/li>
&lt;li>&lt;a href="./#%E6%A8%A1%E6%9D%BF-3">模板 3&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="./#%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98">每日一题&lt;/a>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#69-x-%E7%9A%84%E5%B9%B3%E6%96%B9%E6%A0%B9">69. x 的平方根&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#278-%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%94%99%E8%AF%AF%E7%9A%84%E7%89%88%E6%9C%AC">278. 第一个错误的版本&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#triple-inversion">Triple Inversion&lt;/a>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;a href="./#minimum-light-radius">Minimum-Light-Radius&lt;/a>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;a href="">Kth-Pair-Distance&lt;/a>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;a href="./#778-%E6%B0%B4%E4%BD%8D%E4%B8%8A%E5%8D%87%E7%9A%84%E6%B3%B3%E6%B1%A0%E4%B8%AD%E6%B8%B8%E6%B3%B3">778. 水位上升的泳池中游泳&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="./#%E6%8E%A8%E8%8D%90%E9%A2%98%E7%9B%AE">推荐题目&lt;/a>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#33-%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84">33. 搜索旋转排序数组&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#81-%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84-ii">81. 搜索旋转排序数组 II&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="二分模板">二分模板&lt;/h2>
&lt;p>&lt;strong>两大基本原则&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>每次都要&lt;strong>缩减搜索区域&lt;/strong>&lt;/li>
&lt;li>每次缩减&lt;strong>不能排除潜在答案&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://colab.research.google.com/drive/1UyuRUzcDGW_tsT7GCRNRdO8pu6I718pY?usp=sharing">Google Colab&lt;/a>&lt;/p>
&lt;h3 id="模板-1">模板 1&lt;/h3>
&lt;p>&lt;strong>找一个准确值&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>循环条件：&lt;code>l &amp;lt;= r&lt;/code>&lt;/li>
&lt;li>缩减搜索空间：&lt;code>l = mid + 1, r = mid - 1&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">def&lt;/span> &lt;span class="nf">binarySearch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">l&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">l&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">r&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">mid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">l&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">l&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="mi">2&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">mid&lt;/span> &lt;span class="c1"># 返回索引&lt;/span>
&lt;span class="k">elif&lt;/span> &lt;span class="n">target&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="n">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">l&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="模板-2">模板 2&lt;/h3>
&lt;p>&lt;strong>找一个模糊值&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>循环条件：&lt;code>l &amp;lt; r&lt;/code>&lt;/li>
&lt;li>缩减搜索空间：&lt;code>l = mid, r = mid - 1&lt;/code> 或者 &lt;code>l = mid + 1, r = mid&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">def&lt;/span> &lt;span class="nf">fuzzy_search_small&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">l&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">l&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">r&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">mid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">l&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">l&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="mi">2&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">l&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">target&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">def&lt;/span> &lt;span class="nf">fuzzy_search_big&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">l&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">l&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">r&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">mid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">l&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">l&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">l&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">target&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="模板-3">模板 3&lt;/h3>
&lt;p>&lt;strong>万用型&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>循环条件：&lt;code>l &amp;lt; r - 1&lt;/code>&lt;/li>
&lt;li>缩减搜索空间：&lt;code>l = mid, r = mid&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">def&lt;/span> &lt;span class="nf">fuzzy_search&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">l&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">l&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">r&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">mid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">l&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="mi">2&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="c1"># 返回索引&lt;/span>
&lt;span class="k">elif&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">l&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>
&lt;span class="n">tmp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mf">2.0&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mf">2.0&lt;/span> &lt;span class="c1"># 中间值&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">target&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">tmp&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">r&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">elif&lt;/span> &lt;span class="n">target&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">tmp&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="每日一题">每日一题&lt;/h2>
&lt;h3 id="69-x-的平方根">69. x 的平方根&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/sqrtx/">https://leetcode-cn.com/problems/sqrtx/&lt;/a>&lt;/p>
&lt;h4 id="题目描述">题目描述&lt;/h4>
&lt;style type="text/css">.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:"Font Awesome 5 Free",FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:'\f071'}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:'\f05a'}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:'\f06a'}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:'\f058'}.notice.tip{background:#e6f9e6}&lt;/style>&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>实现 &lt;code>int sqrt(int x)&lt;/code> 函数。&lt;/p>
&lt;p>计算并返回 &lt;code>x&lt;/code> 的平方根，其中 &lt;code>x&lt;/code> 是非负整数。&lt;/p>
&lt;p>由于返回类型是整数，结果只保留整数的部分，小数部分将被舍去。&lt;/p>
&lt;p>&lt;strong>示例 1:&lt;/strong>&lt;br>
&lt;strong>输入:&lt;/strong> 4&lt;br>
&lt;strong>输出:&lt;/strong> 2&lt;/p>
&lt;p>&lt;strong>示例 2:&lt;/strong>&lt;br>
&lt;strong>输入:&lt;/strong> 8&lt;br>
&lt;strong>输出:&lt;/strong> 2&lt;br>
&lt;strong>说明:&lt;/strong> 8 的平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。&lt;/p>&lt;/div>
&lt;h4 id="思路">思路&lt;/h4>
&lt;ul>
&lt;li>解 $\sqrt{n} \leq \frac{n}{2}$:
&lt;ul>
&lt;li>$n = 0$, &lt;code>return 0&lt;/code>&lt;/li>
&lt;li>$1 \leq n \leq 3$, &lt;code>return 1&lt;/code>&lt;/li>
&lt;li>$n \geq 4$, 满足 $\sqrt{n} \leq \frac{n}{2}$&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>在 $\left[1, n//2\right]$ 内二分&lt;/li>
&lt;li>利于..除法..判断: &lt;code>mid &amp;gt; x/mid&lt;/code>, 避免溢出&lt;/li>
&lt;/ul>
&lt;h4 id="代码">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">mySqrt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">mid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">mid&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">i&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(logX)$&lt;/li>
&lt;li>空间复杂度：$O(1)$&lt;/li>
&lt;/ul>
&lt;h3 id="278-第一个错误的版本">278. 第一个错误的版本&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/first-bad-version/">https://leetcode-cn.com/problems/first-bad-version/&lt;/a>&lt;/p>
&lt;h4 id="题目描述-1">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>你是产品经理，目前正在带领一个团队开发新的产品。不幸的是，你的产品的最新版本没有通过质量检测。由于每个版本都是基于之前的版本开发的，所以错误的版本之后的所有版本都是错的。&lt;/p>
&lt;p>假设你有 &lt;code>n&lt;/code> 个版本 &lt;code>[1, 2, ..., n]&lt;/code>，你想找出导致之后所有版本出错的第一个错误的版本。&lt;/p>
&lt;p>你可以通过调用 &lt;code>bool isBadVersion(version)&lt;/code> 接口来判断版本号 &lt;code>version&lt;/code> 是否在单元测试中出错。实现一个函数来查找第一个错误的版本。你应该尽量减少对调用 &lt;code>API&lt;/code> 的次数。&lt;/p>
&lt;p>&lt;strong>示例:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>给定 n = 5，并且 version = 4 是第一个错误的版本。
调用 isBadVersion(3) -&amp;gt; false
调用 isBadVersion(5) -&amp;gt; true
调用 isBadVersion(4) -&amp;gt; true
所以，4 是第一个错误的版本。 
&lt;/code>&lt;/pre>&lt;/div>
&lt;h4 id="思路-1">思路&lt;/h4>
&lt;ul>
&lt;li>简单二分思路&lt;/li>
&lt;li>相当于二元递增数组 &lt;code>[0, 0, 0, 1, 1]&lt;/code>&lt;/li>
&lt;li>找到第一个 &lt;code>1&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="代码-1">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># The isBadVersion API is already defined for you.&lt;/span>
&lt;span class="c1"># @param version, an integer&lt;/span>
&lt;span class="c1"># @return an integer&lt;/span>
&lt;span class="c1"># def isBadVersion(version):&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">firstBadVersion&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span class="s2"> :type n: int
&lt;/span>&lt;span class="s2"> :rtype: int
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">mid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">isBadVersion&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">i&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-1">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(logN)$&lt;/li>
&lt;li>空间复杂度：$O(1)$&lt;/li>
&lt;/ul>
&lt;h3 id="triple-inversion">Triple Inversion&lt;/h3>
&lt;p>&lt;a href="https://binarysearch.com/problems/Triple-Inversion">https://binarysearch.com/problems/Triple-Inversion&lt;/a>&lt;/p>
&lt;h4 id="题目描述-2">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>Given a list of integers nums, return the number of pairs &lt;code>i &amp;lt; j&lt;/code> such that &lt;code>nums[i] &amp;gt; nums[j] * 3&lt;/code>.&lt;/p>
&lt;p>&lt;strong>Constraints&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>n ≤ 100,000&lt;/code> where &lt;code>n&lt;/code> is the length of &lt;code>nums&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Example&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Input&lt;br>
&lt;code>nums = [7, 1, 2]&lt;/code>&lt;/li>
&lt;li>Output&lt;br>
&lt;code>2&lt;/code>&lt;/li>
&lt;li>Explanation&lt;br>
&lt;code>We have the pairs (7, 1) and (7, 2)&lt;/code>&lt;/li>
&lt;/ul>&lt;/div>
&lt;h4 id="思路-2">思路&lt;/h4>
&lt;ul>
&lt;li>构造递增数组 &lt;code>d&lt;/code>&lt;/li>
&lt;li>借助 &lt;a href="https://docs.python.org/zh-cn/3.9/library/bisect.html">bisect&lt;/a> 模块，边插入边排序&lt;/li>
&lt;/ul>
&lt;h4 id="代码-2">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">solve&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">res&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">num&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">idx&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">bisect&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">bisect_right&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 返回最右侧索引&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">idx&lt;/span>
&lt;span class="n">bisect&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">insort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-2">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n^2)$&lt;/li>
&lt;li>空间复杂度：$O(n)$&lt;/li>
&lt;/ul>
&lt;h3 id="minimum-light-radius">Minimum-Light-Radius&lt;/h3>
&lt;p>&lt;a href="https://binarysearch.com/problems/Minimum-Light-Radius">https://binarysearch.com/problems/Minimum-Light-Radius&lt;/a>&lt;/p>
&lt;h4 id="题目描述-3">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;/div>
&lt;h4 id="思路-3">思路&lt;/h4>
&lt;h4 id="代码-3">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-3">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：&lt;/li>
&lt;li>空间复杂度：&lt;/li>
&lt;/ul>
&lt;h2 id="推荐题目">推荐题目&lt;/h2>
&lt;h3 id="33-搜索旋转排序数组">33. 搜索旋转排序数组&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/search-in-rotated-sorted-array/">https://leetcode-cn.com/problems/search-in-rotated-sorted-array/&lt;/a>&lt;/p>
&lt;h4 id="题目描述-4">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>整数数组 &lt;code>nums&lt;/code> 按升序排列，数组中的值 &lt;strong>互不相同&lt;/strong> 。&lt;/p>
&lt;p>在传递给函数之前，&lt;code>nums&lt;/code> 在预先未知的某个下标 &lt;code>k（0 &amp;lt;= k &amp;lt; nums.length）&lt;/code>上进行了 &lt;strong>旋转&lt;/strong>，使数组变为 &lt;code>[nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]]&lt;/code>（下标 &lt;strong>从 0 开始&lt;/strong> 计数）。例如， $[0,1,2,4,5,6,7]$ 在下标 $3$ 处经旋转后可能变为 $[4,5,6,7,0,1,2]$&lt;/p>
&lt;p>给你 &lt;strong>旋转后&lt;/strong> 的数组 &lt;code>nums&lt;/code> 和一个整数 &lt;code>target&lt;/code> ，如果 &lt;code>nums&lt;/code> 中存在这个目标值 &lt;code>target&lt;/code>，则返回它的索引，否则返回 $-1$&lt;/p>
&lt;p>&lt;strong>示例 1：&lt;/strong>&lt;br>
&lt;strong>输入：&lt;/strong> $nums = [4,5,6,7,0,1,2], \ target = 0$&lt;br>
&lt;strong>输出：&lt;/strong> $4$&lt;/p>
&lt;p>&lt;strong>示例 2：&lt;/strong>&lt;br>
&lt;strong>输入：&lt;/strong> $nums = [4,5,6,7,0,1,2], \ target = 3$&lt;br>
&lt;strong>输出：&lt;/strong> $-1$&lt;/p>
&lt;p>&lt;strong>示例 3：&lt;/strong>&lt;br>
&lt;strong>输入：&lt;/strong> $nums = [1],\ target = 0$&lt;br>
&lt;strong>输出：&lt;/strong> $-1$&lt;/p>
&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>$1 \leq nums.length \leq 5000$&lt;/li>
&lt;li>$-10^4 \leq nums[i] \leq 10^4$&lt;/li>
&lt;li>&lt;code>nums&lt;/code> 中的每个值都 &lt;strong>独一无二&lt;/strong>&lt;/li>
&lt;li>&lt;code>nums&lt;/code> 肯定会在某个点上旋转&lt;/li>
&lt;li>$-10^4 \leq target \leq 10^4$&lt;/li>
&lt;/ul>&lt;/div>
&lt;h4 id="思路-4">思路&lt;/h4>
&lt;ul>
&lt;li>二分法，&lt;strong>每次必须缩小区间，不能去掉可能解&lt;/strong>&lt;/li>
&lt;li>&lt;code>nums[left] &amp;lt;= nums[mid]&lt;/code> $\Longrightarrow$ 左侧为有序序列
&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images/20210301201056.png"/>&lt;/li>
&lt;li>&lt;code>nums[left] &amp;gt; nums[mid]&lt;/code> $\Longrightarrow$ 右侧为有序序列
&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images/20210301201339.png"/>&lt;/li>
&lt;/ul>
&lt;h4 id="代码-4">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">search&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">left&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">right&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">left&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">right&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">mid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">left&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="mi">2&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">mid&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]:&lt;/span> &lt;span class="c1"># 左侧为有序序列&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">target&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="n">right&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">left&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1"># 右侧为有序序列&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">target&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="n">left&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">right&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-4">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(logN)$&lt;/li>
&lt;li>空间复杂度：$O(1)$&lt;/li>
&lt;/ul>
&lt;h3 id="81-搜索旋转排序数组-ii">81. 搜索旋转排序数组 II&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/search-in-rotated-sorted-array-ii/">https://leetcode-cn.com/problems/search-in-rotated-sorted-array-ii/&lt;/a>&lt;/p>
&lt;h4 id="题目描述-5">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>假设按照升序排序的数组在预先未知的某个点上进行了旋转。&lt;/p>
&lt;p>( 例如，数组 $[0,0,1,2,2,5,6]$ 可能变为 $[2,5,6,0,0,1,2]$ )。&lt;/p>
&lt;p>编写一个函数来判断给定的目标值是否存在于数组中。若存在返回 &lt;code>true&lt;/code>，否则返回 &lt;code>false&lt;/code>。&lt;/p>
&lt;p>&lt;strong>示例 1:&lt;/strong>&lt;br>
&lt;strong>输入:&lt;/strong> nums = [2,5,6,0,0,1,2], target = 0&lt;br>
&lt;strong>输出:&lt;/strong> &lt;code>true&lt;/code>&lt;/p>
&lt;p>&lt;strong>示例 2:&lt;/strong>&lt;br>
&lt;strong>输入:&lt;/strong> nums = [2,5,6,0,0,1,2], target = 3&lt;br>
&lt;strong>输出:&lt;/strong> &lt;code>false&lt;/code>&lt;/p>&lt;/div>
&lt;h4 id="思路-5">思路&lt;/h4>
&lt;ul>
&lt;li>相对于 &lt;a href="./#33-%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84">33. 搜索旋转排序数组&lt;/a>，本题中&lt;strong>元素可能重复&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">while&lt;/span> &lt;span class="n">left&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">mid&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]:&lt;/span> &lt;span class="c1"># 消除重复元素&lt;/span>
&lt;span class="n">left&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="代码-5">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">search&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">left&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">right&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">left&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">right&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">mid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">left&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="mi">2&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="bp">True&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">left&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">mid&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="n">left&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="c1"># 消除重复元素&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]:&lt;/span> &lt;span class="c1"># 左侧为有序序列&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">target&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="n">right&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">left&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1"># 右侧为有序序列&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">target&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="n">left&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">right&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">False&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-5">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(logN)$&lt;/li>
&lt;li>空间复杂度：$O(1)$&lt;/li>
&lt;/ul>
&lt;!-- 模板
#### 题目描述
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;/div>
#### 思路
#### 代码
&lt;details>
&lt;summary> Python &lt;/summary>
```python
```
&lt;/details>
#### 复杂度
- 时间复杂度：
- 空间复杂度：
-->&lt;blockquote>
&lt;/blockquote></description><category domain="https://matnoble.me/dsa/">dsa</category><category domain="https://matnoble.me/dsa/topics/">topics</category><category domain="https://matnoble.me/tags/%E5%8F%8C%E6%8C%87%E9%92%88/">双指针</category><category domain="https://matnoble.me/tags/%E7%BC%96%E7%A8%8B%E5%88%B7%E9%A2%98/">编程刷题</category><category domain="https://matnoble.me/tags/%E4%BA%8C%E5%88%86%E6%B3%95/">二分法</category></item><item><title>滑动窗口</title><link>https://matnoble.me/dsa/topics/sliding-window/</link><guid isPermaLink="true">https://matnoble.me/dsa/topics/sliding-window/</guid><pubDate>Mon, 01 Mar 2021 00:19:30 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h1 id="目录">目录&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="./#%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98">每日一题&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#1456-%E5%AE%9A%E9%95%BF%E5%AD%90%E4%B8%B2%E4%B8%AD%E5%85%83%E9%9F%B3%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE">1456. 定长子串中元音的最大数目&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#837-%E6%96%B021%E7%82%B9">837. 新21点&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#438-%E6%89%BE%E5%88%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E6%89%80%E6%9C%89%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D">438. 找到字符串中所有字母异位词&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#76-%E6%9C%80%E5%B0%8F%E8%A6%86%E7%9B%96%E5%AD%97%E4%B8%B2">76. 最小覆盖字串&lt;/a>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;a href="">Number of Operations to Decrement Target to Zero&lt;/a>&lt;/li>
&lt;li>&lt;a href="./#%E6%8E%A8%E8%8D%90%E9%A2%98%E7%9B%AE">推荐&lt;/a>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#239-%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%9C%80%E5%A4%A7%E5%80%BC">239. 滑动窗口最大值&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#3-%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%97%E4%B8%B2">3. 无重复字符的最长字串&lt;/a>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;a href="./#438-%E6%89%BE%E5%88%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E6%89%80%E6%9C%89%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D">438. 找到字符串中所有字母异位词&lt;/a>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;a href="./#567-%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%8E%92%E5%88%97">567. 字符串的排列&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="1456-定长子串中元音的最大数目">1456. 定长子串中元音的最大数目&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/maximum-number-of-vowels-in-a-substring-of-given-length/">https://leetcode-cn.com/problems/maximum-number-of-vowels-in-a-substring-of-given-length/&lt;/a>&lt;/p>
&lt;h4 id="题目描述">题目描述&lt;/h4>
&lt;style type="text/css">.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:"Font Awesome 5 Free",FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:'\f071'}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:'\f05a'}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:'\f06a'}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:'\f058'}.notice.tip{background:#e6f9e6}&lt;/style>&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给你字符串 &lt;code>s&lt;/code> 和整数 &lt;code>k&lt;/code> 。&lt;/p>
&lt;p>请返回字符串 &lt;code>s&lt;/code> 中长度为 &lt;code>k&lt;/code> 的单个子字符串中可能包含的最大元音字母数。&lt;/p>
&lt;p>英文中的 &lt;strong>元音字母&lt;/strong> 为（&lt;code>a&lt;/code>, &lt;code>e&lt;/code>, &lt;code>i&lt;/code>, &lt;code>o&lt;/code>, &lt;code>u&lt;/code>）。&lt;/p>
&lt;p>&lt;strong>示例 1：&lt;/strong>&lt;br>
&lt;strong>输入：&lt;/strong> s = &amp;quot;abciiidef&amp;quot;, k = 3&lt;br>
&lt;strong>输出：&lt;/strong> 3&lt;br>
&lt;strong>解释：&lt;/strong> 子字符串 &amp;quot;iii&amp;quot; 包含 3 个元音字母。&lt;/p>
&lt;p>&lt;strong>示例 2：&lt;/strong>&lt;br>
&lt;strong>输入：&lt;/strong> s = &amp;quot;aeiou&amp;quot;, k = 2&lt;br>
&lt;strong>输出：&lt;/strong> 2&lt;br>
&lt;strong>解释：&lt;/strong> 任意长度为 2 的子字符串都包含 2 个元音字母。&lt;/p>
&lt;p>&lt;strong>示例 3：&lt;/strong>&lt;br>
&lt;strong>输入：&lt;/strong> s = &amp;quot;leetcode&amp;quot;, k = 3&lt;br>
&lt;strong>输出：&lt;/strong> 2&lt;br>
&lt;strong>解释：&lt;/strong> &amp;quot;lee&amp;quot;、&amp;quot;eet&amp;quot; 和 &amp;quot;ode&amp;quot; 都包含 2 个元音字母。&lt;/p>
&lt;p>&lt;strong>示例 4：&lt;/strong>&lt;br>
&lt;strong>输入：&lt;/strong> s = &amp;quot;rhythms&amp;quot;, k = 4&lt;br>
&lt;strong>输出：&lt;/strong> 0
&lt;strong>解释：&lt;/strong> 字符串 s 中不含任何元音字母。&lt;/p>
&lt;p>&lt;strong>示例 5：&lt;/strong>&lt;br>
&lt;strong>输入：&lt;/strong> s = &amp;quot;tryhard&amp;quot;, k = 4&lt;br>
&lt;strong>输出：&lt;/strong> 1&lt;/p>
&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>$1 &amp;lt;= s.length &amp;lt;= 10^5$&lt;/li>
&lt;li>&lt;code>s&lt;/code> 由小写英文字母组成&lt;/li>
&lt;li>$1 &amp;lt;= k &amp;lt;= s.length$&lt;/li>
&lt;/ul>&lt;/div>
&lt;h4 id="思路">思路&lt;/h4>
&lt;ul>
&lt;li>滑动固定长度窗口&lt;/li>
&lt;li>用 &lt;code>count&lt;/code> 记录窗口内元音字母个数&lt;/li>
&lt;li>返回 &lt;code>res&lt;/code> 为 &lt;code>count&lt;/code> 的最大值&lt;/li>
&lt;/ul>
&lt;h4 id="代码">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">maxVowels&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">count&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">table&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;e&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;i&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;o&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;u&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">table&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">count&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">table&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">-=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">table&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">res&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">break&lt;/span>
&lt;span class="k">elif&lt;/span> &lt;span class="n">res&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">count&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">count&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(1)$&lt;/li>
&lt;/ul>
&lt;h3 id="837-新21点">837. 新21点&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/new-21-game/">https://leetcode-cn.com/problems/new-21-game/&lt;/a>&lt;/p>
&lt;h4 id="题目描述-1">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>爱丽丝参与一个大致基于纸牌游戏 &lt;strong>“21点”&lt;/strong> 规则的游戏，描述如下：&lt;/p>
&lt;p>爱丽丝以 &lt;code>0&lt;/code> 分开始，并在她的得分少于 &lt;code>K&lt;/code> 分时抽取数字。 抽取时，她从 &lt;code>[1, W]&lt;/code> 的范围中随机获得一个整数作为分数进行累计，其中 &lt;code>W&lt;/code> 是整数。 每次抽取都是独立的，其结果具有相同的概率。&lt;/p>
&lt;p>当爱丽丝获得不少于 &lt;code>K&lt;/code> 分时，她就停止抽取数字。 爱丽丝的分数不超过 &lt;code>N&lt;/code> 的概率是多少？&lt;/p>
&lt;p>&lt;strong>示例 1：&lt;/strong>&lt;br>
输入：N = 10, K = 1, W = 10&lt;br>
输出：1.00000&lt;br>
说明：爱丽丝得到一张卡，然后停止。&lt;/p>
&lt;p>&lt;strong>示例 2：&lt;/strong>&lt;br>
输入：N = 6, K = 1, W = 10&lt;br>
输出：0.60000&lt;br>
说明：爱丽丝得到一张卡，然后停止。
在 W = 10 的 6 种可能下，她的得分不超过 N = 6 分。&lt;/p>
&lt;p>&lt;strong>示例 3：&lt;/strong>&lt;br>
输入：N = 21, K = 17, W = 10&lt;br>
输出：0.73278&lt;/p>
&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>$0 &amp;lt;= K &amp;lt;= N &amp;lt;= 10000$&lt;/li>
&lt;li>$1 &amp;lt;= W &amp;lt;= 10000$
如果答案与正确答案的误差不超过 $10^-5$，则该答案将被视为正确答案通过。
此问题的判断限制时间已经减少。&lt;/li>
&lt;/ul>&lt;/div>
&lt;h4 id="思路-1">思路&lt;/h4>
&lt;ul>
&lt;li>当游戏停止时，爱丽丝手中可能的..分数..区间为：$[0, K+W-1]$&lt;/li>
&lt;li>创建长度为 &lt;code>K+W&lt;/code> 的 &lt;code>dp&lt;/code> 数组，初始化为 &lt;code>0&lt;/code>。其中，&lt;code>dp[i]&lt;/code> 表示游戏结束时，得分为 &lt;code>i&lt;/code> 时获胜的概率。&lt;/li>
&lt;li>当 &lt;code>i &amp;gt;= K &lt;/code> 时，概率是可以确定的：
&lt;ul>
&lt;li>&lt;code>dp[K:N+1] = [1] * (N-K+1)&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>当 &lt;code>i &amp;lt; K&lt;/code> 时
&lt;ul>
&lt;li>计算 &lt;code>dp[K-1]&lt;/code>
再抽一次一定可以停止，所以取这 &lt;code>W&lt;/code> 个数的..期望..
$$
dp[K-1] = \frac{1}{W} (dp[K] + dp[K+1] + \cdots + dp[K+W-1])
$$&lt;/li>
&lt;li>计算 &lt;code>dp[K-2]&lt;/code>
&lt;ul>
&lt;li>若抽取 $1$ 则达到..状态..&lt;code>dp[K-1]&lt;/code>
$$
p_1 = \frac{1}{W} dp[K-1]
$$&lt;/li>
&lt;li>若抽取到 $[2, W]$ 中的值，停止游戏
$$
p_2 = \frac{1}{W} (dp[K] + dp[K+1] + \cdots + dp[K+W-2])
$$
综上
\begin{align*}
dp[K-2] &amp;amp;= p_1 + p_2 \\
&amp;amp;= \frac{1}{W} (dp[K-1] + dp[K+1] + \cdots + dp[K+W-2])
\end{align*}&lt;/li>
&lt;li>递推下去，得到
$$
dp[i] = \frac{1}{W} \sum_{c=1}^{W}dp[i+c]
$$&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>最终返回 &lt;code>dp[0]&lt;/code>, 即得分为 $0$ 时, 也即未作出选择时，最终获胜的概率&lt;/li>
&lt;/ul>
&lt;h4 id="代码-1">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">new21Game&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">N&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">K&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">W&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">float&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">dp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">K&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">W&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># 概率确定&lt;/span>
&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">K&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">N&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">N&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">K&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">sum_&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">N&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">K&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># 递推计算概率&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">K&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sum_&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">W&lt;/span>
&lt;span class="n">sum_&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">W&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-1">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(K+W)$&lt;/li>
&lt;li>空间复杂度：$O(K+W)$&lt;/li>
&lt;/ul>
&lt;h3 id="438-找到字符串中所有字母异位词">438. 找到字符串中所有字母异位词&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/find-all-anagrams-in-a-string/">https://leetcode-cn.com/problems/find-all-anagrams-in-a-string/&lt;/a>&lt;/p>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给定一个字符串 &lt;code>s&lt;/code> 和一个非空字符串 &lt;code>p&lt;/code>，找到 &lt;code>s&lt;/code> 中所有是 &lt;code>p&lt;/code> 的字母异位词的子串，返回这些子串的起始索引。&lt;/p>
&lt;p>字符串只包含小写英文字母，并且字符串 &lt;code>s&lt;/code> 和 &lt;code>p&lt;/code> 的长度都不超过 &lt;code>20100&lt;/code>。&lt;/p>
&lt;p>&lt;strong>说明：&lt;/strong>&lt;br>
字母异位词指字母相同，但排列不同的字符串。&lt;br>
不考虑答案输出的顺序。&lt;/p>
&lt;p>&lt;strong>示例 1:&lt;/strong>&lt;br>
&lt;strong>输入:&lt;/strong> &lt;code>s: &amp;quot;cbaebabacd&amp;quot; p: &amp;quot;abc&amp;quot;&lt;/code>&lt;br>
&lt;strong>输出:&lt;/strong> &lt;code>[0, 6]&lt;/code>&lt;br>
&lt;strong>解释:&lt;/strong>&lt;br>
起始索引等于 &lt;code>0&lt;/code> 的子串是 &lt;code>&amp;quot;cba&amp;quot;&lt;/code>, 它是 &lt;code>&amp;quot;abc&amp;quot;&lt;/code> 的字母异位词。&lt;br>
起始索引等于 &lt;code>6&lt;/code> 的子串是 &lt;code>&amp;quot;bac&amp;quot;&lt;/code>, 它是 &lt;code>&amp;quot;abc&amp;quot;&lt;/code> 的字母异位词。&lt;/p>
&lt;p>&lt;strong>示例 2:&lt;/strong>&lt;br>
&lt;strong>输入:&lt;/strong> &lt;code>s: &amp;quot;abab&amp;quot; p: &amp;quot;ab&amp;quot;&lt;/code>&lt;br>
&lt;strong>输出:&lt;/strong> &lt;code>[0, 1, 2]&lt;/code>&lt;/p>
&lt;p>&lt;strong>解释:&lt;/strong>&lt;br>
起始索引等于 &lt;code>0&lt;/code> 的子串是 &lt;code>&amp;quot;ab&amp;quot;&lt;/code>, 它是 &lt;code>&amp;quot;ab&amp;quot;&lt;/code> 的字母异位词。&lt;br>
起始索引等于 &lt;code>1&lt;/code> 的子串是 &lt;code>&amp;quot;ba&amp;quot;&lt;/code>, 它是 &lt;code>&amp;quot;ab&amp;quot;&lt;/code> 的字母异位词。&lt;br>
起始索引等于 &lt;code>2&lt;/code> 的子串是 &lt;code>&amp;quot;ab&amp;quot;&lt;/code>, 它是 &lt;code>&amp;quot;ab&amp;quot;&lt;/code> 的字母异位词。&lt;/p>&lt;/div>
&lt;h4 id="思路-2">思路&lt;/h4>
&lt;ul>
&lt;li>固定窗口大小 &lt;code>len(p)&lt;/code>&lt;/li>
&lt;li>创建..计数表.. &lt;code>window&lt;/code> 和 &lt;code>need&lt;/code>&lt;/li>
&lt;li>判断左窗口元素 &lt;code>s[i]&lt;/code> 和右窗口元素 &lt;code>s[i+n]&lt;/code> 是否属于 &lt;code>need&lt;/code> 计数表，更新计数表 &lt;code>window&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="代码-2">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">findAnagrams&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="kn">from&lt;/span> &lt;span class="nn">collections&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">defaultdict&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Counter&lt;/span>
&lt;span class="n">m&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">window&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">need&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">defaultdict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">Counter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">need&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">window&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">window&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">need&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">need&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">window&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]]&lt;/span> &lt;span class="o">-=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">need&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">window&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">]]&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">window&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">need&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-2">复杂度&lt;/h4>
&lt;p>$n$ 为 &lt;code>s&lt;/code> 和 &lt;code>p&lt;/code> 长度之和，$m$ 为 &lt;code>p&lt;/code> 中不重复元素数量&lt;/p>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(m)$&lt;/li>
&lt;/ul>
&lt;h3 id="76-最小覆盖字串">76. 最小覆盖字串&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/minimum-window-substring/">https://leetcode-cn.com/problems/minimum-window-substring/&lt;/a>&lt;/p>
&lt;h4 id="题目描述-2">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给你一个字符串 &lt;code>s&lt;/code> 、一个字符串 &lt;code>t&lt;/code> 。返回 &lt;code>s&lt;/code> 中涵盖 &lt;code>t&lt;/code> 所有字符的最小子串。如果 &lt;code>s&lt;/code> 中不存在涵盖 &lt;code>t&lt;/code> 所有字符的子串，则返回空字符串 &lt;code>&amp;quot;&amp;quot;&lt;/code> 。&lt;/p>
&lt;p>&lt;strong>注意：&lt;/strong> 如果 &lt;code>s&lt;/code> 中存在这样的子串，我们保证它是唯一的答案。&lt;/p>
&lt;p>&lt;strong>示例 1：&lt;/strong>&lt;br>
&lt;strong>输入：&lt;/strong> s = &amp;quot;ADOBECODEBANC&amp;quot;, t = &amp;quot;ABC&amp;quot;&lt;br>
&lt;strong>输出：&lt;/strong> &amp;quot;BANC&amp;quot;&lt;/p>
&lt;p>&lt;strong>示例 2：&lt;/strong>&lt;br>
&lt;strong>输入：&lt;/strong> s = &amp;quot;a&amp;quot;, t = &amp;quot;a&amp;quot;&lt;br>
&lt;strong>输出：&lt;/strong> &amp;quot;a&amp;quot;&lt;/p>
&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>$1 &amp;lt;= s.length, ~t.length &amp;lt;= 10^5$&lt;/li>
&lt;li>s 和 t 由英文字母组成&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>进阶：&lt;/strong> 你能设计一个在 o(n) 时间内解决此问题的算法吗？&lt;/p>&lt;/div>
&lt;h4 id="思路-3">思路&lt;/h4>
&lt;ul>
&lt;li>增加 &lt;code>valid&lt;/code> 值来..缩放..滑动窗口&lt;/li>
&lt;li>使用..滑动窗口..遍历之前，做一些时间复杂度小于 $O(n)$ 的判断，可有可无，极端情况可不用滑动遍历返回结果&lt;/li>
&lt;li>经典的滑动窗口操作：
&lt;ul>
&lt;li>&lt;code>valid &amp;lt; len(t)&lt;/code>: &lt;code>right&lt;/code> 指针右移&lt;/li>
&lt;li>&lt;code>valid == len(t)&lt;/code>: 更新..结果.., &lt;code>left&lt;/code> 右移&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="代码-3">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">minWindow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">ns&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># 确定有解&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">ns&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">nt&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;span class="c1"># 计数检验&lt;/span>
&lt;span class="n">dictS&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">need&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">collections&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Counter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">collections&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Counter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">need&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">():&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">dictS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;span class="c1"># s 与 t 元素一样&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">ns&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">nt&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">s&lt;/span>
&lt;span class="c1"># 滑动窗口&lt;/span>
&lt;span class="n">window&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">defaultdict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">lambda&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 初始化空字典&lt;/span>
&lt;span class="n">left&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">right&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">valid&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">length&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ns&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">right&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">ns&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="c1"># 移动右边界&lt;/span>
&lt;span class="n">temp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="c1"># 判断&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">temp&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">need&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">window&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">window&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">need&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="p">]:&lt;/span> &lt;span class="n">valid&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="n">right&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="c1"># 右边界右移&lt;/span>
&lt;span class="c1"># 缩小左边界&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">valid&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">nt&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="c1"># 判断 + 记录&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">right&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">left&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">length&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">start&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">length&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">left&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">right&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">left&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">length&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">start&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">start&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="c1"># 提前结束&lt;/span>
&lt;span class="n">temp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">temp&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">need&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">window&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">need&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="p">]:&lt;/span> &lt;span class="n">valid&lt;/span> &lt;span class="o">-=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="n">window&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">-=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="n">left&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">start&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">start&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-3">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(1)$&lt;/li>
&lt;/ul>
&lt;hr />
&lt;h3 id="239-滑动窗口最大值">239. 滑动窗口最大值&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/sliding-window-maximum/">https://leetcode-cn.com/problems/sliding-window-maximum/&lt;/a>&lt;/p>
&lt;h4 id="题目描述-3">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给你一个整数数组 &lt;code>nums&lt;/code>，有一个大小为 &lt;code>k&lt;/code> 的滑动窗口从数组的最左侧移动到数组的最右侧。你只可以看到在滑动窗口内的 &lt;code>k&lt;/code> 个数字。滑动窗口每次只向右移动一位。&lt;/p>
&lt;p>返回滑动窗口中的最大值。&lt;/p>
&lt;p>&lt;strong>示例：&lt;/strong>&lt;br>
输入：nums = [1,3,-1,-3,5,3,6,7], k = 3&lt;br>
输出：[3,3,5,5,6,7]&lt;br>
解释：&lt;/p>
&lt;pre>&lt;code> 滑动窗口的位置 最大值
--------------- -----
[1 3 -1] -3 5 3 6 7 3
1 [3 -1 -3] 5 3 6 7 3
1 3 [-1 -3 5] 3 6 7 5
1 3 -1 [-3 5 3] 6 7 5
1 3 -1 -3 [5 3 6] 7 6
1 3 -1 -3 5 [3 6 7] 7
&lt;/code>&lt;/pre>&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>1 &amp;lt;= nums.length &amp;lt;= 105&lt;/li>
&lt;li>-104 &amp;lt;= nums[i] &amp;lt;= 104&lt;/li>
&lt;li>1 &amp;lt;= k &amp;lt;= nums.length&lt;/li>
&lt;/ul>&lt;/div>
&lt;h4 id="思路-4">思路&lt;/h4>
&lt;ul>
&lt;li>借助&lt;strong>双端队列&lt;/strong>。&lt;code>popleft()&lt;/code> 时间复杂度为 $O(1)$&lt;/li>
&lt;li>&lt;strong>初始化窗口&lt;/strong>: 将数组的前 &lt;code>k&lt;/code> 个数依次加入到双端队列 &lt;code>d&lt;/code> 中，每次加入前，判断队尾元素与 &lt;code>num&lt;/code> 比较，保持队列 &lt;code>d&lt;/code> 是..递减..的&lt;/li>
&lt;li>&lt;strong>滑动窗口&lt;/strong>: 遍历 &lt;code>nums[k:]&lt;/code>， 每次更新 &lt;code>res&lt;/code>
&lt;ul>
&lt;li>每次遍历需要判断队列最大值(即队首元素)是否窗口滑动时被“滑”出了，若&lt;strong>是&lt;/strong>，则需要 &lt;code>popleft()&lt;/code>&lt;/li>
&lt;li>之后，和初始化窗口中做的一样，保持队列是..递减..的&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="代码-4">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">maxSlidingWindow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="c1"># 双端队列&lt;/span>
&lt;span class="n">d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">collections&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">deque&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="c1"># 初始化窗口&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">num&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">d&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">d&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]]&lt;/span>
&lt;span class="c1"># 滑动窗口&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]:&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">popleft&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">d&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]:&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">d&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-4">复杂度&lt;/h4>
&lt;p>&lt;em>n 为数组长度, k 为窗口大小&lt;/em>&lt;/p>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(k)$&lt;/li>
&lt;/ul>
&lt;h3 id="3-无重复字符的最长字串">3. 无重复字符的最长字串&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters">https://leetcode-cn.com/problems/longest-substring-without-repeating-characters&lt;/a>&lt;/p>
&lt;h4 id="题目描述-4">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给定一个字符串，请你找出其中不含有重复字符的 &lt;code>最长子串&lt;/code> 的长度。&lt;/p>
&lt;p>示例 1:&lt;br>
输入: s = &amp;quot;abcabcbb&amp;quot;&lt;br>
输出: 3&lt;br>
解释: 因为无重复字符的最长子串是 &amp;quot;abc&amp;quot;，所以其长度为 3。&lt;/p>
&lt;p>示例 2:&lt;br>
输入: s = &amp;quot;bbbbb&amp;quot;&lt;br>
输出: 1&lt;br>
解释: 因为无重复字符的最长子串是 &amp;quot;b&amp;quot;，所以其长度为 1。&lt;/p>
&lt;p>示例 3:&lt;br>
输入: s = &amp;quot;pwwkew&amp;quot;&lt;br>
输出: 3&lt;br>
解释: 因为无重复字符的最长子串是 &amp;quot;wke&amp;quot;，所以其长度为 3。&lt;br>
&lt;strong>请注意&lt;/strong> 你的答案必须是 &lt;code>子串&lt;/code> 的长度，&amp;quot;pwke&amp;quot; 是一个子序列，不是子串。&lt;/p>
&lt;p>示例 4:&lt;br>
输入: s = &amp;quot;&amp;quot;&lt;br>
输出: 0&lt;/p>
&lt;p>提示：&lt;br>
$0 &amp;lt;=$ &lt;code>s.length&lt;/code> $&amp;lt;= 5 * 10^4$&lt;br>
&lt;code>s&lt;/code> 由英文字母、数字、符号和空格组成&lt;/p>&lt;/div>
&lt;h4 id="思路-5">思路&lt;/h4>
&lt;h4 id="代码-5">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">lengthOfLongestSubstring&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">left&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">right&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="n">hashMap&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">right&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">hashMap&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">right&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">left&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hashMap&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">]])&lt;/span>
&lt;span class="n">hashMap&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">]]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">right&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="n">right&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">right&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;abcabcbb&amp;#34;&lt;/span>
&lt;span class="c1"># s = &amp;#34;bbbbb&amp;#34;&lt;/span>
&lt;span class="c1"># s = &amp;#34;pwwkew&amp;#34;&lt;/span>
&lt;span class="c1"># s = &amp;#34;&amp;#34;&lt;/span>
&lt;span class="c1"># s = &amp;#34; &amp;#34;&lt;/span>
&lt;span class="c1"># s = &amp;#34;ab&amp;#34;&lt;/span>
&lt;span class="c1"># s = &amp;#34;abba&amp;#34;&lt;/span>
&lt;span class="n">mat&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Solution&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">mat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lengthOfLongestSubstring&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-5">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(n)$&lt;/li>
&lt;/ul>
&lt;h3 id="567-字符串的排列">567. 字符串的排列&lt;/h3>
&lt;!-- 模板
#### 题目描述
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;/div>
#### 思路
#### 代码
&lt;details>
&lt;summary> Python &lt;/summary>
```python
```
&lt;/details>
#### 复杂度
- 时间复杂度：
- 空间复杂度：
--></description><category domain="https://matnoble.me/dsa/">dsa</category><category domain="https://matnoble.me/dsa/topics/">topics</category><category domain="https://matnoble.me/tags/%E5%8F%8C%E6%8C%87%E9%92%88/">双指针</category><category domain="https://matnoble.me/tags/%E7%BC%96%E7%A8%8B%E5%88%B7%E9%A2%98/">编程刷题</category><category domain="https://matnoble.me/tags/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/">滑动窗口</category></item><item><title>反转链表</title><link>https://matnoble.me/dsa/reverse-linked-list/</link><guid isPermaLink="true">https://matnoble.me/dsa/reverse-linked-list/</guid><pubDate>Sat, 27 Feb 2021 00:19:30 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h2 id="目录">目录&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="./#206-%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8">206. 反转链表&lt;/a>&lt;/li>
&lt;li>&lt;a href="./#92-%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8-ii">92. 反转链表 II&lt;/a>&lt;/li>
&lt;li>&lt;a href="./#25-k-%E4%B8%AA%E4%B8%80%E7%BB%84%E7%BF%BB%E8%BD%AC%E9%93%BE%E8%A1%A8">&lt;strong>25. K 个一组翻转链表&lt;/strong>&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="206-反转链表">206. 反转链表&lt;/h2>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/reverse-linked-list/">https://leetcode-cn.com/problems/reverse-linked-list/&lt;/a>&lt;/p>
&lt;h3 id="题目描述">题目描述&lt;/h3>
&lt;style type="text/css">.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:"Font Awesome 5 Free",FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:'\f071'}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:'\f05a'}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:'\f06a'}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:'\f058'}.notice.tip{background:#e6f9e6}&lt;/style>&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>反转一个单链表。&lt;/p>
&lt;p>&lt;strong>示例:&lt;/strong>&lt;br>
&lt;strong>输入:&lt;/strong> &lt;code>1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;NULL&lt;/code>&lt;br>
&lt;strong>输出:&lt;/strong> &lt;code>5-&amp;gt;4-&amp;gt;3-&amp;gt;2-&amp;gt;1-&amp;gt;NULL&lt;/code>&lt;/p>
&lt;p>&lt;strong>进阶:&lt;/strong>&lt;br>
你可以 ..迭代.. 或 ..递归.. 地反转链表。你能否用两种方法解决这道题？&lt;/p>&lt;/div>
&lt;h3 id="代码">代码&lt;/h3>
&lt;ul>
&lt;li>迭代&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">reverseList&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span class="s2"> 迭代
&lt;/span>&lt;span class="s2"> pre --&amp;gt; cur --&amp;gt; cur.next
&lt;/span>&lt;span class="s2"> pre &amp;lt;-- cur --&amp;gt; cur.next
&lt;/span>&lt;span class="s2"> T: O(n)
&lt;/span>&lt;span class="s2"> S: O(1)
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="n">pre&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cur&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">None&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">head&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">cur&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">cur&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pre&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cur&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pre&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cur&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cur&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">pre&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>递归&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">reverseList&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span class="s2"> 递归
&lt;/span>&lt;span class="s2"> head --&amp;gt; head.next ...
&lt;/span>&lt;span class="s2"> head &amp;lt;-- head.next ...
&lt;/span>&lt;span class="s2"> None &amp;lt;-- head
&lt;/span>&lt;span class="s2"> T: O(n)
&lt;/span>&lt;span class="s2"> S: O(n)
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">head&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">head&lt;/span>
&lt;span class="n">newHead&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reverseList&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">head&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="bp">None&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">newHead&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="复杂度">复杂度&lt;/h3>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(1)$(迭代) $O(n)$(递归)&lt;/li>
&lt;/ul>
&lt;hr />
&lt;h2 id="92-反转链表-ii">92. 反转链表 II&lt;/h2>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/reverse-linked-list-ii/">https://leetcode-cn.com/problems/reverse-linked-list-ii/&lt;/a>&lt;/p>
&lt;h3 id="题目描述-1">题目描述&lt;/h3>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>反转从位置 $m$ 到 $n$ 的链表。请使用一趟扫描完成反转。&lt;/p>
&lt;p>&lt;strong>说明:&lt;/strong>&lt;br>
$1 ≤ m ≤ n ≤$ 链表长度。&lt;/p>
&lt;p>&lt;strong>示例:&lt;/strong>&lt;br>
&lt;strong>输入:&lt;/strong> &lt;code>1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;NULL, m = 2, n = 4&lt;/code>&lt;br>
&lt;strong>输出:&lt;/strong> &lt;code>1-&amp;gt;4-&amp;gt;3-&amp;gt;2-&amp;gt;5-&amp;gt;NULL&lt;/code>&lt;/p>&lt;/div>
&lt;h3 id="代码-1">代码&lt;/h3>
&lt;ul>
&lt;li>迭代&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">reverseBetween&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">m&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">head&lt;/span>
&lt;span class="n">pre&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cur&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">None&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">head&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">_&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">pre&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cur&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cur&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cur&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;span class="n">n1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pre&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cur&lt;/span>
&lt;span class="n">pre&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cur&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cur&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cur&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">_&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">cur&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pre&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cur&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pre&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cur&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cur&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;span class="n">m1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">m2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pre&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cur&lt;/span>
&lt;span class="c1"># 拼接&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">n1&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">n1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">m1&lt;/span>
&lt;span class="n">n2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">m2&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">head&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">n1&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="n">m1&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>递归&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">reverseN&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">head&lt;/span>
&lt;span class="n">newHead&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reverseN&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">head&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">newHead&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">reverseBetween&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">m&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">head&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">reverse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">m&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reverseN&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">head&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">reverse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">head&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">reverse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="复杂度-1">复杂度&lt;/h3>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(1)$(迭代) $O(n)$&lt;/li>
&lt;/ul>
&lt;hr />
&lt;h2 id="25-k-个一组翻转链表">25. K 个一组翻转链表&lt;/h2>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/reverse-nodes-in-k-group/">https://leetcode-cn.com/problems/reverse-nodes-in-k-group/&lt;/a>&lt;/p>
&lt;h3 id="题目描述-2">题目描述&lt;/h3>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给你一个链表，每 $k$ 个节点一组进行翻转，请你返回翻转后的链表。&lt;/p>
&lt;p>$k$ 是一个正整数，它的值小于或等于链表的长度。&lt;/p>
&lt;p>如果节点总数不是 $k$ 的整数倍，那么请将最后剩余的节点保持原有顺序。&lt;/p>
&lt;p>&lt;strong>进阶：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>你可以设计一个只使用常数额外空间的算法来解决此问题吗？&lt;/li>
&lt;li>&lt;strong>你不能只是单纯的改变节点内部的值&lt;/strong>，而是需要实际进行节点交换。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>示例&lt;/strong>&lt;br>
&lt;strong>输入：&lt;/strong> &lt;code>head = [1,2,3,4,5], k = 2&lt;/code>&lt;br>
&lt;strong>输出&lt;/strong>：&lt;code>[2,1,4,3,5]&lt;/code>&lt;/p>&lt;/div>
&lt;h3 id="代码-2">代码&lt;/h3>
&lt;ul>
&lt;li>递归&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">reverseKGroup&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">reverse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">pre&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cur&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nxt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">None&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">a&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">cur&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">nxt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cur&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cur&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pre&lt;/span>
&lt;span class="n">pre&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cur&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cur&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nxt&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">pre&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="bp">None&lt;/span>
&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">head&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">_&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">head&lt;/span> &lt;span class="c1"># 计数返回&lt;/span>
&lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;span class="n">newHead&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">reverse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">a&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reverseKGroup&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">newHead&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="复杂度-2">复杂度&lt;/h3>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(n)$&lt;/li>
&lt;/ul></description><category domain="https://matnoble.me/dsa/">dsa</category><category domain="https://matnoble.me/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/">数据结构与算法</category><category domain="https://matnoble.me/tags/%E7%BC%96%E7%A8%8B%E5%88%B7%E9%A2%98/">编程刷题</category><category domain="https://matnoble.me/tags/%E9%93%BE%E8%A1%A8/">链表</category></item><item><title>双指针</title><link>https://matnoble.me/dsa/basic/two-pointers/</link><guid isPermaLink="true">https://matnoble.me/dsa/basic/two-pointers/</guid><pubDate>Thu, 25 Feb 2021 00:19:30 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h1 id="目录">目录&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="./#%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98">每日一题&lt;/a>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#876-%E9%93%BE%E8%A1%A8%E7%9A%84%E4%B8%AD%E9%97%B4%E7%BB%93%E7%82%B9">876. 链表的中间结点&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#26-%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9">26. 删除排序数组中的重复项&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#35-%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE">35. 搜索插入位置&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="./#%E6%8E%A8%E8%8D%90%E9%A2%98%E7%9B%AE">推荐&lt;/a>
&lt;ul>
&lt;li>&lt;a href="./#%E5%BF%AB%E6%85%A2%E6%8C%87%E9%92%88">快慢指针&lt;/a>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#142-%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8-ii">142. 环形链表 II&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#287-%E5%AF%BB%E6%89%BE%E9%87%8D%E5%A4%8D%E6%95%B0">287. 寻找重复数&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#80-%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9-ii">80. 删除排序数组中的重复项 II&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="./#%E5%B7%A6%E5%8F%B3%E7%AB%AF%E7%82%B9%E6%8C%87%E9%92%88">左右端点指针&lt;/a>&lt;/li>
&lt;li>&lt;a href="./#%E5%9B%BA%E5%AE%9A%E9%97%B4%E8%B7%9D%E6%8C%87%E9%92%88">固定间距指针&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="每日一题">每日一题&lt;/h2>
&lt;h3 id="876-链表的中间结点">876. 链表的中间结点&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/middle-of-the-linked-list/">https://leetcode-cn.com/problems/middle-of-the-linked-list/&lt;/a>&lt;/p>
&lt;h4 id="题目描述">题目描述&lt;/h4>
&lt;style type="text/css">.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:"Font Awesome 5 Free",FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:'\f071'}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:'\f05a'}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:'\f06a'}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:'\f058'}.notice.tip{background:#e6f9e6}&lt;/style>&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给定一个头结点为 &lt;code>head&lt;/code> 的非空单链表，返回链表的中间结点。&lt;/p>
&lt;p>如果有两个中间结点，则返回第二个中间结点。&lt;/p>
&lt;p>&lt;strong>示例 1：&lt;/strong>&lt;br>
&lt;strong>输入：&lt;/strong> [1,2,3,4,5]&lt;br>
&lt;strong>输出：&lt;/strong> 此列表中的结点 3 (序列化形式：[3,4,5])
返回的结点值为 3 。&lt;/p>&lt;/div>
&lt;h4 id="思路">思路&lt;/h4>
&lt;p>&lt;strong>快慢指针&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>慢指针：每次走一步&lt;/li>
&lt;li>快指针：每次走两步&lt;/li>
&lt;/ul>
&lt;h4 id="代码">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># Definition for singly-linked list.&lt;/span>
&lt;span class="c1"># class ListNode:&lt;/span>
&lt;span class="c1"># def __init__(self, x):&lt;/span>
&lt;span class="c1"># self.val = x&lt;/span>
&lt;span class="c1"># self.next = None&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">middleNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">slow&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fast&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">head&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">fast&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">fast&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">slow&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fast&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">slow&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fast&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">slow&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(1)$&lt;/li>
&lt;/ul>
&lt;h3 id="26-删除排序数组中的重复项">26. 删除排序数组中的重复项&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/">https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/&lt;/a>&lt;/p>
&lt;h4 id="题目描述-1">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给定一个排序数组，你需要在&lt;strong>原地&lt;/strong>删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。&lt;/p>
&lt;p>不要使用额外的数组空间，你必须在&lt;strong>原地&lt;/strong>修改输入数组并在使用 O(1) 额外空间的条件下完成。&lt;/p>
&lt;p>&lt;strong>示例 :&lt;/strong>&lt;/p>
&lt;p>给定 nums = [0,0,1,1,1,2,2,3,3,4],&lt;/p>
&lt;p>函数应该返回新的长度 5, 并且原数组 nums 的前五个元素被修改为 0, 1, 2, 3, 4。&lt;/p>
&lt;p>你不需要考虑数组中超出新长度后面的元素。&lt;/p>&lt;/div>
&lt;h4 id="思路-1">思路&lt;/h4>
&lt;ul>
&lt;li>排序数组&lt;/li>
&lt;li>i 指针更新数组&lt;/li>
&lt;li>j 指针遍历数组&lt;/li>
&lt;/ul>
&lt;h4 id="代码-1">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">removeDuplicates&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="c1"># 双指针&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="c1"># 记录相异&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="n">j&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">i&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-1">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(1)$&lt;/li>
&lt;/ul>
&lt;h3 id="35-搜索插入位置">35. 搜索插入位置&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/search-insert-position/">https://leetcode-cn.com/problems/search-insert-position/&lt;/a>&lt;/p>
&lt;h4 id="题目描述-2">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。&lt;/p>
&lt;p>你可以假设数组中无重复元素。&lt;/p>
&lt;p>&lt;strong>示例 1:&lt;/strong>&lt;br>
输入: [1,3,5,6], 5&lt;br>
输出: 2&lt;/p>
&lt;p>&lt;strong>示例 2:&lt;/strong>&lt;br>
输入: [1,3,5,6], 2&lt;br>
输出: 1&lt;/p>
&lt;p>&lt;strong>示例 3:&lt;/strong>&lt;br>
输入: [1,3,5,6], 7&lt;br>
输出: 4&lt;/p>
&lt;p>&lt;strong>示例 4:&lt;/strong>&lt;br>
输入: [1,3,5,6], 0&lt;br>
输出: 0&lt;/p>&lt;/div>
&lt;h4 id="思路-2">思路&lt;/h4>
&lt;ul>
&lt;li>二分法&lt;/li>
&lt;li>&lt;code>target&lt;/code> 比所有值都小，&lt;code>return 0&lt;/code>&lt;/li>
&lt;li>&lt;code>target&lt;/code> 比所有值都大，&lt;code>return len(nums)&lt;/code>&lt;/li>
&lt;li>返回区间 &lt;code>i &amp;lt;= target &amp;lt;= j&lt;/code>, 然后判断输出&lt;br>
&lt;code>return i if nums[i] == target else j&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="代码-2">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">searchInsert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">target&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">target&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">mid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">mid&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">target&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="n">j&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-2">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(logN)$&lt;/li>
&lt;li>空间复杂度：$0(1)$&lt;/li>
&lt;/ul>
&lt;h3 id="快慢指针">快慢指针&lt;/h3>
&lt;h3 id="142-环形链表-ii">142. 环形链表 II&lt;/h3>
&lt;p>&lt;a href="https://matnoble.me/dsa/basic/linked-list/#142-%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8-ii">链接在这里&lt;/a>&lt;/p>
&lt;h3 id="287-寻找重复数">287. 寻找重复数&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/find-the-duplicate-number/">https://leetcode-cn.com/problems/find-the-duplicate-number/&lt;/a>&lt;/p>
&lt;h4 id="题目描述-3">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给定一个包含 &lt;code>n + 1&lt;/code> 个整数的数组 &lt;code>nums&lt;/code> ，其数字都在 &lt;code>1&lt;/code> 到 &lt;code>n&lt;/code> 之间（包括 &lt;code>1&lt;/code> 和 &lt;code>n&lt;/code>），可知至少存在一个重复的整数。&lt;/p>
&lt;p>假设 &lt;code>nums&lt;/code> 只有 &lt;strong>一个重复的整数&lt;/strong> ，找出 &lt;strong>这个重复的数&lt;/strong> 。&lt;/p>
&lt;p>&lt;strong>示例 1：&lt;/strong>&lt;br>
&lt;strong>输入：&lt;/strong> nums = [1,3,4,2,2]&lt;br>
&lt;strong>输出：&lt;/strong> 2&lt;/p>
&lt;p>&lt;strong>示例 2：&lt;/strong>&lt;br>
&lt;strong>输入：&lt;/strong> nums = [3,1,3,4,2]&lt;br>
&lt;strong>输出：&lt;/strong> 3&lt;/p>
&lt;p>&lt;strong>示例 3：&lt;/strong>&lt;br>
输入：nums = [1,1]&lt;br>
输出：1&lt;/p>
&lt;p>&lt;strong>示例 4：&lt;/strong>&lt;br>
&lt;strong>输入：&lt;/strong> nums = [1,1,2]&lt;br>
&lt;strong>输出：&lt;/strong> 1&lt;/p>
&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>$2 &amp;lt;= n &amp;lt;= 3 * 10^4$&lt;/li>
&lt;li>&lt;code>nums.length == n + 1&lt;/code>&lt;/li>
&lt;li>&lt;code>1 &amp;lt;= nums[i] &amp;lt;= n&lt;/code>&lt;/li>
&lt;li>&lt;code>nums&lt;/code> 中 &lt;strong>只有一个整数&lt;/strong> 出现 &lt;strong>两次或多次&lt;/strong> ，其余整数均只出现 一次&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>进阶：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>如何证明 &lt;code>nums&lt;/code> 中至少存在一个重复的数字?&lt;/li>
&lt;li>你可以在不修改数组 &lt;code>nums&lt;/code> 的情况下解决这个问题吗？&lt;/li>
&lt;li>你可以只用常量级 $O(1)$ 的额外空间解决这个问题吗？&lt;/li>
&lt;li>你可以设计一个时间复杂度小于 $O(n^2)$ 的解决方案吗？&lt;/li>
&lt;/ul>&lt;/div>
&lt;h4 id="思路-3">思路&lt;/h4>
&lt;p>寻找环入口&lt;/p>
&lt;h4 id="代码-3">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">findDuplicate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">slow&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fast&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">finder&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="bp">True&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">slow&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">slow&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">fast&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">fast&lt;/span>&lt;span class="p">]]&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">slow&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">fast&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">break&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="bp">True&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">finder&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">finder&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">slow&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">slow&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">slow&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">finder&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">break&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">slow&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-3">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(1)$&lt;/li>
&lt;/ul>
&lt;h3 id="80-删除排序数组中的重复项-ii">80. 删除排序数组中的重复项 II&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array-ii/">https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array-ii/&lt;/a>&lt;/p>
&lt;h4 id="题目描述-4">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给定一个增序排列数组 &lt;code>nums&lt;/code> ，你需要在 &lt;strong>原地&lt;/strong> 删除重复出现的元素，使得每个元素最多出现两次，返回移除后数组的新长度。&lt;/p>
&lt;p>不要使用额外的数组空间，你必须在 &lt;strong>原地&lt;/strong> &lt;strong>修改输入数组&lt;/strong> 并在使用 O(1) 额外空间的条件下完成。&lt;/p>
&lt;p>&lt;strong>示例：&lt;/strong>&lt;br>
&lt;strong>输入：&lt;/strong> nums = [1,1,1,2,2,3]&lt;br>
&lt;strong>输出：&lt;/strong> 5, nums = [1,1,2,2,3]&lt;br>
&lt;strong>解释：&lt;/strong> 函数应返回新长度 &lt;code>length = 5&lt;/code>, 并且原数组的前五个元素被修改为 &lt;code>1, 1, 2, 2, 3&lt;/code> 。 你不需要考虑数组中超出新长度后面的元素。&lt;/p>&lt;/div>
&lt;h4 id="思路-4">思路&lt;/h4>
&lt;ul>
&lt;li>&lt;code>len(nums) &amp;gt;= 3&lt;/code> 时，利用双指针&lt;code>i=j=2&lt;/code>，即从第 &lt;code>3&lt;/code> 位开始遍历：
&lt;ul>
&lt;li>循环条件：&lt;code>j &amp;lt; len(nums)&lt;/code>，每次步进 &lt;code>j&lt;/code>， &lt;code>j += 1&lt;/code>&lt;/li>
&lt;li>当 &lt;code>nums[i] != nums[i-2] or nums[i] != nums[j]:&lt;/code>
&lt;ul>
&lt;li>更新 &lt;code>nums[i] = nums[j]&lt;/code>&lt;/li>
&lt;li>当更新后的 &lt;code>nums[i] != nums[i-2]&lt;/code> 时，再更新 &lt;code>i += 1&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="代码-4">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">removeDuplicates&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="c1"># len(nums) &amp;lt; 3&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># len(nums) &amp;gt;= 3&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]:&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="n">j&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">i&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-4">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(1)$&lt;/li>
&lt;/ul>
&lt;h3 id="左右端点指针">左右端点指针&lt;/h3>
&lt;h3 id="固定间距指针">固定间距指针&lt;/h3>
&lt;!--
#### 题目描述
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;/div>
#### 思路
#### 代码
&lt;details>
&lt;summary> Python &lt;/summary>
```python
```
&lt;/details>
#### 复杂度
- 时间复杂度：
- 空间复杂度：
-->&lt;blockquote>
&lt;/blockquote></description><category domain="https://matnoble.me/dsa/">dsa</category><category domain="https://matnoble.me/dsa/basic/">basic</category><category domain="https://matnoble.me/tags/leetcode%E9%A2%98%E8%A7%A3/">LeetCode题解</category><category domain="https://matnoble.me/tags/%E7%BC%96%E7%A8%8B%E5%88%B7%E9%A2%98/">编程刷题</category><category domain="https://matnoble.me/tags/%E5%8F%8C%E6%8C%87%E9%92%88/">双指针</category></item><item><title>二叉树的遍历</title><link>https://matnoble.me/dsa/tree-traversal/</link><guid isPermaLink="true">https://matnoble.me/dsa/tree-traversal/</guid><pubDate>Thu, 18 Feb 2021 00:19:30 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://cdn.jsdelivr.net/gh/MatNoble/Images/Order.svg"
title="二叉树的遍历"
alt="二叉树的遍历"
width="95%"
>
&lt;span class="caption">◎ 二叉树的遍历&lt;/span>
&lt;/span>
&lt;h2 id="定义树">定义树&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">from&lt;/span> &lt;span class="nn">typing&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">List&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">collections&lt;/span>
&lt;span class="c1"># Definition for a binary tree node.&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">TreeNode&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">val&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">left&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="bp">None&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">right&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="bp">None&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">val&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">left&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">right&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="dfs-深度优先搜索">DFS 深度优先搜索&lt;/h2>
&lt;h3 id="前序遍历">前序遍历&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/binary-tree-preorder-traversal/">leetcode 144. 二叉树的前序遍历&lt;/a>&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://cdn.jsdelivr.net/gh/MatNoble/Images/preOrder.svg"
title="前序遍历"
alt="前序遍历"
width="400"
>
&lt;span class="caption">◎ 前序遍历&lt;/span>
&lt;/span>
&lt;ul>
&lt;li>定义树&lt;br>
上图中的树可定义为:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="n">root&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>递归
&lt;ul>
&lt;li>时间复杂度: $O(n)$&lt;/li>
&lt;li>空间复杂度: $O(n)$ # 最差, 二叉树退化为单链表时&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">preorderTraversalRecursion&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">preorder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span>
&lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">## 根节点&lt;/span>
&lt;span class="n">preorder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">## 左子树&lt;/span>
&lt;span class="n">preorder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">## 右子树&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="n">preorder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>非递归
&lt;ul>
&lt;li>借助 &lt;strong>堆&lt;/strong> &lt;code>先进后出&lt;/code> 特性, &lt;strong>先将右子树入栈, 再将左子树入栈&lt;/strong>&lt;/li>
&lt;li>时间复杂度: $O(n)$&lt;/li>
&lt;li>空间复杂度: $O(n)$&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">preorderTraversal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">root&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="bp">None&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="n">stack&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">stack&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">node&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">## 将&amp;#34;根&amp;#34;节点加入到结果中&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1">## 先将右子树压入栈&lt;/span>
&lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1">## 后将左子树压入栈&lt;/span>
&lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>调用&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="n">mat&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Solution&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">前序输出：&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">preorderTraversal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1"># [1, 2, 3, 4, 5, 6]&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">preorderTraversalRecursion&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1"># [1, 2, 3, 4, 5, 6]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="中序遍历">中序遍历&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/binary-tree-inorder-traversal/">leetcode 94. 二叉树的中序遍历&lt;/a>&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://cdn.jsdelivr.net/gh/MatNoble/Images/inOrder.svg"
title="中序遍历"
alt="中序遍历"
width="400"
>
&lt;span class="caption">◎ 中序遍历&lt;/span>
&lt;/span>
&lt;ul>
&lt;li>定义树&lt;br>
上图中的树可定义为:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="n">root&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>递归
&lt;ul>
&lt;li>时间复杂度: $O(n)$&lt;/li>
&lt;li>空间复杂度: $O(n)$&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">inorderTraversalRecursion&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">inorder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span>
&lt;span class="n">inorder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">## 左子树&lt;/span>
&lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">## 根节点&lt;/span>
&lt;span class="n">inorder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">## 右子树&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="n">inorder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>非递归&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">inorderTraversal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="n">cur&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">stack&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[],&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">stack&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">cur&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">cur&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cur&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">cur&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cur&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>
&lt;span class="n">node&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">cur&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>调用&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">中序输出：&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">inorderTraversal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1"># [1,2,3,4,5,6]&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">inorderTraversalRecursion&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1"># [1,2,3,4,5,6]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="后序遍历">后序遍历&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/binary-tree-postorder-traversal/">leetcode 145. 二叉树的后序遍历&lt;/a>&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://cdn.jsdelivr.net/gh/MatNoble/Images/postOrder.svg"
title="后序遍历"
alt="后序遍历"
width="400"
>
&lt;span class="caption">◎ 后序遍历&lt;/span>
&lt;/span>
&lt;ul>
&lt;li>递归&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">postorderTraversalRecursion&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">postorder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span>
&lt;span class="n">postorder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">postorder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">## 后序&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="n">postorder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>非递归&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">postorderTraversal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">root&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="bp">None&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="n">stack&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">)],&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">stack&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">flag&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">flag&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="ow">not&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">)):&lt;/span>
&lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr />
&lt;h2 id="bfs-广度优先搜索">BFS 广度优先搜索&lt;/h2>
&lt;h3 id="层序遍历">层序遍历&lt;/h3>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://cdn.jsdelivr.net/gh/MatNoble/Images/levelOrder.svg"
title="层序遍历"
alt="层序遍历"
width="400"
>
&lt;span class="caption">◎ 层序遍历&lt;/span>
&lt;/span>
&lt;h4 id="正序">正序&lt;/h4>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/binary-tree-level-order-traversal/">leetcode 102. 二叉树的层序遍历&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">levelTraversalLeft&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">]]:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="kn">from&lt;/span> &lt;span class="nn">collections&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">deque&lt;/span>
&lt;span class="n">res&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">queue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[],&lt;/span> &lt;span class="n">deque&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">queue&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">level&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">queue&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">_&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">node&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">popleft&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">level&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">level&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="逆序">逆序&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">levelTraversalRight&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">]]:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="n">res&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">queue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[],&lt;/span> &lt;span class="n">collections&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">deque&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">queue&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">level&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">queue&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">_&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">node&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">popleft&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">level&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">level&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">levelTraversal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">]]:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="n">res&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">queue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[],&lt;/span> &lt;span class="n">collections&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">deque&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">queue&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">level&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">queue&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">collections&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">deque&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">_&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">node&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">popleft&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">level&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">appendleft&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">level&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="锯齿">锯齿&lt;/h4>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof/">剑指 offer 剑指 Offer 32 - III. 从上到下打印二叉树 III&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">levelOrder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">]]:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="kn">from&lt;/span> &lt;span class="nn">collections&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">deque&lt;/span>
&lt;span class="n">k&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">res&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">queue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[],&lt;/span> &lt;span class="n">deque&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">queue&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">level&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">queue&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">deque&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">k&lt;/span> &lt;span class="o">*=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">_&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">node&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">popleft&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">k&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1">## 左 --&amp;gt; 右&lt;/span>
&lt;span class="n">level&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1">## 右 --&amp;gt; 左&lt;/span>
&lt;span class="n">level&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">appendleft&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">level&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="树的深度">树的深度&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">maxDepth&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">bottomUp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="c1">## 自下而上&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">root&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bottomUp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">bottomUp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">topDown&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">depth&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="c1">## 自上而下&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">depth&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">root&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">topDown&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">depth&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">topDown&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">depth&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">topDown&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">bottomUp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description><category domain="https://matnoble.me/dsa/">dsa</category><category domain="https://matnoble.me/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/">数据结构与算法</category><category domain="https://matnoble.me/tags/%E7%BC%96%E7%A8%8B%E5%88%B7%E9%A2%98/">编程刷题</category><category domain="https://matnoble.me/tags/%E6%A0%91/">树</category></item><item><title>哈希表</title><link>https://matnoble.me/dsa/basic/hash-table/</link><guid isPermaLink="true">https://matnoble.me/dsa/basic/hash-table/</guid><pubDate>Thu, 18 Feb 2021 00:19:30 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h1 id="目录">目录&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="./#%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98">每日一题&lt;/a>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#1-%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C">1. 两数之和&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#347-%E5%89%8D-k-%E4%B8%AA%E9%AB%98%E9%A2%91%E5%85%83%E7%B4%A0">347. 前 K 个高频元素&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#447-%E5%9B%9E%E6%97%8B%E9%95%96%E7%9A%84%E6%95%B0%E9%87%8F">447. 回旋镖的数量&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#3-%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2">3. 无重复字符的最长子串&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="每日一题">每日一题&lt;/h2>
&lt;h3 id="1-两数之和">1. 两数之和&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/two-sum">https://leetcode-cn.com/problems/two-sum&lt;/a>&lt;/p>
&lt;h4 id="题目描述">题目描述&lt;/h4>
&lt;style type="text/css">.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:"Font Awesome 5 Free",FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:'\f071'}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:'\f05a'}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:'\f06a'}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:'\f058'}.notice.tip{background:#e6f9e6}&lt;/style>&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给定一个整数数组 &lt;code>nums&lt;/code> 和一个整数目标值 &lt;code>target&lt;/code>，请你在该数组中找出 &lt;strong>和为目标值&lt;/strong> 的那 &lt;strong>两个&lt;/strong> 整数，并返回它们的数组下标。&lt;/p>
&lt;p>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。&lt;/p>
&lt;p>你可以按任意顺序返回答案。&lt;/p>
&lt;p>&lt;strong>示例:&lt;/strong>&lt;br>
&lt;strong>输入：&lt;/strong> nums = [2,7,11,15], target = 9&lt;br>
&lt;strong>输出：&lt;/strong> [0,1]&lt;br>
&lt;strong>解释：&lt;/strong> 因为 nums[0] + nums[1] == 9 ，返回 [0, 1] 。&lt;/p>&lt;/div>
&lt;h4 id="思路">思路&lt;/h4>
&lt;ul>
&lt;li>用 &lt;strong>字典(哈希表)&lt;/strong> 存储每个数对应的索引及值. 哈希表实现快速查找 $O(1)$&lt;/li>
&lt;li>当 &lt;code>target - 当前数&lt;/code> 在 &lt;strong>字典(哈希表)&lt;/strong> 中存在时，说明已存储的数和当前数相加可以得到目标值 &lt;code>target&lt;/code>&lt;/li>
&lt;li>返回对应的索引 &lt;code>[hashmap[target - num], idx]&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="代码">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">twoSum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="n">hashMap&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{}&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">idx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">num&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">enumerate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">target&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">hashMap&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">hashMap&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">target&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">idx&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">hashMap&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">idx&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(n)$&lt;/li>
&lt;/ul>
&lt;h3 id="347-前-k-个高频元素">347. 前 K 个高频元素&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/top-k-frequent-elements">https://leetcode-cn.com/problems/top-k-frequent-elements&lt;/a>&lt;/p>
&lt;h4 id="题目描述-1">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给定一个非空的整数数组，返回其中出现频率前 &lt;strong>k&lt;/strong> 高的元素。&lt;/p>
&lt;p>&lt;strong>示例 1:&lt;/strong>&lt;br>
&lt;strong>输入:&lt;/strong> nums = [1,1,1,2,2,3], k = 2&lt;br>
&lt;strong>输出:&lt;/strong> [1,2]&lt;/p>
&lt;p>&lt;strong>示例 2:&lt;/strong>&lt;br>
&lt;strong>输入:&lt;/strong> nums = [1], k = 1&lt;br>
&lt;strong>输出:&lt;/strong> [1]
 &lt;/p>
&lt;ul>
&lt;li>你可以假设给定的 k 总是合理的，且 1 ≤ k ≤ 数组中不相同的元素的个数。&lt;/li>
&lt;li>你的算法的时间复杂度&lt;strong>必须&lt;/strong>优于 O(n log n) , n 是数组的大小。&lt;/li>
&lt;li>题目数据保证答案唯一，换句话说，数组中前 k 个高频元素的集合是唯一的。&lt;/li>
&lt;li>你可以按任意顺序返回答案。&lt;/li>
&lt;/ul>&lt;/div>
&lt;h4 id="思路-1">思路&lt;/h4>
&lt;h4 id="代码-1">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">topKFrequent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="nb">dict&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">collections&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Counter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 计数&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">v&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">dict&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">lambda&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">])][&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">:]&lt;/span> &lt;span class="c1"># 排序返回&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-1">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(NlogN)$&lt;/li>
&lt;li>空间复杂度：$O(N)$&lt;/li>
&lt;/ul>
&lt;h3 id="447-回旋镖的数量">447. 回旋镖的数量&lt;/h3>
&lt;h4 id="题目描述-2">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给定平面上 n 对&lt;strong>互不相同&lt;/strong>的点 &lt;code>points&lt;/code>，其中 &lt;code>points[i] = [xi, yi]&lt;/code> 。&lt;strong>回旋镖&lt;/strong>是由点 &lt;code>(i, j, k)&lt;/code> 表示的元组 ，其中 &lt;code>i&lt;/code> 和 &lt;code>j&lt;/code> 之间的距离和 &lt;code>i&lt;/code> 和 &lt;code>k&lt;/code> 之间的距离相等（&lt;strong>需要考虑元组的顺序&lt;/strong>）。&lt;/p>
&lt;p>返回平面上所有回旋镖的数量。&lt;/p>
&lt;p>&lt;strong>示例 1：&lt;/strong>&lt;br>
&lt;strong>输入：&lt;/strong> points = [[0,0],[1,0],[2,0]]&lt;br>
&lt;strong>输出：&lt;/strong> 2&lt;br>
&lt;strong>解释：&lt;/strong> 两个回旋镖为 [[1,0],[0,0],[2,0]] 和 [[1,0],[2,0],[0,0]]&lt;/p>
&lt;p>&lt;strong>示例 2：&lt;/strong>&lt;br>
&lt;strong>输入：&lt;/strong> points = [[1,1],[2,2],[3,3]]&lt;br>
&lt;strong>输出：&lt;/strong> 2&lt;/p>
&lt;p>&lt;strong>示例 3：&lt;/strong>&lt;br>
&lt;strong>输入：&lt;/strong> points = [[1,1]]
&lt;strong>输出：&lt;/strong> 0&lt;/p>
&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>n == points.length&lt;/li>
&lt;li>$1 &amp;lt;= n &amp;lt;= 500$&lt;/li>
&lt;li>points[i].length == 2&lt;/li>
&lt;li>$-10^4 &amp;lt;= x_i, y_i &amp;lt;= 10^4$&lt;/li>
&lt;li>所有点都&lt;strong>互不相同&lt;/strong>&lt;/li>
&lt;/ul>&lt;/div>
&lt;h4 id="思路-2">思路&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>外层循环&lt;/strong>：&lt;/li>
&lt;li>&lt;strong>内层循环&lt;/strong>：&lt;/li>
&lt;/ul>
&lt;h4 id="代码-2">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">from&lt;/span> &lt;span class="nn">collections&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Counter&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">numberOfBoomerangs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">points&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">]])&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">dis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">])&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">])&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="mi">2&lt;/span>
&lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">points&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">dis_&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">points&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">dis_&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nb">dict&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Counter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dis_&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">val&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">dict&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">values&lt;/span>&lt;span class="p">():&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">val&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">count&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">val&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">count&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-2">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n^2)$&lt;/li>
&lt;li>空间复杂度：$O(n)$&lt;/li>
&lt;/ul>
&lt;h3 id="3-无重复字符的最长子串">3. 无重复字符的最长子串&lt;/h3>
&lt;h4 id="题目描述-3">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给定一个字符串，请你找出其中不含有重复字符的&lt;strong>最长子串&lt;/strong>的长度。&lt;/p>
&lt;p>&lt;strong>示例 1:&lt;/strong>&lt;br>
&lt;strong>输入:&lt;/strong> s = &amp;quot;abcabcbb&amp;quot;&lt;br>
&lt;strong>输出:&lt;/strong> 3&lt;br>
&lt;strong>解释:&lt;/strong> 因为无重复字符的最长子串是 &amp;quot;abc&amp;quot;，所以其长度为 3。&lt;/p>
&lt;p>&lt;strong>示例 2:&lt;/strong>&lt;br>
&lt;strong>输入:&lt;/strong> s = &amp;quot;bbbbb&amp;quot;&lt;br>
&lt;strong>输出:&lt;/strong> 1&lt;br>
&lt;strong>解释:&lt;/strong> 因为无重复字符的最长子串是 &amp;quot;b&amp;quot;，所以其长度为 1。&lt;/p>
&lt;p>&lt;strong>示例 3:&lt;/strong>&lt;br>
&lt;strong>输入:&lt;/strong> s = &amp;quot;pwwkew&amp;quot;&lt;br>
&lt;strong>输出:&lt;/strong> 3&lt;br>
&lt;strong>解释:&lt;/strong> 因为无重复字符的最长子串是 &amp;quot;wke&amp;quot;，所以其长度为 3。&lt;strong>请注意&lt;/strong>: 你的答案必须是 子串 的长度，&amp;quot;pwke&amp;quot; 是一个子序列，不是子串。&lt;/p>
&lt;p>&lt;strong>示例 4:&lt;/strong>&lt;br>
&lt;strong>输入:&lt;/strong> s = &amp;quot;&amp;quot;&lt;br>
&lt;strong>输出:&lt;/strong> 0&lt;/p>
&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>0 &amp;lt;= s.length &amp;lt;= 5 * 104&lt;/li>
&lt;li>s 由英文字母、数字、符号和空格组成&lt;/li>
&lt;/ul>&lt;/div>
&lt;h4 id="思路-3">思路&lt;/h4>
&lt;ul>
&lt;li>滑动窗口 + 哈希表&lt;/li>
&lt;li>哈希表：
&lt;ul>
&lt;li>&lt;code>key&lt;/code>: 列表值&lt;/li>
&lt;li>&lt;code>value&lt;/code>: &lt;code>idx + 1&lt;/code> # 该处的索引值 + 1&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>滑动窗口:
&lt;ul>
&lt;li>满足条件，扩大窗口，右移右窗口&lt;/li>
&lt;li>不满足条件，缩小窗口，左窗口右移&lt;/li>
&lt;li>直到右窗口到达数组列表右边界&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>条件&lt;/strong> &lt;code>s[right] in hashMap and hashMap[s[right]] &amp;gt; left&lt;/code>
&lt;ul>
&lt;li>遍历值在哈希表中&lt;/li>
&lt;li>哈希表中对应的 &lt;code>value&lt;/code> $&amp;gt;$ 当前左窗口 &lt;code>left&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>更新 &lt;code>res&lt;/code>&lt;br>
在 &lt;code>left&lt;/code> 更新之前，计算 &lt;code>res = max(res, right-left)&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="代码-3">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">lengthOfLongestSubstring&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">left&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">right&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="n">hashMap&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">right&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">hashMap&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">hashMap&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">]]&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">left&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">right&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">left&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">hashMap&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">]]&lt;/span>
&lt;span class="n">hashMap&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">]]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">right&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="n">right&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">right&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-3">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(n)$&lt;/li>
&lt;/ul>
&lt;!--
#### 题目描述
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;/div>
#### 思路
#### 代码
&lt;details>
&lt;summary> Python &lt;/summary>
```python
```
&lt;/details>
#### 复杂度
- 时间复杂度：
- 空间复杂度：
-->&lt;blockquote>
&lt;/blockquote></description><category domain="https://matnoble.me/dsa/">dsa</category><category domain="https://matnoble.me/dsa/basic/">basic</category><category domain="https://matnoble.me/tags/leetcode%E9%A2%98%E8%A7%A3/">LeetCode题解</category><category domain="https://matnoble.me/tags/%E7%BC%96%E7%A8%8B%E5%88%B7%E9%A2%98/">编程刷题</category><category domain="https://matnoble.me/tags/%E5%93%88%E5%B8%8C%E8%A1%A8/">哈希表</category></item><item><title>二叉搜索树</title><link>https://matnoble.me/dsa/bst/</link><guid isPermaLink="true">https://matnoble.me/dsa/bst/</guid><pubDate>Sat, 13 Feb 2021 00:19:30 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h2 id="二叉搜索树">二叉搜索树&lt;/h2>
&lt;p>
&lt;a href="https://zh.wikipedia.org/wiki/%e4%ba%8c%e5%8f%89%e6%90%9c%e7%b4%a2%e6%a0%91">二叉搜索树&lt;/a>
(Binary Search Tree) 是指一棵空树或者具有下列性质的二叉树：&lt;/p>
&lt;ol>
&lt;li>若任意节点的左子树不空，则左子树上所有节点的值均小于它的根节点的值；&lt;/li>
&lt;li>若任意节点的右子树不空，则右子树上所有节点的值均大于或等于它的根节点的值；&lt;/li>
&lt;li>任意节点的左、右子树也分别为二叉查找树；&lt;/li>
&lt;/ol>
&lt;p>中序遍历二叉查找树可得到一个关键字的有序序列，一个无序序列可以透过建构一棵二叉查找树变成一个有序序列，建构树的过程即为对无序序列进行查找的过程。&lt;/p>
&lt;h2 id="平衡二叉树">平衡二叉树&lt;/h2>
&lt;p>平衡二叉树也称为
&lt;a href="https://zh.wikipedia.org/wiki/AVL%e6%a0%91">AVL树&lt;/a>
。在AVL树中，任一节点对应的两棵子树的最大高度差为 1&lt;/p>
&lt;h2 id="leetcode-练习">LeetCode 练习&lt;/h2>
&lt;h3 id="110-平衡二叉树">110. 平衡二叉树&lt;/h3>
&lt;h3 id="108-将有序数组转换为二叉搜索树">108. 将有序数组转换为二叉搜索树&lt;/h3>
&lt;h3 id="109-有序链表转换二叉搜索树">109. 有序链表转换二叉搜索树&lt;/h3>
&lt;h3 id="1382-将二叉搜索树变平衡">1382. 将二叉搜索树变平衡&lt;/h3></description><category domain="https://matnoble.me/dsa/">dsa</category><category domain="https://matnoble.me/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/">数据结构与算法</category><category domain="https://matnoble.me/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/">二叉树</category></item><item><title>树</title><link>https://matnoble.me/dsa/basic/tree/</link><guid isPermaLink="true">https://matnoble.me/dsa/basic/tree/</guid><pubDate>Fri, 12 Feb 2021 00:19:30 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h1 id="目录">目录&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="./#%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98">每日一题&lt;/a>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#104-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6">104. 二叉树的最大深度&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#100-%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A0%91">100. 相同的树&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#129-%E6%B1%82%E6%A0%B9%E5%88%B0%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9%E6%95%B0%E5%AD%97%E4%B9%8B%E5%92%8C">129. 求根到叶子节点数字之和&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#513-%E6%89%BE%E6%A0%91%E5%B7%A6%E4%B8%8B%E8%A7%92%E7%9A%84%E5%80%BC">513. 找树左下角的值&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#297-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96">297. 二叉树的序列化与反序列化&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#987-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%9E%82%E5%BA%8F%E9%81%8D%E5%8E%86">987. 二叉树的垂序遍历&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="./#%E6%89%A9%E5%B1%95">扩展&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="每日一题">每日一题&lt;/h2>
&lt;h3 id="104-二叉树的最大深度">104. 二叉树的最大深度&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/maximum-depth-of-binary-tree/">https://leetcode-cn.com/problems/maximum-depth-of-binary-tree/&lt;/a>&lt;/p>
&lt;h4 id="题目描述">题目描述&lt;/h4>
&lt;style type="text/css">.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:"Font Awesome 5 Free",FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:'\f071'}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:'\f05a'}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:'\f06a'}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:'\f058'}.notice.tip{background:#e6f9e6}&lt;/style>&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给定一个二叉树，找出其最大深度。&lt;/p>
&lt;p>二叉树的深度为根节点到最远叶子节点的最长路径上的节点数。&lt;/p>
&lt;p>说明: 叶子节点是指没有子节点的节点。&lt;/p>
&lt;p>示例：
给定二叉树 &lt;code>[3,9,20,null,null,15,7]&lt;/code>，&lt;/p>
&lt;pre>&lt;code> 3
/ \
9 20
/ \
15 7
&lt;/code>&lt;/pre>&lt;p>返回它的最大深度 3 。&lt;/p>&lt;/div>
&lt;h4 id="思路">思路&lt;/h4>
&lt;p>简单递归，终止条件: 到达叶节点 &lt;code>return 0&lt;/code>&lt;/p>
&lt;h4 id="代码">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># Definition for a binary tree node.&lt;/span>
&lt;span class="c1"># class TreeNode:&lt;/span>
&lt;span class="c1"># def __init__(self, val=0, left=None, right=None):&lt;/span>
&lt;span class="c1"># self.val = val&lt;/span>
&lt;span class="c1"># self.left = left&lt;/span>
&lt;span class="c1"># self.right = right&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">maxDepth&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="n">left&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">maxDepth&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">right&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">maxDepth&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">right&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(n)$&lt;/li>
&lt;/ul>
&lt;h3 id="100-相同的树">100. 相同的树&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/same-tree/">https://leetcode-cn.com/problems/same-tree/&lt;/a>&lt;/p>
&lt;h4 id="题目描述-1">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给你两棵二叉树的根节点 p 和 q ，编写一个函数来检验这两棵树是否相同。&lt;/p>
&lt;p>如果两个树在结构上相同，并且节点具有相同的值，则认为它们是相同的。&lt;/p>
&lt;p>&lt;strong>示例 1：&lt;/strong>
&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images/20210213165916.png"/>
&lt;strong>输入&lt;/strong>: p = [1,2,3], q = [1,2,3]&lt;br>
&lt;strong>输出&lt;/strong> true&lt;/p>
&lt;p>&lt;strong>示例 2：&lt;/strong>
&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images/20210213165948.png"/>
&lt;strong>输入&lt;/strong>: p = [1,2], q = [1,null,2]&lt;br>
&lt;strong>输出&lt;/strong>: false&lt;/p>&lt;/div>
&lt;h4 id="思路-1">思路&lt;/h4>
&lt;ul>
&lt;li>运用递归&lt;/li>
&lt;li>关注根节点 &lt;code>root&lt;/code>&lt;/li>
&lt;li>然后向下递归 &lt;code>left&lt;/code> 和 &lt;code>right&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="代码-1">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># Definition for a binary tree node.&lt;/span>
&lt;span class="c1"># class TreeNode:&lt;/span>
&lt;span class="c1"># def __init__(self, val=0, left=None, right=None):&lt;/span>
&lt;span class="c1"># self.val = val&lt;/span>
&lt;span class="c1"># self.left = left&lt;/span>
&lt;span class="c1"># self.right = right&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">isSameTree&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">q&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">q&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">True&lt;/span>
&lt;span class="k">elif&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">q&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">False&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">q&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">False&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">isSameTree&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">q&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">isSameTree&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">q&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-1">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(n)$&lt;/li>
&lt;/ul>
&lt;h3 id="129-求根到叶子节点数字之和">129. 求根到叶子节点数字之和&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/sum-root-to-leaf-numbers/">https://leetcode-cn.com/problems/sum-root-to-leaf-numbers/&lt;/a>&lt;/p>
&lt;h4 id="题目描述-2">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给定一个二叉树，它的每个结点都存放一个 &lt;code>0-9&lt;/code> 的数字，每条从根到叶子节点的路径都代表一个数字。&lt;/p>
&lt;p>例如，从根到叶子节点路径 &lt;code>1-&amp;gt;2-&amp;gt;3&lt;/code> 代表数字 &lt;code>123&lt;/code>。&lt;/p>
&lt;p>计算从根到叶子节点生成的所有数字之和。&lt;/p>
&lt;p>&lt;strong>说明&lt;/strong>: 叶子节点是指没有子节点的节点。&lt;/p>
&lt;p>&lt;strong>示例 1:&lt;/strong>&lt;br>
输入: &lt;code>[1,2,3]&lt;/code>&lt;/p>
&lt;pre>&lt;code> 1
/ \
2 3
&lt;/code>&lt;/pre>&lt;p>&lt;strong>输出:&lt;/strong> &lt;code>25&lt;/code>&lt;br>
&lt;strong>解释:&lt;/strong>&lt;br>
从根到叶子节点路径 &lt;code>1-&amp;gt;2&lt;/code> 代表数字 &lt;code>12&lt;/code>.&lt;br>
从根到叶子节点路径 &lt;code>1-&amp;gt;3&lt;/code> 代表数字 &lt;code>13&lt;/code>.&lt;br>
因此，数字总和 = &lt;code>12 + 13 = 25&lt;/code>.&lt;/p>&lt;/div>
&lt;h4 id="思路-2">思路&lt;/h4>
&lt;ul>
&lt;li>DFS 深度优先搜索
&lt;ul>
&lt;li>递归&lt;/li>
&lt;li>遇到 &lt;strong>叶节点&lt;/strong>，加入 &lt;code>self.res&lt;/code>&lt;/li>
&lt;li>否则，进行数学进位运算&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>BFS 深度优先搜索
&lt;ul>
&lt;li>使用双端队列，&lt;code>queue.popleft()&lt;/code> 时间复杂度是 $O(1)$&lt;/li>
&lt;li>遇到 &lt;strong>叶节点&lt;/strong>，加入 &lt;code>res&lt;/code>&lt;/li>
&lt;li>否则，进行数学进位运算&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="代码-2">代码&lt;/h4>
&lt;details>
&lt;summary> Python DFS&lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">sumNumbers&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="c1">## DFS&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">dfs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sum_&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">res&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">sum_&lt;/span>
&lt;span class="k">return&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">dfs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sum_&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">10&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">dfs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sum_&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">10&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="n">dfs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">res&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;details>
&lt;summary> Python BFS&lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">sumNumbers&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="c1">## BFS&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="n">res&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">queue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">collections&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">deque&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">queue&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">node&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sum_&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">popleft&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">sum_&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sum_&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">10&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sum_&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">10&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-2">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(n)$ # 最坏情况，二叉数退化为单链表&lt;/li>
&lt;/ul>
&lt;h3 id="513-找树左下角的值">513. 找树左下角的值&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/find-bottom-left-tree-value/">https://leetcode-cn.com/problems/find-bottom-left-tree-value/&lt;/a>&lt;/p>
&lt;h4 id="题目描述-3">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给定一个二叉树，在树的最后一行找到最左边的值。&lt;/p>
&lt;p>&lt;strong>示例 1:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>输入:
2
/ \
1 3
输出:
1
&lt;/code>&lt;/pre>&lt;p>&lt;strong>示例 2:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>输入:
1
/ \
2 3
/ / \
4 5 6
/
7
输出:
7
&lt;/code>&lt;/pre>&lt;p>&lt;strong>注意:&lt;/strong> 您可以假设树（即给定的根节点）不为 &lt;strong>NULL&lt;/strong>。&lt;/p>&lt;/div>
&lt;h4 id="思路-3">思路&lt;/h4>
&lt;ul>
&lt;li>DFS 深度优先搜索
&lt;ul>
&lt;li>借助递归&lt;/li>
&lt;li>初始化 &lt;code>self.res = [root.val, 0]&lt;/code>&lt;/li>
&lt;li>到达 &lt;code>叶子节点&lt;/code>：
&lt;ul>
&lt;li>若 &lt;code>self.res[1] &amp;lt; k&lt;/code>，更新 &lt;code>self.res = [node.val, k]&lt;/code>&lt;/li>
&lt;li>否则，&lt;code>return&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>否则，向左或向右递归&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>BFS 0 广度优先搜索
&lt;ul>
&lt;li>对 &lt;a href="https://leetcode-cn.com/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof/">剑指 Offer 32 - III. 从上到下打印二叉树 III&lt;/a> 作小改动&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>BFS 1 广度优先搜索
&lt;ul>
&lt;li>借助双端队列&lt;/li>
&lt;li>每层 &lt;code>由右向左&lt;/code> 遍历&lt;/li>
&lt;li>最后一个 &lt;code>node&lt;/code> 即为所求&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="代码-3">代码&lt;/h4>
&lt;details>
&lt;summary> Python DFS&lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">findBottomLeftValue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="c1">## DFS&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">dfs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">return&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">dfs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 向左递归&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">dfs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 向右递归&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">dfs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;details>
&lt;summary> Python BFS 0&lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">findBottomLeftValue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="c1">## BFS 0&lt;/span>
&lt;span class="n">res&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">queue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[],&lt;/span> &lt;span class="n">collections&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">deque&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">queue&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">node&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">k&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">popleft&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">k&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">([])&lt;/span>
&lt;span class="n">res&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;details>
&lt;summary> Python BFS 1&lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">findBottomLeftValue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="c1">## BFS 1&lt;/span>
&lt;span class="n">queue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">collections&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">deque&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">queue&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">node&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">popleft&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-3">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(n)$&lt;/li>
&lt;/ul>
&lt;h3 id="297-二叉树的序列化与反序列化">297. 二叉树的序列化与反序列化&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/serialize-and-deserialize-binary-tree">https://leetcode-cn.com/problems/serialize-and-deserialize-binary-tree&lt;/a>&lt;/p>
&lt;h4 id="题目描述-4">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>序列化是将一个数据结构或者对象转换为连续的比特位的操作，进而可以将转换后的数据存储在一个文件或者内存中，同时也可以通过网络传输到另一个计算机环境，采取相反方式重构得到原数据。&lt;/p>
&lt;p>请设计一个算法来实现二叉树的序列化与反序列化。这里不限定你的序列 / 反序列化算法执行逻辑，你只需要保证一个二叉树可以被序列化为一个字符串并且将这个字符串反序列化为原始的树结构。&lt;/p>
&lt;p>&lt;strong>示例 1：&lt;/strong>
&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images/20210217155428.png"/>
&lt;strong>输入&lt;/strong>：&lt;code>root = [1,2,3,null,null,4,5]&lt;/code>&lt;br>
&lt;strong>输出&lt;/strong>：&lt;code>[1,2,3,null,null,4,5]&lt;/code>&lt;/p>
&lt;p>&lt;strong>示例 2：&lt;/strong>
&lt;strong>输入&lt;/strong>：&lt;code>root = []&lt;/code>&lt;br>
&lt;strong>输出&lt;/strong>：&lt;code>[]&lt;/code>&lt;/p>&lt;/div>
&lt;h4 id="思路-4">思路&lt;/h4>
&lt;p>将 &lt;code>None&lt;/code> 补充为 &lt;code>X&lt;/code>&lt;/p>
&lt;ul>
&lt;li>DFS
&lt;ul>
&lt;li>序列化：处理根节点，将子树交给递归&lt;/li>
&lt;li>反序列化：构建二叉树&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>BFS
&lt;ul>
&lt;li>序列化：常规双端队列&lt;/li>
&lt;li>&lt;strong>反序列化&lt;/strong>：
&lt;ul>
&lt;li>&lt;code>data&lt;/code>: 序列化节点列表（包含&lt;code>X&lt;/code>）&lt;/li>
&lt;li>&lt;code>queue&lt;/code>: 层序存储非空节点&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="代码-4">代码&lt;/h4>
&lt;details>
&lt;summary> Python DFS &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># Definition for a binary tree node.&lt;/span>
&lt;span class="c1"># class TreeNode(object):&lt;/span>
&lt;span class="c1"># def __init__(self, x):&lt;/span>
&lt;span class="c1"># self.val = x&lt;/span>
&lt;span class="c1"># self.left = None&lt;/span>
&lt;span class="c1"># self.right = None&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Codec&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">serialize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;Encodes a tree to a single string.
&lt;/span>&lt;span class="s2"> :type root: TreeNode
&lt;/span>&lt;span class="s2"> :rtype: str
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="s1">&amp;#39;X&amp;#39;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;,&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">serialize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;,&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">serialize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">deserialize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;Decodes your encoded data to tree.
&lt;/span>&lt;span class="s2"> :type data: str
&lt;/span>&lt;span class="s2"> :rtype: TreeNode
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">collections&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">deque&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;,&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">root&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">buildTree&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">root&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">buildTree&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">val&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">popleft&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">val&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;X&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="bp">None&lt;/span>
&lt;span class="n">node&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">buildTree&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">buildTree&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">node&lt;/span>
&lt;span class="c1"># Your Codec object will be instantiated and called as such:&lt;/span>
&lt;span class="c1"># codec = Codec()&lt;/span>
&lt;span class="c1"># codec.deserialize(codec.serialize(root))&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;details>
&lt;summary> Python BFS &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># Definition for a binary tree node.&lt;/span>
&lt;span class="c1"># class TreeNode(object):&lt;/span>
&lt;span class="c1"># def __init__(self, x):&lt;/span>
&lt;span class="c1"># self.val = x&lt;/span>
&lt;span class="c1"># self.left = None&lt;/span>
&lt;span class="c1"># self.right = None&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Codec&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">serialize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;Encodes a tree to a single string.
&lt;/span>&lt;span class="s2"> :type root: TreeNode
&lt;/span>&lt;span class="s2"> :rtype: str
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="n">res&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">queue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">collections&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">deque&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">queue&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">node&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">popleft&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="s1">&amp;#39;X,&amp;#39;&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;,&amp;#39;&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">deserialize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;Decodes your encoded data to tree.
&lt;/span>&lt;span class="s2"> :type data: str
&lt;/span>&lt;span class="s2"> :rtype: TreeNode
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="bp">None&lt;/span>
&lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">collections&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">deque&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;,&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">root&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">popleft&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="n">queue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">collections&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">deque&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">queue&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">node&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">popleft&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">val&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">popleft&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">val&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s1">&amp;#39;X&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">val&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">popleft&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">val&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s1">&amp;#39;X&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">root&lt;/span>
&lt;span class="c1"># Your Codec object will be instantiated and called as such:&lt;/span>
&lt;span class="c1"># codec = Codec()&lt;/span>
&lt;span class="c1"># codec.deserialize(codec.serialize(root))&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-4">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(n)$&lt;/li>
&lt;/ul>
&lt;h3 id="987-二叉树的垂序遍历">987. 二叉树的垂序遍历&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/vertical-order-traversal-of-a-binary-tree/">https://leetcode-cn.com/problems/vertical-order-traversal-of-a-binary-tree/&lt;/a>&lt;/p>
&lt;h4 id="题目描述-5">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给你二叉树的根结点 &lt;code>root&lt;/code> ，请你设计算法计算二叉树的&lt;strong>垂序遍历&lt;/strong>序列。&lt;/p>
&lt;p>对位于 &lt;code>(row, col)&lt;/code> 的每个结点而言，其左右子结点分别位于 &lt;code>(row + 1, col - 1)&lt;/code> 和 &lt;code>(row + 1, col + 1)&lt;/code> 。树的根结点位于 &lt;code>(0, 0)&lt;/code>。&lt;/p>
&lt;p>二叉树的&lt;strong>垂序遍历&lt;/strong>从最左边的列开始直到最右边的列结束，按列索引每一列上的所有结点，形成一个按出现位置从上到下排序的有序列表。如果同行同列上有多个结点，则按结点的值从小到大进行排序。&lt;/p>
&lt;p>返回二叉树的&lt;strong>垂序遍历&lt;/strong>序列。&lt;/p>
&lt;p>&lt;strong>示例:&lt;/strong>
&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images/20210218095446.png"/>&lt;/p>
&lt;p>&lt;strong>输入:&lt;/strong> root = [1,2,3,4,6,5,7]&lt;br>
&lt;strong>输出:&lt;/strong> [[4],[2],[1,5,6],[3],[7]]&lt;br>
&lt;strong>解释：&lt;/strong>&lt;br>
这个示例实际上与示例 2 完全相同，只是结点 5 和 6 在树中的位置发生了交换。&lt;br>
因为 5 和 6 的位置仍然相同，所以答案保持不变，仍然按值从小到大排序。&lt;/p>
&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>树中结点数目总数在范围 &lt;code>[1, 1000]&lt;/code> 内&lt;/li>
&lt;li>&lt;code>0 &amp;lt;= Node.val &amp;lt;= 1000&lt;/code>&lt;/li>
&lt;/ul>&lt;/div>
&lt;h4 id="思路-5">思路&lt;/h4>
&lt;ul>
&lt;li>构建字典
&lt;ul>
&lt;li>&lt;code>key&lt;/code>: &lt;code>col&lt;/code>&lt;/li>
&lt;li>&lt;code>value&lt;/code>: &lt;code>[row, node.val]&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>对字典两次排序输出
&lt;ul>
&lt;li>首先, 对 &lt;code>列标 col&lt;/code> 排序&lt;/li>
&lt;li>然后, 对二维数组 &lt;code>[[row, node.val], ... ,[row*, node*.val]]&lt;/code> 的 &lt;code>row&lt;/code> 和 &lt;code>val&lt;/code> 依次排序&lt;/li>
&lt;li>以上都用 &lt;code>sorted()&lt;/code> 实现&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>DFS 深度优先搜索
&lt;ul>
&lt;li>递归实现&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>BFS 广度优先搜索
&lt;ul>
&lt;li>双端列表实现&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="代码-5">代码&lt;/h4>
&lt;details>
&lt;summary> Python DFS &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># Definition for a binary tree node.&lt;/span>
&lt;span class="c1"># class TreeNode:&lt;/span>
&lt;span class="c1"># def __init__(self, val=0, left=None, right=None):&lt;/span>
&lt;span class="c1"># self.val = val&lt;/span>
&lt;span class="c1"># self.left = left&lt;/span>
&lt;span class="c1"># self.right = right&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">verticalTraversal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">]]:&lt;/span>
&lt;span class="n">vertical&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">collections&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">defaultdict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">list&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">dfs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">row&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">col&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">node&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="bp">None&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="bp">None&lt;/span>
&lt;span class="n">dfs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span> &lt;span class="p">,&lt;/span>&lt;span class="n">row&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">col&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">dfs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span> &lt;span class="p">,&lt;/span>&lt;span class="n">row&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">col&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">vertical&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">col&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="n">row&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="n">dfs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">node_value&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">row_value&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node_value&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">values&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">col_value&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">values&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vertical&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="p">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;details>
&lt;summary> Python BFS &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># Definition for a binary tree node.&lt;/span>
&lt;span class="c1"># class TreeNode:&lt;/span>
&lt;span class="c1"># def __init__(self, val=0, left=None, right=None):&lt;/span>
&lt;span class="c1"># self.val = val&lt;/span>
&lt;span class="c1"># self.left = left&lt;/span>
&lt;span class="c1"># self.right = right&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">verticalTraversal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">]]:&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">vertical&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">collections&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">deque&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">collections&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">defaultdict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">list&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">queue&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">node&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">row&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">col&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">popleft&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">vertical&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">col&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="n">row&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">row&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">col&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">queue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">row&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">col&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">node_value&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">row_value&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node_value&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">values&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">col_value&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">values&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">sorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vertical&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="p">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-5">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(n)$&lt;/li>
&lt;/ul>
&lt;h2 id="扩展">扩展&lt;/h2>
&lt;h3 id="剑指-offer">剑指 offer&lt;/h3>
&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images/20210217161519.png"/>
&lt;p>链接在这里 &lt;a href="https://leetcode-cn.com/problemset/lcof/?topicSlugs=tree">🔗&lt;/a>&lt;/p>
&lt;!--
#### 题目描述
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;/div>
#### 思路
#### 代码
&lt;details>
&lt;summary> Python &lt;/summary>
```python
```
&lt;/details>
#### 复杂度
- 时间复杂度：
- 空间复杂度：
-->&lt;blockquote>
&lt;/blockquote></description><category domain="https://matnoble.me/dsa/">dsa</category><category domain="https://matnoble.me/dsa/basic/">basic</category><category domain="https://matnoble.me/tags/leetcode%E9%A2%98%E8%A7%A3/">LeetCode题解</category><category domain="https://matnoble.me/tags/%E7%BC%96%E7%A8%8B%E5%88%B7%E9%A2%98/">编程刷题</category><category domain="https://matnoble.me/tags/%E6%A0%91/">树</category></item><item><title>集成学习</title><link>https://matnoble.me/ai/ml/ensemble_learning/</link><guid isPermaLink="true">https://matnoble.me/ai/ml/ensemble_learning/</guid><pubDate>Thu, 11 Feb 2021 00:20:33 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h2 id="集成学习分类">集成学习分类&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">Boosting&lt;/th>
&lt;th style="text-align:center">Bagging&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">AdaBoost&lt;/td>
&lt;td style="text-align:center">随机森林&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">各个基分类器之间有&lt;strong>强依赖&lt;/strong>&lt;/td>
&lt;td style="text-align:center">各基分类器之间&lt;strong>无强依赖&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">减小集成分类器的&lt;strong>偏差&lt;/strong>&lt;/td>
&lt;td style="text-align:center">减小集成分类器的&lt;strong>方差&lt;/strong>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="boosting">Boosting&lt;/h3>
&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images/20210211181049.png"/>
&lt;h3 id="bagging">Bagging&lt;/h3>
&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images/20210211180951.png"/>
&lt;h3 id="stacking">stacking&lt;/h3>
&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images/20210211181132.png"/>
&lt;h2 id="集成学习步骤">集成学习步骤&lt;/h2>
&lt;ol>
&lt;li>找到误差互相独立的基分类器&lt;/li>
&lt;li>训练基分类器&lt;/li>
&lt;li>合并基分类器的结果&lt;/li>
&lt;/ol>
&lt;h2 id="常用的基分类器">常用的基分类器&lt;/h2>
&lt;p>&lt;strong>决策树&lt;/strong>:&lt;/p>
&lt;ol>
&lt;li>决策树可以较为方便地将样本的权重整合到训练过程中，而不需要使用过采样的方法来调整样本权重。&lt;/li>
&lt;li>决策树的表达能力和泛化能力，可以通过调节树的层数来做折中。&lt;/li>
&lt;li>数据样本的扰动对于决策树的影响较大，因此不同子样本集合生成的决策树基分类器随机性较大，这样的“不稳定学习器”更适合作为基分类器。此外，在决策树节点分裂的时候，随机地选择一个特征子集，从中找出最优分裂属性，很好地引入了随机性。&lt;/li>
&lt;/ol>
&lt;h2 id="偏差与方差">偏差与方差&lt;/h2>
&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images/20210211181211.png"/>
&lt;h2 id="gbdt-vs-xgboost">GBDT VS XGBoost&lt;/h2>
&lt;p>梯度提升决策树&lt;/p></description><category domain="https://matnoble.me/ai/">ai</category><category domain="https://matnoble.me/ai/ml/">ml</category><category domain="https://matnoble.me/series/ai/">人工智能</category><category domain="https://matnoble.me/tags/%E5%9B%9E%E5%BD%92/">回归</category><category domain="https://matnoble.me/tags/%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D/">梯度下降</category></item><item><title>链表</title><link>https://matnoble.me/dsa/basic/linked-list/</link><guid isPermaLink="true">https://matnoble.me/dsa/basic/linked-list/</guid><pubDate>Sat, 06 Feb 2021 00:19:30 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h1 id="目录">目录&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="./#%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98">每日一题&lt;/a>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#61-%E6%97%8B%E8%BD%AC%E9%93%BE%E8%A1%A8">61. 旋转链表&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#24-%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9">24. 两两交换链表中的节点&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#109-%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8%E8%BD%AC%E6%8D%A2%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91">109. 有序链表转换二叉搜索树&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#160-%E7%9B%B8%E4%BA%A4%E9%93%BE%E8%A1%A8">160. 相交链表&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#142-%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8-ii">142. 环形链表 II&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#146-lru-%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6">146. LRU 缓存机制(设计)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="./#%E6%89%A9%E5%B1%95">扩展&lt;/a>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#21-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8">21. 合并两个有序链表&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#83-%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0">83. 删除排序链表中的重复元素&lt;/a>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;a href="">86. 分隔链表&lt;/a>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;a href="">92. 反转链表 II&lt;/a>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;a href="">138. 复制带随机指针的链表&lt;/a>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;a href="">141. 环形链表&lt;/a>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;a href="">143. 重排链表&lt;/a>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;a href="">148. 排序链表&lt;/a>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;a href="">206. 反转链表&lt;/a>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;a href="">234. 回文链表&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="每日一题">每日一题&lt;/h2>
&lt;h3 id="61-旋转链表">61. 旋转链表&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/rotate-list/">https://leetcode-cn.com/problems/rotate-list/&lt;/a>&lt;/p>
&lt;h4 id="题目描述">题目描述&lt;/h4>
&lt;style type="text/css">.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:"Font Awesome 5 Free",FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:'\f071'}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:'\f05a'}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:'\f06a'}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:'\f058'}.notice.tip{background:#e6f9e6}&lt;/style>&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给定一个链表，旋转链表，将链表每个节点向右移动 &lt;code>k&lt;/code> 个位置，其中 &lt;code>k&lt;/code> 是非负数。&lt;/p>
&lt;p>示例 1:&lt;br>
输入: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;NULL, k = 2&lt;br>
输出: 4-&amp;gt;5-&amp;gt;1-&amp;gt;2-&amp;gt;3-&amp;gt;NULL&lt;br>
解释:&lt;br>
向右旋转 1 步: 5-&amp;gt;1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;NULL&lt;br>
向右旋转 2 步: 4-&amp;gt;5-&amp;gt;1-&amp;gt;2-&amp;gt;3-&amp;gt;NULL&lt;/p>
&lt;p>示例 2:&lt;br>
输入: 0-&amp;gt;1-&amp;gt;2-&amp;gt;NULL, k = 4&lt;br>
输出: 2-&amp;gt;0-&amp;gt;1-&amp;gt;NULL&lt;br>
解释:&lt;br>
向右旋转 1 步: 2-&amp;gt;0-&amp;gt;1-&amp;gt;NULL&lt;br>
向右旋转 2 步: 1-&amp;gt;2-&amp;gt;0-&amp;gt;NULL&lt;br>
向右旋转 3 步: 0-&amp;gt;1-&amp;gt;2-&amp;gt;NULL&lt;br>
向右旋转 4 步: 2-&amp;gt;0-&amp;gt;1-&amp;gt;NULL&lt;/p>&lt;/div>
&lt;h4 id="思路">思路&lt;/h4>
&lt;ul>
&lt;li>首先计算链表长度，然后令：&lt;code>k = k % n&lt;/code>&lt;/li>
&lt;li>然后利用 &lt;code>快慢指针&lt;/code>，当快指针走 &lt;code>k&lt;/code> 步后，慢指针开始走，当快指针指向链表尾时，停止&lt;/li>
&lt;/ul>
&lt;h4 id="代码">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># Definition for singly-linked list.&lt;/span>
&lt;span class="c1"># class ListNode:&lt;/span>
&lt;span class="c1"># def __init__(self, val=0, next=None):&lt;/span>
&lt;span class="c1"># self.val = val&lt;/span>
&lt;span class="c1"># self.next = next&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">rotateRight&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">head&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">head&lt;/span>
&lt;span class="n">cur&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">cur&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">cur&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cur&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;span class="n">n&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="n">k&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">k&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">n&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">k&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">head&lt;/span>
&lt;span class="n">fast&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">slow&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">head&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">_&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">fast&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fast&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">fast&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">fast&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">slow&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fast&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">slow&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;span class="n">newHead&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">slow&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;span class="n">slow&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">None&lt;/span>
&lt;span class="n">fast&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">head&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">newHead&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(1)$&lt;/li>
&lt;/ul>
&lt;h3 id="24-两两交换链表中的节点">24. 两两交换链表中的节点&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/swap-nodes-in-pairs/">https://leetcode-cn.com/problems/swap-nodes-in-pairs/&lt;/a>&lt;/p>
&lt;h4 id="题目描述-1">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给定一个链表，两两交换其中相邻的节点，并返回交换后的链表。&lt;strong>你不能只是单纯的改变节点内部的值&lt;/strong>，而是需要实际的进行节点交换。&lt;/p>
&lt;p>示例：&lt;br>
&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images/20210208121842.png"/>
输入：head = [1,2,3,4]&lt;br>
输出：[2,1,4,3]&lt;/p>
&lt;p>示例 2：&lt;br>
输入：head = []&lt;br>
输出：[]&lt;/p>
&lt;p>示例 3：&lt;br>
输入：head = [1]&lt;br>
输出：[1]&lt;/p>
&lt;p>提示：&lt;/p>
&lt;ul>
&lt;li>链表中节点的数目在范围 [0, 100] 内&lt;/li>
&lt;li>0 &amp;lt;= Node.val &amp;lt;= 100&lt;/li>
&lt;/ul>&lt;/div>
&lt;h4 id="思路-1">思路&lt;/h4>
&lt;p>当 &lt;code>pre.next&lt;/code> 和 &lt;code>pre.next.next&lt;/code> 非空时，交换之
&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images/linked-list.png" width=500/>&lt;/p>
&lt;h4 id="代码-1">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># Definition for singly-linked list.&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">ListNode&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">val&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">next&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="bp">None&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">val&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">next&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">swapPairs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">head&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">head&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">pre&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">res&lt;/span>
&lt;span class="n">pre&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">head&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">pre&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">pre&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">former&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">latter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pre&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pre&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;span class="n">pre&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">former&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">latter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">latter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;span class="n">latter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">former&lt;/span>
&lt;span class="n">pre&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">former&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-1">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(1)$&lt;/li>
&lt;/ul>
&lt;h3 id="109-有序链表转换二叉搜索树">109. 有序链表转换二叉搜索树&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/convert-sorted-list-to-binary-search-tree/">https://leetcode-cn.com/problems/convert-sorted-list-to-binary-search-tree/&lt;/a>&lt;/p>
&lt;h4 id="题目描述-2">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给定一个单链表，其中的元素按升序排序，将其转换为高度平衡的二叉搜索树。&lt;/p>
&lt;p>本题中，一个高度平衡二叉树是指一个二叉树每个节点 的左右两个子树的高度差的绝对值不超过 1。&lt;/p>
&lt;p>&lt;strong>示例:&lt;/strong>&lt;br>
给定的有序链表： [-10, -3, 0, 5, 9],&lt;br>
一个可能的答案是：[0, -3, 9, -10, null, 5], 它可以表示下面这个高度平衡二叉搜索树：&lt;/p>
&lt;pre>&lt;code> 0
/ \
-3 9
/ /
-10 5
&lt;/code>&lt;/pre>&lt;/div>
&lt;h4 id="思路-2">思路&lt;/h4>
&lt;p>链表顺序即为搜索二叉数中序遍历的输出。运用递归中序遍历构建搜索二叉数。&lt;/p>
&lt;h4 id="代码-2">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># Definition for singly-linked list.&lt;/span>
&lt;span class="c1"># class ListNode:&lt;/span>
&lt;span class="c1"># def __init__(self, val=0, next=None):&lt;/span>
&lt;span class="c1"># self.val = val&lt;/span>
&lt;span class="c1"># self.next = next&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">sortedListToBST&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span>
&lt;span class="c1"># 使用self声明全局变量h, 记住head的位置&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">h&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">head&lt;/span>
&lt;span class="c1"># 获得链表的长度&lt;/span>
&lt;span class="n">length&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">length&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="n">head&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;span class="c1"># 通过递归，根据中序遍历创建二叉树，左父右；&lt;/span>
&lt;span class="c1"># 递归传入当前区间开始、结束索引&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">buildBST&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">end&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">start&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">end&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="bp">None&lt;/span>
&lt;span class="n">mid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">start&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">end&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;span class="c1"># 左区间递归创建左子树&lt;/span>
&lt;span class="n">left&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">buildBST&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mid&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># 创建父节点&lt;/span>
&lt;span class="n">root&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># 创建一个父节点便更新h的位置&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">h&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;span class="c1"># 连接左子树和父节点&lt;/span>
&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">left&lt;/span>
&lt;span class="c1"># 右区间创建右子树&lt;/span>
&lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">buildBST&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mid&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">end&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">root&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">buildBST&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">length&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-2">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(log N)$&lt;/li>
&lt;/ul>
&lt;h3 id="160-相交链表">160. 相交链表&lt;/h3>
&lt;h4 id="题目描述-3">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>编写一个程序，找到两个单链表相交的起始节点。&lt;/p>
&lt;p>&lt;strong>示例 1：&lt;/strong>
&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images/20210210114054.png"/>
输入：intersectVal = 8, listA = [4,1,8,4,5], listB = [5,0,1,8,4,5], skipA = 2, skipB = 3&lt;br>
输出：Reference of the node with value = 8&lt;/p>
&lt;p>&lt;strong>示例 2：&lt;/strong>
&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images/20210210114123.png"/>
输入：intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2&lt;br>
输出：null&lt;/p>&lt;/div>
&lt;h4 id="思路-3">思路&lt;/h4>
&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images/linked_list_intersection.png"/>
&lt;h4 id="代码-3">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># Definition for singly-linked list.&lt;/span>
&lt;span class="c1"># class ListNode:&lt;/span>
&lt;span class="c1"># def __init__(self, x):&lt;/span>
&lt;span class="c1"># self.val = x&lt;/span>
&lt;span class="c1"># self.next = None&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">getIntersectionNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">headA&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">headB&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">headA&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">headB&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="bp">True&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">i&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="n">headB&lt;/span>
&lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="n">headA&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-3">复杂度&lt;/h4>
&lt;p>m, n 分别是两链表的长度&lt;/p>
&lt;ul>
&lt;li>时间复杂度：$O(m+n)$&lt;/li>
&lt;li>空间复杂度：$O(1)$&lt;/li>
&lt;/ul>
&lt;h3 id="142-环形链表-ii">142. 环形链表 II&lt;/h3>
&lt;h4 id="题目描述-4">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给定一个链表，返回链表开始入环的第一个节点。 如果链表无环，则返回 &lt;code>null&lt;/code>。&lt;/p>
&lt;p>为了表示给定链表中的环，我们使用整数 &lt;code>pos&lt;/code> 来表示链表尾连接到链表中的位置（索引从 0 开始）。 如果 &lt;code>pos&lt;/code> 是 &lt;code>-1&lt;/code>，则在该链表中没有环。&lt;strong>注意，&lt;code>pos&lt;/code> 仅仅是用于标识环的情况，并不会作为参数传递到函数中。&lt;/strong>&lt;/p>
&lt;p>&lt;strong>说明&lt;/strong>：不允许修改给定的链表。&lt;/p>
&lt;p>示例 1：&lt;br>
&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images/20210211172709.png" width=400/>
&lt;strong>输入&lt;/strong>：head = [3,2,0,-4], pos = 1&lt;br>
&lt;strong>输出&lt;/strong>：返回索引为 1 的链表节点&lt;br>
&lt;strong>解释&lt;/strong>：链表中有一个环，其尾部连接到第二个节点。&lt;/p>&lt;/div>
&lt;h4 id="思路-4">思路&lt;/h4>
&lt;p>利用&lt;strong>快慢指针&lt;/strong>: &lt;code>slow&lt;/code> 每次走一步，&lt;code>fast&lt;/code> 每次走两步。
&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images/20210211113427.png" width=500/>&lt;/p>
&lt;p>$$
K + M + L + M = 2(K + M) \Longrightarrow K = L
$$&lt;/p>
&lt;h4 id="代码-4">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># Definition for singly-linked list.&lt;/span>
&lt;span class="c1"># class ListNode:&lt;/span>
&lt;span class="c1"># def __init__(self, x):&lt;/span>
&lt;span class="c1"># self.val = x&lt;/span>
&lt;span class="c1"># self.next = None&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">detectCycle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">slow&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fast&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">head&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="bp">True&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">fast&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="bp">None&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">fast&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="bp">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">None&lt;/span>
&lt;span class="n">slow&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fast&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">slow&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fast&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">slow&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">fast&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">break&lt;/span>
&lt;span class="n">finder&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">head&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="bp">True&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">finder&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">slow&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">finder&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">slow&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">finder&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">slow&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">finder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-4">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(1)$&lt;/li>
&lt;/ul>
&lt;h3 id="146-lru-缓存机制">146. LRU 缓存机制&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/lru-cache/">https://leetcode-cn.com/problems/lru-cache/&lt;/a>&lt;/p>
&lt;h4 id="题目描述-5">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>运用你所掌握的数据结构，设计和实现一个 「LRU (最近最少使用) 缓存机制」 。
实现 &lt;code>LRUCache&lt;/code> 类：&lt;/p>
&lt;ul>
&lt;li>&lt;code>LRUCache(int capacity)&lt;/code> 以正整数作为容量 &lt;code>capacity&lt;/code> 初始化 LRU 缓存&lt;/li>
&lt;li>&lt;code>int get(int key)&lt;/code> 如果关键字 &lt;code>key&lt;/code> 存在于缓存中，则返回关键字的值，否则返回 &lt;code>-1&lt;/code> 。&lt;/li>
&lt;li>&lt;code>void put(int key, int value)&lt;/code> 如果关键字已经存在，则变更其数据值；如果关键字不存在，则插入该组「关键字-值」。当缓存容量达到上限时，它应该在写入新数据之前删除最久未使用的数据值，从而为新的数据值留出空间。
 &lt;/li>
&lt;/ul>
&lt;p>&lt;strong>进阶&lt;/strong>：你是否可以在 &lt;code>O(1)&lt;/code> 时间复杂度内完成这两种操作？&lt;/p>&lt;/div>
&lt;h4 id="思路-5">思路&lt;/h4>
&lt;ul>
&lt;li>需求:
&lt;ul>
&lt;li>存储 &lt;code>key&lt;/code> 和 &lt;code>value&lt;/code>&lt;/li>
&lt;li>顺序存储，或者增加另一个标记，用来记录「访问先后」&lt;/li>
&lt;li>$O(1)$ 时间&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images/20210212171525.png"/>
&lt;p>采用 &lt;code>双向链表&lt;/code> $+$ &lt;code>哈希表&lt;/code>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>双向链表&lt;/strong>： &lt;code>node(key, val)&lt;/code>&lt;/li>
&lt;li>&lt;strong>哈希表&lt;/strong>：&lt;code>{key:node}&lt;/code>&lt;/li>
&lt;li>实现快速将某节点 &lt;code>node&lt;/code> 移至链表结尾&lt;/li>
&lt;li>实现快速删除头节点&lt;/li>
&lt;/ul>
&lt;p>&lt;em>&lt;a href="https://leetcode-cn.com/problems/lru-cache/solution/shu-ju-jie-gou-fen-xi-python-ha-xi-shuang-xiang-li/">参考 Liye&lt;/a>&lt;/em>&lt;/p>
&lt;h4 id="代码-5">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">ListNode&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="bp">None&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="bp">None&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">key&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">key&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">value&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">None&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">None&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">LRUCache&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">capacity&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">capacity&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">capacity&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hashMap&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">head&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tail&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tail&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tail&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">head&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">move_node_to_tail&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">node&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hashMap&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="c1"># 断&lt;/span>
&lt;span class="c1"># prev -- x -- &amp;gt; node &amp;lt;-- x -- next&lt;/span>
&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">prev&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">prev&lt;/span>
&lt;span class="c1"># 连&lt;/span>
&lt;span class="c1"># prev &amp;lt;-- node --&amp;gt; tail&lt;/span>
&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tail&lt;/span>
&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tail&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">prev&lt;/span>
&lt;span class="c1"># prev --&amp;gt; node &amp;lt;-- tail&lt;/span>
&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">prev&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">node&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tail&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">node&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">key&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hashMap&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">move_node_to_tail&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hashMap&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">put&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="bp">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">key&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hashMap&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hashMap&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">value&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">move_node_to_tail&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hashMap&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">capacity&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hashMap&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">head&lt;/span>
&lt;span class="n">new&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hashMap&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span>
&lt;span class="c1"># prev &amp;lt;-- new --&amp;gt; tail&lt;/span>
&lt;span class="n">new&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tail&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">prev&lt;/span>
&lt;span class="n">new&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tail&lt;/span>
&lt;span class="c1"># prev --&amp;gt; new &amp;lt;-- tail&lt;/span>
&lt;span class="n">new&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">prev&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tail&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">prev&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-5">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(1)$&lt;/li>
&lt;li>空间复杂度：$O(capacity)$&lt;/li>
&lt;/ul>
&lt;h2 id="扩展">扩展&lt;/h2>
&lt;h3 id="21-合并两个有序链表">21. 合并两个有序链表&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/merge-two-sorted-lists/">https://leetcode-cn.com/problems/merge-two-sorted-lists/&lt;/a>&lt;/p>
&lt;h4 id="题目描述-6">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>将两个升序链表合并为一个新的 &lt;strong>升序&lt;/strong> 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。&lt;/p>
&lt;p>示例：
&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images/20210208205015.png"/>
&lt;strong>输入&lt;/strong>：l1 = [1,2,4], l2 = [1,3,4]&lt;br>
&lt;strong>输出&lt;/strong>：[1,1,2,3,4,4]&lt;/p>
&lt;p>提示：&lt;/p>
&lt;ul>
&lt;li>两个链表的节点数目范围是 [0, 50]&lt;/li>
&lt;li>-100 &amp;lt;= Node.val &amp;lt;= 100&lt;/li>
&lt;li>l1 和 l2 均按 &lt;strong>非递减顺序&lt;/strong> 排列&lt;/li>
&lt;/ul>&lt;/div>
&lt;h4 id="思路-6">思路&lt;/h4>
&lt;p>遍历即可&lt;/p>
&lt;h4 id="代码-6">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># Definition for singly-linked list.&lt;/span>
&lt;span class="c1"># class ListNode:&lt;/span>
&lt;span class="c1"># def __init__(self, val=0, next=None):&lt;/span>
&lt;span class="c1"># self.val = val&lt;/span>
&lt;span class="c1"># self.next = next&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">mergeTwoLists&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">l1&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">l2&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">cur&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">res&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">l1&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">l2&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">l1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">l2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">cur&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">l1&lt;/span>
&lt;span class="n">l1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">l1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">cur&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">l2&lt;/span>
&lt;span class="n">l2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">l2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;span class="n">cur&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cur&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;span class="n">cur&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">l1&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">l1&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="n">l2&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-6">复杂度&lt;/h4>
&lt;p>$m, n$ 分别是 l1 和 l2 的长度&lt;/p>
&lt;ul>
&lt;li>时间复杂度：$O(min(m,n))$&lt;/li>
&lt;li>空间复杂度：$O(1)$&lt;/li>
&lt;/ul>
&lt;h3 id="83-删除排序链表中的重复元素">83. 删除排序链表中的重复元素&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/remove-duplicates-from-sorted-list/">https://leetcode-cn.com/problems/remove-duplicates-from-sorted-list/&lt;/a>&lt;/p>
&lt;h4 id="题目描述-7">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给定一个排序链表，删除所有重复的元素，使得每个元素只出现一次。&lt;/p>
&lt;p>&lt;strong>示例 1:&lt;/strong>&lt;br>
&lt;strong>输入&lt;/strong>: 1-&amp;gt;1-&amp;gt;2&lt;br>
&lt;strong>输出&lt;/strong>: 1-&amp;gt;2&lt;/p>
&lt;p>&lt;strong>示例 2:&lt;/strong>&lt;br>
&lt;strong>输入&lt;/strong>: 1-&amp;gt;1-&amp;gt;2-&amp;gt;3-&amp;gt;3&lt;br>
&lt;strong>输出&lt;/strong>: 1-&amp;gt;2-&amp;gt;3&lt;/p>&lt;/div>
&lt;h4 id="思路-7">思路&lt;/h4>
&lt;p>创建&lt;strong>哑节点&lt;/strong> &lt;code>pre&lt;/code> 跟在 &lt;code>cur&lt;/code> 后面，遍历数组。并查询 &lt;code>cur.val&lt;/code> 是否在创建的 &lt;code>hashSet&lt;/code> 里&lt;/p>
&lt;h4 id="代码-7">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># Definition for singly-linked list.&lt;/span>
&lt;span class="c1"># class ListNode:&lt;/span>
&lt;span class="c1"># def __init__(self, val=0, next=None):&lt;/span>
&lt;span class="c1"># self.val = val&lt;/span>
&lt;span class="c1"># self.next = next&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">deleteDuplicates&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">hashSet&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">set&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">pre&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">pre&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">head&lt;/span>
&lt;span class="n">cur&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">head&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">cur&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">cur&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">hashSet&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">pre&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cur&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">pre&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cur&lt;/span>
&lt;span class="n">hashSet&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cur&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">cur&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cur&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">head&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-7">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(n)$&lt;/li>
&lt;/ul>
&lt;!--
#### 题目描述
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;/div>
#### 思路
#### 代码
&lt;details>
&lt;summary> Python &lt;/summary>
```python
```
&lt;/details>
#### 复杂度
- 时间复杂度：
- 空间复杂度：
-->&lt;blockquote>
&lt;/blockquote></description><category domain="https://matnoble.me/dsa/">dsa</category><category domain="https://matnoble.me/dsa/basic/">basic</category><category domain="https://matnoble.me/tags/leetcode%E9%A2%98%E8%A7%A3/">LeetCode题解</category><category domain="https://matnoble.me/tags/%E7%BC%96%E7%A8%8B%E5%88%B7%E9%A2%98/">编程刷题</category><category domain="https://matnoble.me/tags/%E9%93%BE%E8%A1%A8/">链表</category></item><item><title>剑指 Offer</title><link>https://matnoble.me/dsa/codinginterviews/</link><guid isPermaLink="true">https://matnoble.me/dsa/codinginterviews/</guid><pubDate>Wed, 27 Jan 2021 00:20:30 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h2 id="目录">目录&lt;/h2>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#03-%E6%95%B0%E7%BB%84%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E5%AD%97">03. 数组中重复的数字&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#04-%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9F%A5%E6%89%BE">04. 二维数组中的查找&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#05-%E6%9B%BF%E6%8D%A2%E7%A9%BA%E6%A0%BC">05. 替换空格&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#06-%E4%BB%8E%E5%B0%BE%E5%88%B0%E5%A4%B4%E6%89%93%E5%8D%B0%E9%93%BE%E8%A1%A8">06. 从尾到头打印链表&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#07-%E9%87%8D%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91">07. 重建二叉树&lt;/a>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;a href="">09. 用两个栈实现队列&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#10-i-%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97">10-I. 斐波那契数列&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#10-ii-%E9%9D%92%E8%9B%99%E8%B7%B3%E5%8F%B0%E9%98%B6%E9%97%AE%E9%A2%98">10-II. 青蛙跳台阶问题&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="https://matnoble.me/dsa/codinginterviews/#11-%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97">11. 旋转数组的最小数字&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#24-%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8">24. 反转链表&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href=".//#64-%E6%B1%8212n">64. 求1+2+…+n&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="03-数组中重复的数字">03. 数组中重复的数字&lt;/h2>
&lt;h3 id="题目描述">题目描述&lt;/h3>
&lt;style type="text/css">.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:"Font Awesome 5 Free",FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:'\f071'}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:'\f05a'}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:'\f06a'}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:'\f058'}.notice.tip{background:#e6f9e6}&lt;/style>&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。&lt;/p>
&lt;p>示例：&lt;br>
输入：[2, 3, 1, 0, 2, 5, 3]&lt;br>
输出：2 或 3&lt;/p>
&lt;p>来源：力扣（LeetCode）&lt;br>
链接：https://leetcode-cn.com/problems/shu-zu-zhong-zhong-fu-de-shu-zi-lcof&lt;br>
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。&lt;/p>&lt;/div>
&lt;h3 id="思路">思路&lt;/h3>
&lt;ol>
&lt;li>判断“环”出口：&lt;code>nums[nums[i]] = nums[i]&lt;/code>&lt;/li>
&lt;li>归位 &lt;code>swap(nums, i, nums[i])&lt;/code>&lt;br>
&lt;code>j = nums[i]&lt;/code> $\to$ &lt;code>nums[j] = j&lt;/code>&lt;/li>
&lt;/ol>
&lt;h3 id="代码">代码&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">findRepeatNumber&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="c1"># dict = set()&lt;/span>
&lt;span class="c1"># for num in nums:&lt;/span>
&lt;span class="c1"># if num in dict: return num&lt;/span>
&lt;span class="c1"># dict.add(num)&lt;/span>
&lt;span class="c1"># return -1&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">swap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">temp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">temp&lt;/span>
&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">continue&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">swap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="n">mat&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Solution&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">nums&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">mat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">findRepeatNumber&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="复杂度">复杂度&lt;/h3>
&lt;ul>
&lt;li>时间复杂度：$O(n)$, $n$ 为数组长度&lt;/li>
&lt;li>空间复杂度：$O(1)$&lt;/li>
&lt;/ul>
&lt;h2 id="04-二维数组中的查找">04. 二维数组中的查找&lt;/h2>
&lt;h3 id="题目描述-1">题目描述&lt;/h3>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>在一个 n * m 的二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个高效的函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。&lt;/p>
&lt;p>示例:&lt;br>
现有矩阵 matrix 如下：&lt;/p>
&lt;pre>&lt;code>[
[1, 4, 7, 11, 15],
[2, 5, 8, 12, 19],
[3, 6, 9, 16, 22],
[10, 13, 14, 17, 24],
[18, 21, 23, 26, 30]
]
&lt;/code>&lt;/pre>&lt;p>给定 target = 5，返回 true。&lt;br>
给定 target = 20，返回 false。&lt;/p>
&lt;p>来源：力扣（LeetCode）&lt;br>
链接：https://leetcode-cn.com/problems/er-wei-shu-zu-zhong-de-cha-zhao-lcof&lt;br>
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。&lt;/p>&lt;/div>
&lt;h3 id="思路-1">思路&lt;/h3>
&lt;p>从左下角出发：&lt;/p>
&lt;ol>
&lt;li>&lt;code>if nums[i][j] == target: return True&lt;/code>&lt;/li>
&lt;li>&lt;code>if nums[i][j] &amp;lt; target: j -= 1&lt;/code> 舍弃第 &lt;code>j&lt;/code> 列，搜索区间向右移&lt;/li>
&lt;li>&lt;code>if nums[i][j] &amp;gt; target: i += 1&lt;/code> 舍弃第 &lt;code>i&lt;/code> 列，搜索区间向上移&lt;/li>
&lt;/ol>
&lt;h3 id="代码-1">代码&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">findNumberIn2DArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">matrix&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">m&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">matrix&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">m&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="bp">False&lt;/span>
&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">matrix&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">matrix&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">j&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">elif&lt;/span> &lt;span class="n">matrix&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">-=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">True&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">False&lt;/span>
&lt;span class="n">mat&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Solution&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">matrix&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">11&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">15&lt;/span>&lt;span class="p">],&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">19&lt;/span>&lt;span class="p">],&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">9&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">16&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">22&lt;/span>&lt;span class="p">],&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">13&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">14&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">17&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">24&lt;/span>&lt;span class="p">],&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="mi">18&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">21&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">23&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">26&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="c1"># matrix = []&lt;/span>
&lt;span class="n">target&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">5&lt;/span>
&lt;span class="c1"># target = 20&lt;/span>
&lt;span class="n">mat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">findNumberIn2DArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">matrix&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="复杂度-1">复杂度&lt;/h3>
&lt;ul>
&lt;li>时间复杂度：$O(m+n)$&lt;/li>
&lt;li>时间复杂度：$O(1)$&lt;/li>
&lt;/ul>
&lt;h2 id="05-替换空格">05. 替换空格&lt;/h2>
&lt;h3 id="题目描述-2">题目描述&lt;/h3>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>请实现一个函数，把字符串 s 中的每个空格替换成&amp;quot;%20&amp;quot;。&lt;/p>
&lt;p>示例 1：&lt;br>
输入：s = &amp;quot;We are happy.&amp;quot;&lt;br>
输出：&amp;quot;We%20are%20happy.&amp;quot;&lt;/p>
&lt;p>限制：&lt;br>
0 &amp;lt;= s 的长度 &amp;lt;= 10000&lt;/p>
&lt;p>来源：力扣（LeetCode）&lt;br>
链接：https://leetcode-cn.com/problems/ti-huan-kong-ge-lcof&lt;br>
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。&lt;/p>&lt;/div>
&lt;h3 id="思路-2">思路&lt;/h3>
&lt;p>新增空间 &lt;code>res&lt;/code>, 然后遍历&lt;/p>
&lt;h3 id="代码-2">代码&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">replaceSpace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">val&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">val&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39; &amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="s1">&amp;#39;%20&amp;#39;&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">val&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;span class="n">mat&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Solution&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;We are happy.&amp;#34;&lt;/span>
&lt;span class="n">mat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">replaceSpace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="复杂度-2">复杂度&lt;/h3>
&lt;ul>
&lt;li>时间复杂度: $O(n)$&lt;/li>
&lt;li>空间复杂度: $O(n)$&lt;/li>
&lt;/ul>
&lt;h2 id="06-从尾到头打印链表">06. 从尾到头打印链表&lt;/h2>
&lt;h3 id="题目描述-3">题目描述&lt;/h3>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>输入一个链表的头节点，从尾到头反过来返回每个节点的值（用数组返回）。&lt;/p>
&lt;p>示例 1：&lt;br>
输入：head = [1,3,2]
输出：[2,3,1]&lt;/p>
&lt;p>来源：力扣（LeetCode）&lt;br>
链接： &lt;a href="https://leetcode-cn.com/problems/cong-wei-dao-tou-da-yin-lian-biao-lcof/">https://leetcode-cn.com/problems/cong-wei-dao-tou-da-yin-lian-biao-lcof/&lt;/a>
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。&lt;/p>&lt;/div>
&lt;h3 id="思路-3">思路&lt;/h3>
&lt;ul>
&lt;li>后序遍历二叉数&lt;/li>
&lt;li>栈 --- 先进后出&lt;/li>
&lt;/ul>
&lt;h3 id="代码-3">代码&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># Definition for singly-linked list.&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">reversePrint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">head&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="bp">None&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reversePrint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="复杂度-3">复杂度&lt;/h3>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(n)$&lt;/li>
&lt;/ul>
&lt;h2 id="07-重建二叉树">07. 重建二叉树&lt;/h2>
&lt;h3 id="题目描述-4">题目描述&lt;/h3>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>输入某二叉树的前序遍历和中序遍历的结果，请重建该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。&lt;br>
例如，给出&lt;br>
&lt;code>前序遍历 preorder = [3,9,20,15,7]&lt;/code>&lt;br>
&lt;code>中序遍历 inorder = [9,3,15,20,7]&lt;/code>&lt;br>
返回如下的二叉树：&lt;/p>
&lt;pre>&lt;code> 3
/ \
9 20
/ \
15 7
&lt;/code>&lt;/pre>&lt;p>来源：力扣（LeetCode）&lt;br>
链接：https://leetcode-cn.com/problems/zhong-jian-er-cha-shu-lcof&lt;br>
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。&lt;/p>&lt;/div>
&lt;h3 id="思路-4">思路&lt;/h3>
&lt;p>确定根节点，然后递归&lt;/p>
&lt;h3 id="代码-4">代码&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># Definition for a binary tree node.&lt;/span>
&lt;span class="c1"># class TreeNode:&lt;/span>
&lt;span class="c1"># def __init__(self, x):&lt;/span>
&lt;span class="c1"># self.val = x&lt;/span>
&lt;span class="c1"># self.left = None&lt;/span>
&lt;span class="c1"># self.right = None&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">buildTree&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">preorder&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">inorder&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">preorder&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">inorder&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="bp">None&lt;/span>
&lt;span class="n">node_val&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">preorder&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">node_idx&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">inorder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node_val&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">node&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TreeNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node_val&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">buildTree&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">preorder&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">node_idx&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">inorder&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="n">node_idx&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">buildTree&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">preorder&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">node_idx&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">:],&lt;/span> &lt;span class="n">inorder&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">node_idx&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">:])&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">node&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="复杂度-4">复杂度&lt;/h3>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(n)$&lt;/li>
&lt;/ul>
&lt;h2 id="10-i-斐波那契数列">10-I. 斐波那契数列&lt;/h2>
&lt;h3 id="题目描述-5">题目描述&lt;/h3>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>写一个函数，输入 n ，求斐波那契（Fibonacci）数列的第 n 项（即 F(N)）。斐波那契数列的定义如下：&lt;br>
&lt;code>F(0) = 0,   F(1) = 1&lt;/code>&lt;br>
&lt;code>F(N) = F(N - 1) + F(N - 2), 其中 N &amp;gt; 1.&lt;/code>&lt;br>
&lt;code>斐波那契数列由 0 和 1 开始，之后的斐波那契数就是由之前的两数相加而得出。&lt;/code>&lt;br>
答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。&lt;/p>
&lt;p>来源：力扣（LeetCode）&lt;br>
链接：https://leetcode-cn.com/problems/fei-bo-na-qi-shu-lie-lcof&lt;br>
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。&lt;/p>&lt;/div>
&lt;h3 id="思路-5">思路&lt;/h3>
&lt;ul>
&lt;li>递归不可行， 时间复杂度达到 $O(n^2)$&lt;/li>
&lt;li>根据递推式 $f(n) = f(n-1) + f(n-2)$，动态规划
&lt;code>a, b, a + b&lt;/code>&lt;/li>
&lt;li>取余运算 mod
$$
(a+b)~\text{mod}~n = \left[(a~\text{mod}~n) + (b~\text{mod}~n) \right]~\text{mod}~n
$$&lt;/li>
&lt;li>&lt;code>0, 1, 1, 2, 3, 5 ...&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="代码-5">代码&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">def&lt;/span> &lt;span class="nf">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">fib&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">_&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">1000000007&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">a&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="复杂度-5">复杂度&lt;/h3>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(1)$&lt;/li>
&lt;/ul>
&lt;h2 id="10-ii-青蛙跳台阶问题">10-II. 青蛙跳台阶问题&lt;/h2>
&lt;h3 id="题目描述-6">题目描述&lt;/h3>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>一只青蛙一次可以跳上1级台阶，也可以跳上2级台阶。求该青蛙跳上一个 n 级的台阶总共有多少种跳法。&lt;/p>
&lt;p>答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。&lt;/p>
&lt;p>示例 1：&lt;br>
&lt;code>输入：n = 2&lt;/code>&lt;br>
&lt;code>输出：2&lt;/code>&lt;/p>
&lt;p>示例 2：&lt;br>
&lt;code>输入：n = 7&lt;/code>&lt;br>
&lt;code>输出：21&lt;/code>&lt;/p>
&lt;p>示例 3：
&lt;code>输入：n = 0&lt;/code>&lt;br>
&lt;code>输出：1&lt;/code>&lt;/p>
&lt;p>提示：&lt;/p>
&lt;p>&lt;code>0 &amp;lt;= n &amp;lt;= 100&lt;/code>&lt;/p>
&lt;p>来源：力扣（LeetCode）&lt;br>
链接：https://leetcode-cn.com/problems/qing-wa-tiao-tai-jie-wen-ti-lcof&lt;br>
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。&lt;/p>&lt;/div>
&lt;h3 id="思路-6">思路&lt;/h3>
&lt;ul>
&lt;li>思路同&lt;a href="./#10-i-%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97">斐波那契数列&lt;/a>&lt;/li>
&lt;li>&lt;code>1, 1, 2, 3, 5 ...&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="代码-6">代码&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">numWays&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">_&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">1000000007&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">a&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="复杂度-6">复杂度&lt;/h3>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(1)$&lt;/li>
&lt;/ul>
&lt;h2 id="11-旋转数组的最小数字">11. 旋转数组的最小数字&lt;/h2>
&lt;p>同 &lt;a href="../basic/array-stack-queue/#154-%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC-ii">LeetCode 154&lt;/a>&lt;/p>
&lt;h2 id="24-反转链表">24. 反转链表&lt;/h2>
&lt;h3 id="题目描述-7">题目描述&lt;/h3>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>定义一个函数，输入一个链表的头节点，反转该链表并输出反转后链表的头节点。&lt;/p>
&lt;p>示例:&lt;br>
&lt;code>输入: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;NULL&lt;/code>&lt;br>
&lt;code>输出: 5-&amp;gt;4-&amp;gt;3-&amp;gt;2-&amp;gt;1-&amp;gt;NULL&lt;/code>&lt;/p>
&lt;p>限制：&lt;br>
0 &amp;lt;= 节点个数 &amp;lt;= 5000&lt;/p>
&lt;p>来源：力扣（LeetCode）&lt;br>
链接：https://leetcode-cn.com/problems/fan-zhuan-lian-biao-lcof&lt;br>
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。&lt;/p>&lt;/div>
&lt;h3 id="思路-7">思路&lt;/h3>
&lt;ul>
&lt;li>递归&lt;/li>
&lt;li>&lt;code>head.next.next = head&lt;/code>&lt;/li>
&lt;li>&lt;code>head.next = None&lt;/code>&lt;/li>
&lt;li>德摩根定律
$$
\neg (p~\wedge~q) \equiv (\neg p)~\vee~(\neg q)
$$
$$
\neg (p~\vee~q) \equiv (\neg p)~\wedge~(\neg q)
$$&lt;/li>
&lt;/ul>
&lt;h3 id="代码-7">代码&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># Definition for singly-linked list.&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">ListNode&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">None&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">reverseListR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1"># 递归&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">head&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="bp">None&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">head&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reverseList&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">head&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">head&lt;/span>
&lt;span class="n">head&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">None&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">reverseList&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">cur&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pre&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="bp">None&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">cur&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">tmp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cur&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;span class="n">cur&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pre&lt;/span>
&lt;span class="n">pre&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cur&lt;/span>
&lt;span class="n">cur&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tmp&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">pre&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="复杂度-7">复杂度&lt;/h3>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(n)$&lt;/li>
&lt;/ul>
&lt;h2 id="64-求12n">64. 求1+2+…+n&lt;/h2>
&lt;h3 id="题目描述-8">题目描述&lt;/h3>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>求 &lt;code>1+2+...+n&lt;/code>，要求不能使用乘除法、for、while、if、else、switch、case等关键字及条件判断语句（A?B:C）。&lt;/p>
&lt;p>示例 1： &lt;br>
&lt;code>输入: n = 3&lt;/code>&lt;br>
&lt;code>输出: 6&lt;/code>&lt;/p>
&lt;p>示例 2：&lt;br>
&lt;code>输入: n = 9&lt;/code>&lt;br>
&lt;code>输出: 45&lt;/code>&lt;/p>
&lt;p>限制：&lt;/p>
&lt;p>&lt;code>1 &amp;lt;= n &amp;lt;= 10000&lt;/code>&lt;/p>
&lt;p>来源：力扣（LeetCode）&lt;br>
链接：https://leetcode-cn.com/problems/qiu-12n-lcof&lt;br>
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。&lt;/p>&lt;/div>
&lt;h3 id="思路-8">思路&lt;/h3>
&lt;ul>
&lt;li>&lt;code>and&lt;/code> 操作如果结果为真，返回最后一个表达式的值，&lt;/li>
&lt;li>&lt;code>or&lt;/code> 操作如果结果为真，返回第一个结果为真的表达式的值&lt;/li>
&lt;li>&lt;code>0 + 1 + 2 + ... + n&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="代码-8">代码&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">sumNums&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sumNums&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="复杂度-8">复杂度&lt;/h3>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(n)$&lt;/li>
&lt;/ul></description><category domain="https://matnoble.me/dsa/">dsa</category><category domain="https://matnoble.me/tags/%E5%89%91%E6%8C%87offer%E9%A2%98%E8%A7%A3/">剑指Offer题解</category><category domain="https://matnoble.me/tags/%E7%BC%96%E7%A8%8B%E5%88%B7%E9%A2%98/">编程刷题</category></item><item><title>数组，栈，队列</title><link>https://matnoble.me/dsa/basic/array-stack-queue/</link><guid isPermaLink="true">https://matnoble.me/dsa/basic/array-stack-queue/</guid><pubDate>Wed, 27 Jan 2021 00:19:30 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h1 id="目录">目录&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="./#%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98">每日一题&lt;/a>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#821-%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%9D%E7%A6%BB">821. 字符的最短距离&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#989-%E6%95%B0%E7%BB%84%E5%BD%A2%E5%BC%8F%E7%9A%84%E6%95%B4%E6%95%B0%E5%8A%A0%E6%B3%95">989. 数组形式的整数加法&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#1381-%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E6%94%AF%E6%8C%81%E5%A2%9E%E9%87%8F%E6%93%8D%E4%BD%9C%E7%9A%84%E6%A0%88%E8%AE%BE%E8%AE%A1">1381. 设计一个支持增量操作的栈（设计）&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#394-%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%A7%A3%E7%A0%81">394. 字符串解码&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#232-%E7%94%A8%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97%E8%AE%BE%E8%AE%A1">232. 用栈实现队列（设计）&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#768-%E6%9C%80%E5%A4%9A%E8%83%BD%E5%AE%8C%E6%88%90%E6%8E%92%E5%BA%8F%E7%9A%84%E5%9D%97-ii">768. 最多能完成排序的块 II&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="./#%E6%95%B0%E7%BB%84%E6%89%A9%E5%B1%95">数组扩展&lt;/a>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> [28. 实现 strStr()]&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#59-%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5-ii">59. 螺旋矩阵 II&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#66-%E5%8A%A0%E4%B8%80">66. 加一&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#75-%E9%A2%9C%E8%89%B2%E5%88%86%E7%B1%BB">75. 颜色分类&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#153-%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC-i">153. 寻找旋转排序数组中的最小值 I&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#154-%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC-ii">154. 寻找旋转排序数组中的最小值 II&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#380-%E5%B8%B8%E6%95%B0%E6%97%B6%E9%97%B4%E6%8F%92%E5%85%A5%E5%88%A0%E9%99%A4%E5%92%8C%E8%8E%B7%E5%8F%96%E9%9A%8F%E6%9C%BA%E5%85%83%E7%B4%A0%E8%AE%BE%E8%AE%A1">380. 常数时间插入、删除和获取随机元素（设计）&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#769-%E6%9C%80%E5%A4%9A%E8%83%BD%E5%AE%8C%E6%88%90%E6%8E%92%E5%BA%8F%E7%9A%84%E5%9D%97">769. 最多能完成排序的块&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#859-%E4%BA%B2%E5%AF%86%E5%AD%97%E7%AC%A6%E4%B8%B2">859. 亲密字符串&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="./#%E6%A0%88%E6%89%A9%E5%B1%95">栈扩展&lt;/a>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#150-%E9%80%86%E6%B3%A2%E5%85%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B1%82%E5%80%BC">150. 逆波兰表达式求值&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#946-%E9%AA%8C%E8%AF%81%E6%A0%88%E5%BA%8F%E5%88%97">946. 验证栈序列&lt;/a>&lt;/li>
&lt;li>&lt;a href="./#%E5%8D%95%E8%B0%83%E6%A0%88">单调栈&lt;/a>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="./#">&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="./#%E9%98%9F%E5%88%97%E6%89%A9%E5%B1%95">队列扩展&lt;/a>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> [155. 最小栈]&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="每日一题">每日一题&lt;/h2>
&lt;h3 id="821-字符的最短距离">821. 字符的最短距离&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/shortest-distance-to-a-character">https://leetcode-cn.com/problems/shortest-distance-to-a-character&lt;/a>&lt;/p>
&lt;h4 id="题目描述">题目描述&lt;/h4>
&lt;style type="text/css">.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:"Font Awesome 5 Free",FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:'\f071'}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:'\f05a'}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:'\f06a'}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:'\f058'}.notice.tip{background:#e6f9e6}&lt;/style>&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给定一个字符串 S 和一个字符 C。返回一个代表字符串 S 中每个字符到字符串 S 中的字符 C 的最短距离的数组。&lt;/p>
&lt;p>示例 1:&lt;br>
输入: S = &amp;quot;loveleetcode&amp;quot;, C = 'e'&lt;br>
输出: [3, 2, 1, 0, 1, 0, 0, 1, 2, 2, 1, 0]&lt;/p>
&lt;p>说明:&lt;br>
字符串 S 的长度范围为 [1, 10000]。&lt;br>
C 是一个单字符，且保证是字符串 S 里的字符。&lt;br>
S 和 C 中的所有字母均为小写字母。&lt;/p>&lt;/div>
&lt;h4 id="思路">思路&lt;/h4>
&lt;p>两次遍历：&lt;/p>
&lt;ol>
&lt;li>左 $\to$ 右，创建 &lt;code>res&lt;/code>&lt;br>
&lt;code>res[i]&lt;/code> 记录 &lt;code>i&lt;/code> 处距离左侧最近的字符 &lt;code>C&lt;/code> 的距离。若左侧没有 &lt;code>C&lt;/code>，则记录为 &lt;code>len(S)&lt;/code>。比如：
&lt;ul>
&lt;li>&lt;code>S = &amp;quot;aabacbd&amp;quot;, C = 'b'&lt;/code>&lt;/li>
&lt;li>&lt;code>res = [7, 7, 0, 1, 2, 0, 1]&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>右 $\to$ 左，更新 &lt;code>res&lt;/code>&lt;br>
&lt;code>if res[i] &amp;gt; res[i+1]+1: res[i] = res[i+1] + 1&lt;/code>
&lt;ul>
&lt;li>&lt;code>res = [7, 7, 0, 1, 2, 0, 1]&lt;/code>&lt;/li>
&lt;li>&lt;code>res = [2, 1, 0, 1, 1, 0, 1]&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4 id="代码">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">from&lt;/span> &lt;span class="nn">typing&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">List&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">shortestToChar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">S&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">C&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">S&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">n&lt;/span>
&lt;span class="c1"># first loop&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">S&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">C&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]:&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">res&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">S&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">C&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="n">res&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="c1"># second loop&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">-=&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">res&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">res&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]:&lt;/span> &lt;span class="n">res&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">res&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">-=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;span class="n">mat&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Solution&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">S&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;loveleetcode&amp;#34;&lt;/span>
&lt;span class="n">C&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;e&amp;#39;&lt;/span>
&lt;span class="n">S&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;aaba&amp;#34;&lt;/span>
&lt;span class="n">C&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;b&amp;#34;&lt;/span>
&lt;span class="n">mat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">shortestToChar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">S&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">C&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度">复杂度&lt;/h4>
&lt;p>$n$ 为 &lt;code>S&lt;/code> 的长度&lt;/p>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(n)$&lt;/li>
&lt;/ul>
&lt;h3 id="989-数组形式的整数加法">989. 数组形式的整数加法&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/add-to-array-form-of-integer">https://leetcode-cn.com/problems/add-to-array-form-of-integer&lt;/a>&lt;/p>
&lt;h4 id="题目描述-1">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>对于非负整数 &lt;code>X&lt;/code> 而言，&lt;code>X&lt;/code> 的数组形式是每位数字按从左到右的顺序形成的数组。例如，如果 &lt;code>X = 1231&lt;/code>，那么其数组形式为 &lt;code>[1,2,3,1]&lt;/code>。&lt;/p>
&lt;p>给定非负整数 &lt;code>X&lt;/code> 的数组形式 &lt;code>A&lt;/code>，返回整数 &lt;code>X+K&lt;/code> 的数组形式。&lt;/p>
&lt;p>示例 1：&lt;br>
&lt;code>输入：A = [1,2,0,0], K = 34&lt;/code>&lt;br>
&lt;code>输出：[1,2,3,4]&lt;/code>&lt;br>
&lt;code>解释：1200 + 34 = 1234&lt;/code>&lt;/p>
&lt;p>示例 2：&lt;br>
&lt;code>输入：A = [2,7,4], K = 181&lt;/code>
&lt;code>输出：[4,5,5]&lt;/code>&lt;br>
&lt;code>解释：274 + 181 = 455&lt;/code>&lt;/p>
&lt;p>示例 3：
&lt;code>输入：A = [2,1,5], K = 806&lt;/code>
&lt;code>输出：[1,0,2,1]&lt;/code>
&lt;code>解释：215 + 806 = 1021&lt;/code>&lt;/p>
&lt;p>示例 4：&lt;br>
&lt;code>输入：A = [9,9,9,9,9,9,9,9,9,9], K = 1&lt;/code>&lt;br>
&lt;code>输出：[1,0,0,0,0,0,0,0,0,0,0]&lt;/code>&lt;br>
&lt;code>解释：9999999999 + 1 = 10000000000&lt;/code>
 &lt;/p>
&lt;p>提示：&lt;/p>
&lt;ul>
&lt;li>&lt;code>1 &amp;lt;= A.length &amp;lt;= 10000&lt;/code>&lt;/li>
&lt;li>&lt;code>0 &amp;lt;= A[i] &amp;lt;= 9&lt;/code>&lt;/li>
&lt;li>&lt;code>0 &amp;lt;= K &amp;lt;= 10000&lt;/code>&lt;/li>
&lt;li>&lt;code>如果 A.length &amp;gt; 1，那么 A[0] != 0&lt;/code>&lt;/li>
&lt;/ul>&lt;/div>
&lt;h4 id="思路-1">思路&lt;/h4>
&lt;ul>
&lt;li>取个位数：&lt;code>K % 10&lt;/code>&lt;/li>
&lt;li>去掉个位数：&lt;code>K \\ 10&lt;/code>&lt;/li>
&lt;li>用 &lt;code>count&lt;/code> 记录进位&lt;/li>
&lt;li>考虑两种情形：
&lt;ul>
&lt;li>&lt;code>len(A) &amp;gt;= len(K)&lt;/code>&lt;/li>
&lt;li>&lt;code>len(A) &amp;lt; len(K)&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="代码-1">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">from&lt;/span> &lt;span class="nn">typing&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">List&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">addToArrayForm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">A&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">K&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">K&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">count&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">temp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">A&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">K&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">10&lt;/span>
&lt;span class="n">A&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">temp&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">temp&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">10&lt;/span>
&lt;span class="n">K&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">K&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">10&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">-=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">K&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1"># 若 K 长于 A&lt;/span>
&lt;span class="n">temp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">K&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">10&lt;/span>
&lt;span class="n">A&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">insert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">temp&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">temp&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">10&lt;/span>
&lt;span class="n">K&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">K&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">10&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">A&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">A&lt;/span>
&lt;span class="n">mat&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Solution&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">A&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">K&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">11&lt;/span>
&lt;span class="n">K&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">9&lt;/span>
&lt;span class="c1"># K = 99&lt;/span>
&lt;span class="n">mat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">addToArrayForm&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">K&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-1">复杂度&lt;/h4>
&lt;p>&lt;code>n = len(A)&lt;/code>, &lt;code>m&lt;/code> 为 &lt;code>K&lt;/code> 的位数&lt;/p>
&lt;ul>
&lt;li>时间复杂度：$O(n+\max(0, m-n))$&lt;/li>
&lt;li>空间复杂度：$O(\max(1, m-n))$&lt;/li>
&lt;/ul>
&lt;h3 id="1381-设计一个支持增量操作的栈设计">1381. 设计一个支持增量操作的栈(设计)&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/design-a-stack-with-increment-operation">https://leetcode-cn.com/problems/design-a-stack-with-increment-operation&lt;/a>&lt;/p>
&lt;h4 id="题目描述-2">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>请你设计一个支持下述操作的栈。实现自定义栈类 &lt;code>CustomStack&lt;/code>：&lt;/p>
&lt;ul>
&lt;li>&lt;code>CustomStack(int maxSize)&lt;/code>：用 &lt;code>maxSize&lt;/code> 初始化对象，&lt;code>maxSize&lt;/code> 是栈中最多能容纳的元素数量，栈在增长到 &lt;code>maxSize&lt;/code> 之后则不支持 &lt;code>push&lt;/code> 操作。&lt;/li>
&lt;li>&lt;code>void push(int x)&lt;/code>：如果栈还未增长到 &lt;code>maxSize &lt;/code>，就将 &lt;code>x&lt;/code> 添加到栈顶。&lt;/li>
&lt;li>&lt;code>int pop()&lt;/code>：弹出栈顶元素，并返回栈顶的值，或栈为空时返回 &lt;code>-1&lt;/code> 。&lt;/li>
&lt;li>&lt;code>void increment(int k, int val)&lt;/code>：栈底的 &lt;code>k &lt;/code>个元素的值都增加 &lt;code>val&lt;/code> 。如果栈中元素总数小于 &lt;code>k&lt;/code>，则栈中的所有元素都增加 val 。&lt;/li>
&lt;/ul>&lt;/div>
&lt;h4 id="思路-2">思路&lt;/h4>
&lt;ul>
&lt;li>用列表定义&lt;code>stack&lt;/code>&lt;/li>
&lt;li>&lt;code>push&lt;/code>: 能加元素时：&lt;code>append&lt;/code>&lt;/li>
&lt;li>&lt;code>pop&lt;/code>: 能返回时，见下图&lt;/li>
&lt;li>&lt;code>increment(int k, int val)&lt;/code>: 增加 &lt;code>increments&lt;/code> 数组，将 &lt;code>val&lt;/code> 记录第 &lt;code>k&lt;/code> 位处
&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images/20210302092517.png"/>&lt;/li>
&lt;/ul>
&lt;h4 id="代码-2">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">CustomStack&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">maxSize&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stack&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">maxSize&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">maxSize&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">increments&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="bp">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stack&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">maxSize&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">size&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">increments&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">pop&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">size&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">size&lt;/span> &lt;span class="o">-=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">size&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">increments&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">increments&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">increments&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">increment&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">val&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="bp">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">k&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">increments&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">increments&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">val&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-2">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：均为$O(1)$&lt;/li>
&lt;li>空间复杂度：$O(\text{size})$&lt;/li>
&lt;/ul>
&lt;h3 id="394-字符串解码">394. 字符串解码&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/decode-string/">https://leetcode-cn.com/problems/decode-string/&lt;/a>&lt;/p>
&lt;h4 id="题目描述-3">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给定一个经过编码的字符串，返回它解码后的字符串。&lt;/p>
&lt;p>编码规则为: &lt;code>k[encoded_string]&lt;/code>，表示其中方括号内部的 &lt;code>encoded_string&lt;/code> 正好重复 &lt;code>k&lt;/code> 次。注意 &lt;code>k&lt;/code> 保证为正整数。&lt;/p>
&lt;p>你可以认为输入字符串总是有效的；输入字符串中没有额外的空格，且输入的方括号总是符合格式要求的。&lt;/p>
&lt;p>此外，你可以认为原始数据不包含数字，所有的数字只表示重复的次数 &lt;code>k&lt;/code> ，例如不会出现像 &lt;code>3a&lt;/code> 或 &lt;code>2[4]&lt;/code> 的输入。&lt;/p>
&lt;p>示例 1：&lt;br>
输入：s = &amp;quot;3[a]2[bc]&amp;quot;&lt;br>
输出：&amp;quot;aaabcbc&amp;quot;&lt;/p>
&lt;p>示例 2：&lt;br>
输入：s = &amp;quot;3[a2[c]]&amp;quot;&lt;br>
输出：&amp;quot;accaccacc&amp;quot;&lt;/p>
&lt;p>示例 3：&lt;br>
输入：s = &amp;quot;2[abc]3[cd]ef&amp;quot;&lt;br>
输出：&amp;quot;abcabccdcdcdef&amp;quot;&lt;/p>
&lt;p>示例 4：&lt;br>
输入：s = &amp;quot;abc3[cd]xyz&amp;quot;&lt;br>
输出：&amp;quot;abccdcdcdxyz&amp;quot;&lt;/p>&lt;/div>
&lt;h4 id="思路-3">思路&lt;/h4>
&lt;ul>
&lt;li>利用堆栈“先进后出”的特点&lt;/li>
&lt;li>遍历字符串 &lt;code>s&lt;/code>:
&lt;ul>
&lt;li>若 '[' ，则栈内存储 &lt;code>[multi, res]&lt;/code>：
&lt;ul>
&lt;li>&lt;code>multi&lt;/code>: 接下来要处理的字符串的重复次数&lt;/li>
&lt;li>&lt;code>res&lt;/code>: 之前解码的字符串&lt;/li>
&lt;li>初始化 &lt;code>multi = 0, res = ''&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>若 &lt;code>]&lt;/code>，则 &lt;code>pop&lt;/code> 栈，利用栈顶内层的 &lt;code>multi&lt;/code> 和次内层 &lt;code>res&lt;/code> 更新 &lt;code>res&lt;/code> --&amp;gt; 清算&lt;/li>
&lt;li>若 &lt;code>[0, 9]&lt;/code>，则更新 &lt;code>multi&lt;/code>&lt;/li>
&lt;li>若其他(字母)，则更新 &lt;code>res&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="代码-3">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">decodeString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">stack&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">res&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">multi&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[],&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">val&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">val&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;[&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="n">multi&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">res&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="n">res&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">multi&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="k">elif&lt;/span> &lt;span class="n">val&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;]&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">cur_multi&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">last_res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">last_res&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">cur_multi&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">res&lt;/span>
&lt;span class="k">elif&lt;/span> &lt;span class="s1">&amp;#39;0&amp;#39;&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">val&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="s1">&amp;#39;9&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">multi&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">multi&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">10&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">val&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-3">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(n)$ # 最差&lt;/li>
&lt;/ul>
&lt;h3 id="232-用栈实现队列设计">232. 用栈实现队列(设计)&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/implement-queue-using-stacks">https://leetcode-cn.com/problems/implement-queue-using-stacks&lt;/a>&lt;/p>
&lt;h4 id="题目描述-4">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>请你仅使用两个栈实现先入先出队列。队列应当支持一般队列的支持的所有操作（&lt;code>push&lt;/code>、&lt;code>pop&lt;/code>、&lt;code>peek&lt;/code>、&lt;code>empty&lt;/code>）：&lt;/p>
&lt;p>实现 &lt;code>MyQueue&lt;/code> 类：&lt;/p>
&lt;ul>
&lt;li>&lt;code>void push(int x)&lt;/code> 将元素 &lt;code>x&lt;/code> 推到队列的末尾&lt;/li>
&lt;li>&lt;code>int pop()&lt;/code> 从队列的开头移除并返回元素&lt;/li>
&lt;li>&lt;code>int peek()&lt;/code> 返回队列开头的元素&lt;/li>
&lt;li>&lt;code>boolean empty()&lt;/code> 如果队列为空，返回 &lt;code>true&lt;/code>；否则，返回 &lt;code>false&lt;/code>&lt;/li>
&lt;/ul>&lt;/div>
&lt;h4 id="思路-4">思路&lt;/h4>
&lt;ul>
&lt;li>用列表表示两个栈，并定义栈底（队首）元素 &lt;code>a&lt;/code>&lt;/li>
&lt;li>&lt;code>push&lt;/code>: 直接 &lt;code>append&lt;/code>, 注意: 当 &lt;code>A&lt;/code> 空时，赋值栈底（队首）元素 &lt;code>a&lt;/code>&lt;/li>
&lt;li>&lt;code>pop&lt;/code>: 将 &lt;code>A&lt;/code> 倒序压入 &lt;code>B&lt;/code>，返回 &lt;code>B.pop()&lt;/code>&lt;/li>
&lt;li>&lt;code>peek&lt;/code>: 返回 &lt;code>B[-1]&lt;/code> 或 &lt;code>a&lt;/code>&lt;/li>
&lt;li>&lt;code>empty&lt;/code>: 都为 &lt;code>None&lt;/code> 时，才返回 &lt;code>False&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="代码-4">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">MyQueue&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span class="s2"> Initialize your data structure here.
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">B&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[],&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">None&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="bp">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span class="s2"> Push element x to the back of queue.
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">x&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">pop&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span class="s2"> Removes the element from in front of queue and returns that element.
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">None&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">peek&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span class="s2"> Get the front element.
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">a&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">empty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span class="s2"> Returns whether the queue is empty.
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">A&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-4">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度： &lt;code>pop()&lt;/code> 均摊时间复杂度为 $O(1)$, 其余$O(1)$&lt;/li>
&lt;li>空间复杂度： $O(\text{size})$&lt;/li>
&lt;/ul>
&lt;h3 id="768-最多能完成排序的块-ii">768. 最多能完成排序的块 II&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/max-chunks-to-make-sorted-ii/">https://leetcode-cn.com/problems/max-chunks-to-make-sorted-ii/&lt;/a>&lt;/p>
&lt;h4 id="题目描述-5">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>&lt;code>arr&lt;/code> 是一个可能包含重复元素的整数数组，我们将这个数组分割成几个“块”，并将这些块分别进行排序。之后再连接起来，使得连接的结果和按升序排序后的原数组相同。&lt;/p>
&lt;p>我们最多能将数组分成多少块？&lt;/p>
&lt;p>示例：&lt;br>
输入: arr = [2,1,3,4,4]&lt;br>
输出: 4&lt;br>
解释:
我们可以把它分成两块，例如 &lt;code>[2, 1]&lt;/code>, &lt;code>[3, 4, 4]&lt;/code>。
然而，分成 &lt;code>[2, 1]&lt;/code>, &lt;code>[3]&lt;/code>, &lt;code>[4]&lt;/code>, &lt;code>[4]&lt;/code> 可以得到最多的块数。&lt;/p>
&lt;p>相似题目：&lt;a href="./#769-%E6%9C%80%E5%A4%9A%E8%83%BD%E5%AE%8C%E6%88%90%E6%8E%92%E5%BA%8F%E7%9A%84%E5%9D%97">769. 最多能完成排序的块&lt;/a>&lt;/p>&lt;/div>
&lt;h4 id="思路-5">思路&lt;/h4>
&lt;ul>
&lt;li>利用&lt;code>栈&lt;/code>，遍历&lt;code>arr&lt;/code>&lt;/li>
&lt;li>&lt;code>栈&lt;/code> 特点
&lt;ul>
&lt;li>依次存储每个区块的最大值，形成 &lt;code>递增栈&lt;/code>&lt;/li>
&lt;li>&lt;code>入栈&lt;/code>: 遍历值 &lt;code>val&lt;/code> &amp;gt;= stack[-1]&lt;/li>
&lt;li>&lt;code>出栈&lt;/code>: 当遍历值 &lt;code>val&lt;/code> &amp;lt; stack[-1], stack.pop()&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>返回 &lt;code>len(stack)&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="代码-5">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">maxChunksToSorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">stack&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">val&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">stack&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">val&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">stack&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="n">head&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">stack&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">val&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">stack&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]:&lt;/span> &lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stack&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-5">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(n)$&lt;/li>
&lt;/ul>
&lt;h2 id="数组扩展">数组扩展&lt;/h2>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/spiral-matrix-ii">https://leetcode-cn.com/problems/spiral-matrix-ii&lt;/a>&lt;/p>
&lt;h3 id="59-螺旋矩阵-ii">59. 螺旋矩阵 II&lt;/h3>
&lt;h4 id="题目描述-6">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给你一个正整数 &lt;code>n&lt;/code> ，生成一个包含 &lt;code>1&lt;/code> 到 &lt;code>n2&lt;/code> 所有元素，且元素按顺时针顺序螺旋排列的 &lt;code>n x n&lt;/code> 正方形矩阵 matrix 。&lt;/p>
&lt;p>示例 1：&lt;br>
&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images/20210201204902.png"/>
&lt;code>输入：n = 3&lt;/code>&lt;br>
&lt;code>输出：[[1,2,3],[8,9,4],[7,6,5]]&lt;/code>&lt;/p>
&lt;p>示例 2：&lt;br>
&lt;code>输入：n = 1&lt;/code>&lt;br>
&lt;code>输出：[[1]]&lt;/code>&lt;/p>
&lt;p>提示：&lt;br>
&lt;code>1 &amp;lt;= n &amp;lt;= 20&lt;/code>&lt;/p>&lt;/div>
&lt;h4 id="思路-6">思路&lt;/h4>
&lt;ul>
&lt;li>&lt;code>上 --&amp;gt; 左 --&amp;gt; 下 --&amp;gt; 右&lt;/code> 为一次循环&lt;/li>
&lt;li>循环出口 &lt;code>k &amp;lt; n*n&lt;/code>&lt;/li>
&lt;li>需要注意：&lt;code>n&lt;/code> 为奇数时，需要在矩阵正中填充最后一位&lt;/li>
&lt;/ul>
&lt;h4 id="代码-6">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">from&lt;/span> &lt;span class="nn">typing&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">List&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">generateMatrix&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">]]:&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="n">k&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">n&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">)]&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">k&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">res&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">k&lt;/span>
&lt;span class="n">k&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="n">j&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">res&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">k&lt;/span>
&lt;span class="n">k&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">res&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">k&lt;/span>
&lt;span class="n">k&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="n">j&lt;/span> &lt;span class="o">-=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">res&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">k&lt;/span>
&lt;span class="n">k&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">-=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="n">j&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="n">c&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">k&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">res&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">k&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">res&lt;/span>
&lt;span class="n">mat&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Solution&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">7&lt;/span>
&lt;span class="c1"># n = 1&lt;/span>
&lt;span class="n">mat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">generateMatrix&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-6">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n^2)$&lt;/li>
&lt;li>空间复杂度：$O(n^2)$&lt;/li>
&lt;/ul>
&lt;h3 id="66-加一">66. 加一&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/plus-one">https://leetcode-cn.com/problems/plus-one&lt;/a>&lt;/p>
&lt;h4 id="题目描述-7">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给定一个由整数组成的非空数组所表示的非负整数，在该数的基础上加一。 最高位数字存放在数组的首位， 数组中每个元素只存储单个数字。 你可以假设除了整数 0 之外，这个整数不会以零开头。&lt;/p>
&lt;p>示例 1:&lt;br>
输入: [1,2,3]&lt;br>
输出: [1,2,4]&lt;br>
解释: 输入数组表示数字 123。&lt;/p>
&lt;p>示例 2:&lt;br>
输入: [4,3,2,1]&lt;br>
输出: [4,3,2,2]&lt;br>
解释: 输入数组表示数字 4321。&lt;/p>&lt;/div>
&lt;h4 id="思路-7">思路&lt;/h4>
&lt;p>在数组上做竖式加法，用 &lt;code>carry&lt;/code> 来表示进位，反向遍历数组。&lt;/p>
&lt;p>遍历结束条件：&lt;/p>
&lt;ul>
&lt;li>遍历中，遇到 &lt;code>carry&lt;/code> 为 0 的时候，直接 &lt;code>return digits&lt;/code>&lt;/li>
&lt;li>遍历结束，此时 &lt;code>carry&lt;/code> 必不为 0 (等于 1)，返回 &lt;code>return [carry] + digits&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="代码-7">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">from&lt;/span> &lt;span class="nn">typing&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">List&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">plusOne&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">digits&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="n">carry&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">digits&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">digits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">carry&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">carry&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">digits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">carry&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">digits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">10&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">carry&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">digits&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">carry&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">digits&lt;/span>
&lt;span class="n">mat&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Solution&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">digits&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">9&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">9&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="c1"># digits = [0]&lt;/span>
&lt;span class="c1"># digits = [0, 0]&lt;/span>
&lt;span class="n">mat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plusOne&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">digits&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-7">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(N)$, N 为数组长度。&lt;/li>
&lt;li>空间复杂度：$O(1)$。&lt;/li>
&lt;/ul>
&lt;h3 id="75-颜色分类">75. 颜色分类&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/sort-colors">https://leetcode-cn.com/problems/sort-colors&lt;/a>&lt;/p>
&lt;h4 id="题目描述-8">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给定一个包含红色、白色和蓝色，一共 n 个元素的数组，原地对它们进行排序，使得相同颜色的元素相邻，并按照红色、白色、蓝色顺序排列。&lt;/p>
&lt;p>此题中，我们使用整数 0、1 和 2 分别表示红色、白色和蓝色。&lt;br>
注意: 不能使用代码库中的排序函数来解决这道题。&lt;/p>
&lt;p>示例:&lt;br>
输入: &lt;code>[2,0,2,1,1,0]&lt;/code>&lt;br>
输出: &lt;code>[0,0,1,1,2,2]&lt;/code>&lt;/p>
&lt;p>进阶：&lt;br>
一个直观的解决方案是使用计数排序的两趟扫描算法。&lt;br>
首先，迭代计算出0、1 和 2 元素的个数，然后按照0、1、2的排序，重写当前数组。你能想出一个仅使用常数空间的一趟扫描算法吗？&lt;/p>&lt;/div>
&lt;h4 id="思路-8">思路&lt;/h4>
&lt;p>利用双指针 &lt;code>zero&lt;/code> 和 &lt;code>two&lt;/code>：&lt;/p>
&lt;ul>
&lt;li>&lt;code>[0, zero]&lt;/code> 闭区间内存储 &lt;code>0&lt;/code>&lt;/li>
&lt;li>&lt;code>(zero，two]&lt;/code> 左开右闭是未处理部分&lt;/li>
&lt;li>&lt;code>(two, -1]&lt;/code> 左开右闭内存储 &lt;code>2&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>具体地，初始化 &lt;code>zero，two = -1, len(nums)-1&lt;/code>, 然后以 &lt;code>i=0&lt;/code> 遍历数组:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="err">等于&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="err">：&lt;/span>
&lt;span class="n">zero&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="err">交换&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="err">和&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">zero&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="c1"># zero 向前一步，并保证 nums[zero] = 0&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">elif&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="err">等于&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="err">：&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">elif&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="err">等于&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="err">交换&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="err">和&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">two&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">two&lt;/span> &lt;span class="o">-=&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="c1"># two 后退一步， i 不变 &lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注意： 区间 &lt;code>(zero, i)&lt;/code> 之间的都是 &lt;code>1&lt;/code>&lt;/p>
&lt;h4 id="代码-8">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">from&lt;/span> &lt;span class="nn">typing&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">List&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">sortColors&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="bp">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">swap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">zero&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">two&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">two&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">zero&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="n">swap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">zero&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">elif&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">swap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">two&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">two&lt;/span> &lt;span class="o">-=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="n">mat&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Solution&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">nums&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="c1"># nums = [2,0,1]&lt;/span>
&lt;span class="n">mat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sortColors&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-8">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(N)$, $N$ 为数组长度&lt;/li>
&lt;li>空间复杂度：$O(1)$&lt;/li>
&lt;/ul>
&lt;h3 id="153-寻找旋转排序数组中的最小值-i">153. 寻找旋转排序数组中的最小值 I&lt;/h3>
&lt;h4 id="题目描述-9">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>假设按照升序排序的数组在预先未知的某个点上进行了旋转。例如，数组 [0,1,2,4,5,6,7] 可能变为 [4,5,6,7,0,1,2] 。请找出其中最小的元素。&lt;/p>
&lt;p>示例 1：&lt;br>
&lt;code>输入：nums = [3,4,5,1,2]&lt;/code>&lt;br>
&lt;code>输出：1&lt;/code>&lt;/p>
&lt;p>示例 2：&lt;br>
&lt;code>输入：nums = [4,5,6,7,0,1,2]&lt;/code>&lt;br>
&lt;code>输出：0&lt;/code>&lt;/p>
&lt;p>示例 3：&lt;br>
&lt;code>输入：nums = [1]&lt;/code>&lt;br>
&lt;code>输出：1&lt;/code>&lt;/p>
&lt;p>提示：&lt;/p>
&lt;ul>
&lt;li>&lt;code>1 &amp;lt;= nums.length &amp;lt;= 5000&lt;/code>&lt;/li>
&lt;li>&lt;code>-5000 &amp;lt;= nums[i] &amp;lt;= 5000&lt;/code>&lt;/li>
&lt;li>&lt;code>nums&lt;/code> 中的所有整数都是 唯一 的&lt;/li>
&lt;li>&lt;code>nums&lt;/code> 原来是一个升序排序的数组，但在预先未知的某个点上进行了旋转&lt;/li>
&lt;/ul>
&lt;p>来源：力扣（LeetCode）&lt;br>
链接：https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array&lt;br>
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。&lt;/p>&lt;/div>
&lt;h4 id="思路-9">思路&lt;/h4>
&lt;ul>
&lt;li>二分查找&lt;/li>
&lt;li>&lt;code>if nums[left] &amp;lt; nums[right]: return nums[left]&lt;/code> 数组一定有序&lt;/li>
&lt;li>&lt;code>mid = left + (right-left)//2&lt;/code>
&lt;ul>
&lt;li>&lt;code>if nums[left] &amp;lt;= nums[mid]: left = mid+1&lt;/code>&lt;/li>
&lt;li>&lt;code>if nums[mid] &amp;lt; nums[left]: right = mid #不能丢弃可能解&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="代码-9">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">findMin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">left&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">right&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">left&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">right&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">]:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">mid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">left&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="mi">2&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="n">left&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">right&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">mat&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Solution&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">nums&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">nums&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="c1"># nums = [1]&lt;/span>
&lt;span class="n">nums&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">mat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">findMin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-9">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(logN)$&lt;/li>
&lt;li>空间复杂度：$O(1)$&lt;/li>
&lt;/ul>
&lt;h3 id="154-寻找旋转排序数组中的最小值-ii">154. 寻找旋转排序数组中的最小值 II&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/insert-delete-getrandom-o1">https://leetcode-cn.com/problems/insert-delete-getrandom-o1&lt;/a>&lt;/p>
&lt;h4 id="题目描述-10">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>假设按照升序排序的数组在预先未知的某个点上进行了旋转。
( 例如，数组 &lt;code>[0,1,2,4,5,6,7]&lt;/code> 可能变为 &lt;code>[4,5,6,7,0,1,2]&lt;/code> )。
请找出其中最小的元素。&lt;br>
注意数组中可能存在重复的元素。&lt;/p>
&lt;p>示例 1：&lt;br>
&lt;code>输入: [1,3,5]&lt;/code>&lt;br>
&lt;code>输出: 1&lt;/code>&lt;/p>
&lt;p>示例 2：&lt;br>
&lt;code>输入: [2,2,2,0,1]&lt;/code>&lt;br>
&lt;code>输出: 0&lt;/code>&lt;/p>
&lt;p>来源：力扣（LeetCode）&lt;br>
链接：https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array-ii&lt;br>
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。&lt;/p>&lt;/div>
&lt;h4 id="思路-10">思路&lt;/h4>
&lt;ul>
&lt;li>大致同上题&lt;/li>
&lt;li>当 &lt;code>nums[left] == nums[mid]&lt;/code> 时，需要 &lt;code>left += 1&lt;/code>，即
&lt;code>while left &amp;lt; mid and nums[left] == nums[mid]: left += 1&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="代码-10">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">from&lt;/span> &lt;span class="nn">typing&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">List&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">findMin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">left&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">right&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">left&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">right&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">mid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">left&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">right&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">left&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">left&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">mid&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]:&lt;/span> &lt;span class="n">left&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">]:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="n">left&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">right&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">mat&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Solution&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">nums&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">nums&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">nums&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">nums&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">mat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">findMin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-10">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(logN)$, 最差 $O(n)$&lt;/li>
&lt;li>空间复杂度：$O(1)$&lt;/li>
&lt;/ul>
&lt;h3 id="380-常数时间插入删除和获取随机元素设计">380. 常数时间插入、删除和获取随机元素（设计）&lt;/h3>
&lt;h4 id="题目描述-11">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>设计一个支持在平均 时间复杂度 &lt;code>O(1)&lt;/code> 下，执行以下操作的数据结构。&lt;/p>
&lt;ul>
&lt;li>&lt;code>insert(val)&lt;/code>：当元素 &lt;code>val&lt;/code> 不存在时，向集合中插入该项。&lt;/li>
&lt;li>&lt;code>remove(val)&lt;/code>：元素 &lt;code>val&lt;/code> 存在时，从集合中移除该项。&lt;/li>
&lt;li>&lt;code>getRandom&lt;/code>：随机返回现有集合中的一项。每个元素应该有相同的概率被返回。&lt;/li>
&lt;/ul>&lt;/div>
&lt;h4 id="代码-11">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">RandomizedSet&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span class="s2"> Initialize your data structure here.
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">l&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span> &lt;span class="c1"># 列表&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span> &lt;span class="c1"># 字典&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">insert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">val&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span class="s2"> Inserts a value to the set. Returns true if the set did not already contain the specified element.
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">val&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">False&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">True&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">remove&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">val&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span class="s2"> Removes a value from the set. Returns true if the set contained the specified element.
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">val&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">True&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">False&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">getRandom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span class="s2"> Get a random element from the set.
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h3 id="769-最多能完成排序的块">769. 最多能完成排序的块&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/max-chunks-to-make-sorted/">https://leetcode-cn.com/problems/max-chunks-to-make-sorted/&lt;/a>&lt;/p>
&lt;h4 id="题目描述-12">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>数组 &lt;code>arr&lt;/code> 是 &lt;code>[0, 1, ..., arr.length - 1]&lt;/code> 的一种排列，我们将这个数组分割成几个“块”，并将这些块分别进行排序。之后再连接起来，使得连接的结果和按升序排序后的原数组相同。&lt;/p>
&lt;p>我们最多能将数组分成多少块？&lt;/p>
&lt;p>示例 1:&lt;br>
输入: arr = [4,3,2,1,0]&lt;br>
输出: 1&lt;br>
解释:
将数组分成 2 块或者更多块，都无法得到所需的结果。
例如，分成 &lt;code>[4, 3]&lt;/code>, &lt;code>[2, 1, 0]&lt;/code> 的结果是 &lt;code>[3, 4, 0, 1, 2]&lt;/code>，这不是有序的数组。&lt;/p>
&lt;p>相似题目：&lt;a href="./#768-%E6%9C%80%E5%A4%9A%E8%83%BD%E5%AE%8C%E6%88%90%E6%8E%92%E5%BA%8F%E7%9A%84%E5%9D%97-ii">768. 最多能完成排序的块 II&lt;/a>&lt;/p>&lt;/div>
&lt;h4 id="思路-11">思路&lt;/h4>
&lt;p>简单计数：&lt;/p>
&lt;ul>
&lt;li>遍历数组 &lt;code>arr&lt;/code>，记录 &lt;code>a[:idx]&lt;/code> 中的最大值 &lt;code>max_&lt;/code>&lt;/li>
&lt;li>&lt;code>max_&lt;/code> &amp;lt;= &lt;code>idx&lt;/code> 时，&lt;code>k += 1&lt;/code>&lt;/li>
&lt;li>遍历结束时，返回 &lt;code>k&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="代码-12">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">maxChunksToSorted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">k&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="n">max_&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">idx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">val&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">enumerate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">max_&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">max_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">max_&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">idx&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">k&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">k&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-11">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(1)$&lt;/li>
&lt;/ul>
&lt;h3 id="859-亲密字符串">859. 亲密字符串&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/buddy-strings">https://leetcode-cn.com/problems/buddy-strings&lt;/a>&lt;/p>
&lt;h4 id="题目描述-13">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给定两个由小写字母构成的字符串 A 和 B ，只要我们可以通过交换 A 中的两个字母得到与 B 相等的结果，就返回 true ；否则返回 false 。&lt;/p>
&lt;p>交换字母的定义是取两个下标 i 和 j （下标从 0 开始），只要 i!=j 就交换 A[i] 和 A[j] 处的字符。例如，在 &amp;quot;abcd&amp;quot; 中交换下标 0 和下标 2 的元素可以生成 &amp;quot;cbad&amp;quot; 。&lt;/p>
&lt;p>示例 1：&lt;br>
输入： &lt;code>A = &amp;quot;ab&amp;quot;, B = &amp;quot;ba&amp;quot;&lt;/code>&lt;br>
输出： &lt;code>true&lt;/code>&lt;br>
解释： &lt;code>你可以交换 A[0] = 'a' 和 A[1] = 'b' 生成 &amp;quot;ba&amp;quot;，此时 A 和 B 相等。&lt;/code>&lt;/p>
&lt;p>示例 2：&lt;br>
输入： &lt;code>A = &amp;quot;ab&amp;quot;, B = &amp;quot;ab&amp;quot;&lt;/code>&lt;br>
输出： &lt;code>false&lt;/code>&lt;br>
解释： &lt;code>你只能交换 A[0] = 'a' 和 A[1] = 'b' 生成 &amp;quot;ba&amp;quot;，此时 A 和 B 不相等。&lt;/code>&lt;/p>
&lt;p>示例 3:&lt;br>
输入： &lt;code>A = &amp;quot;aa&amp;quot;, B = &amp;quot;aa&amp;quot;&lt;/code>&lt;br>
输出： &lt;code>true&lt;/code>&lt;br>
解释： &lt;code>你可以交换 A[0] = 'a' 和 A[1] = 'a' 生成 &amp;quot;aa&amp;quot;，此时 A 和 B 相等。&lt;/code>&lt;/p>
&lt;p>示例 4：&lt;br>
输入： &lt;code>A = &amp;quot;aaaaaaabc&amp;quot;, B = &amp;quot;aaaaaaacb&amp;quot;&lt;/code>&lt;br>
输出： &lt;code>true&lt;/code>&lt;/p>
&lt;p>示例 5：&lt;br>
输入： &lt;code>A = &amp;quot;&amp;quot;, B = &amp;quot;aa&amp;quot;&lt;/code>&lt;br>
输出： &lt;code>false&lt;/code>&lt;/p>
&lt;p>提示：&lt;/p>
&lt;ul>
&lt;li>0 &amp;lt;= A.length &amp;lt;= 20000&lt;/li>
&lt;li>0 &amp;lt;= B.length &amp;lt;= 20000&lt;/li>
&lt;li>A 和 B 仅由小写字母构成。&lt;/li>
&lt;/ul>&lt;/div>
&lt;h4 id="思路-12">思路&lt;/h4>
&lt;ul>
&lt;li>判定 &lt;code>True&lt;/code> 条件&lt;/li>
&lt;li>&lt;code>A == B&lt;/code>，&lt;code>A&lt;/code> 或 &lt;code>B&lt;/code> 中有重复字母时为 &lt;code>True&lt;/code>, 反之 &lt;code>False&lt;/code>&lt;/li>
&lt;li>&lt;code>A != B&lt;/code>，只有两处索引是错位时才为 &lt;code>True&lt;/code>，反之 &lt;code>False&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="代码-13">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">buddyStrings&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">A&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">m&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="bp">False&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">A&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">B&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">C&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">set&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">A&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">C&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="bp">True&lt;/span>
&lt;span class="n">C&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">False&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">C&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">A&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">B&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="n">C&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">B&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]])&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">C&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="bp">False&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">C&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">C&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">C&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">][::&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">mat&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Solution&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">A&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;acb&amp;#39;&lt;/span>
&lt;span class="n">B&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;abc&amp;#39;&lt;/span>
&lt;span class="n">A&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;aa&amp;#39;&lt;/span>
&lt;span class="n">B&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;aa&amp;#39;&lt;/span>
&lt;span class="n">mat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">buddyStrings&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">B&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-12">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(n)$(最坏)&lt;/li>
&lt;/ul>
&lt;hr />
&lt;h2 id="栈扩展">栈扩展&lt;/h2>
&lt;h3 id="150-逆波兰表达式求值">150. 逆波兰表达式求值&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/evaluate-reverse-polish-notation">https://leetcode-cn.com/problems/evaluate-reverse-polish-notation&lt;/a>&lt;/p>
&lt;h4 id="题目描述-14">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>根据 逆波兰表示法，求表达式的值。有效的运算符包括 &lt;code>+, -, *, /&lt;/code> 。每个运算对象可以是整数，也可以是另一个逆波兰表达式。&lt;/p>
&lt;p>说明：&lt;br>
整数除法只保留整数部分。
给定逆波兰表达式总是有效的。换句话说，表达式总会得出有效数值且不存在除数为 0 的情况。&lt;/p>
&lt;p>示例 1：&lt;br>
输入: &lt;code>[&amp;quot;2&amp;quot;, &amp;quot;1&amp;quot;, &amp;quot;+&amp;quot;, &amp;quot;3&amp;quot;, &amp;quot;*&amp;quot;]&lt;/code>&lt;br>
输出: &lt;code>9&lt;/code>&lt;br>
解释: 该算式转化为常见的中缀算术表达式为：&lt;code>((2 + 1) * 3) = 9&lt;/code>&lt;/p>
&lt;p>示例 2：&lt;br>
输入: &lt;code>[&amp;quot;4&amp;quot;, &amp;quot;13&amp;quot;, &amp;quot;5&amp;quot;, &amp;quot;/&amp;quot;, &amp;quot;+&amp;quot;]&lt;/code>&lt;br>
输出: &lt;code>6&lt;/code>&lt;br>
解释: 该算式转化为常见的中缀算术表达式为：&lt;code>(4 + (13 / 5)) = 6&lt;/code>&lt;/p>&lt;/div>
&lt;h4 id="思路-13">思路&lt;/h4>
&lt;ul>
&lt;li>使用数据结构 -- 栈 stack (先进后出)&lt;/li>
&lt;li>遍历循环整个列表&lt;/li>
&lt;/ul>
&lt;h4 id="代码-14">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">from&lt;/span> &lt;span class="nn">typing&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">List&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">evalRPN&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tokens&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tokens&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="n">stack&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">tokens&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;+&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">tmp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">tmp&lt;/span>
&lt;span class="k">elif&lt;/span> &lt;span class="n">tokens&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;-&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">tmp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">tmp&lt;/span>
&lt;span class="k">elif&lt;/span> &lt;span class="n">tokens&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;*&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">tmp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">tmp&lt;/span>
&lt;span class="k">elif&lt;/span> &lt;span class="n">tokens&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">tmp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">tmp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tokens&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">stack&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">mat&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Solution&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">tokens&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;+&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;3&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;*&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="c1"># tokens = [&amp;#34;4&amp;#34;, &amp;#34;13&amp;#34;, &amp;#34;5&amp;#34;, &amp;#34;/&amp;#34;, &amp;#34;+&amp;#34;]&lt;/span>
&lt;span class="c1"># tokens = [&amp;#34;10&amp;#34;, &amp;#34;6&amp;#34;, &amp;#34;9&amp;#34;, &amp;#34;3&amp;#34;, &amp;#34;+&amp;#34;, &amp;#34;-11&amp;#34;, &amp;#34;*&amp;#34;, &amp;#34;/&amp;#34;, &amp;#34;*&amp;#34;, &amp;#34;17&amp;#34;, &amp;#34;+&amp;#34;, &amp;#34;5&amp;#34;, &amp;#34;+&amp;#34;]&lt;/span>
&lt;span class="n">tokens&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;18&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">mat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">evalRPN&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tokens&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-13">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度：$O(n)$&lt;/li>
&lt;li>空间复杂度：$O(1)$&lt;/li>
&lt;/ul>
&lt;h3 id="946-验证栈序列">946. 验证栈序列&lt;/h3>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/validate-stack-sequences">https://leetcode-cn.com/problems/validate-stack-sequences&lt;/a>&lt;/p>
&lt;h4 id="题目描述-15">题目描述&lt;/h4>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>给定 &lt;code>pushed&lt;/code> 和 &lt;code>popped&lt;/code> 两个序列，每个序列中的 值都不重复，只有当它们可能是在最初空栈上进行的推入 &lt;code>push&lt;/code> 和弹出 &lt;code>pop&lt;/code> 操作序列的结果时，返回 &lt;code>true&lt;/code>；否则，返回 &lt;code>false&lt;/code>。&lt;/p>
&lt;p>示例 1：&lt;br>
输入：pushed = [1,2,3,4,5], popped = [4,5,3,2,1]&lt;br>
输出：true&lt;br>
解释：我们可以按以下顺序执行：&lt;br>
&lt;code>push(1), push(2), push(3), push(4), pop() -&amp;gt; 4, push(5), pop() -&amp;gt; 5, pop() -&amp;gt; 3, pop() -&amp;gt; 2, pop() -&amp;gt; 1&lt;/code>&lt;/p>
&lt;p>示例 2：&lt;br>
输入：pushed = [1,2,3,4,5], popped = [4,3,5,1,2]&lt;br>
输出：false&lt;br>
解释：1 不能在 2 之前弹出。&lt;/p>
&lt;p>提示：&lt;/p>
&lt;ul>
&lt;li>0 &amp;lt;= pushed.length == popped.length &amp;lt;= 1000&lt;/li>
&lt;li>0 &amp;lt;= pushed[i], popped[i] &amp;lt; 1000&lt;/li>
&lt;li>pushed 是 popped 的排列。&lt;/li>
&lt;/ul>&lt;/div>
&lt;h4 id="思路-14">思路&lt;/h4>
&lt;ul>
&lt;li>遍历数组 &lt;code>pushed&lt;/code>，并将值压入&lt;code>栈 stack&lt;/code>&lt;/li>
&lt;li>注意 &lt;code>popped&lt;/code> 是出栈的顺序，当遍历值与 &lt;code>popped[j]&lt;/code> 相同时，&lt;code>stack.pop()&lt;/code>&lt;/li>
&lt;li>最后，判断 &lt;code>stack&lt;/code> 是否为空&lt;/li>
&lt;/ul>
&lt;h4 id="代码-15">代码&lt;/h4>
&lt;details>
&lt;summary> Python &lt;/summary>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">from&lt;/span> &lt;span class="nn">typing&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">List&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">validateStackSequences&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pushed&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">popped&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pushed&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">stack&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">pushed&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">popped&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pushed&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="n">j&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">stack&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">stack&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">popped&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="n">stack&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">j&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">popped&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">stack&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="bp">False&lt;/span> &lt;span class="c1"># 提前结束&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">True&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stack&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="mi">0&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="bp">False&lt;/span>
&lt;span class="n">mat&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Solution&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">pushed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">popped&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">pushed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">popped&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">pushed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">popped&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">mat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">validateStackSequences&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pushed&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">popped&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/details>
&lt;h4 id="复杂度-14">复杂度&lt;/h4>
&lt;ul>
&lt;li>时间复杂度： $O(n)$ # 最差&lt;/li>
&lt;li>空间复杂度： $O(n)$&lt;/li>
&lt;/ul>
&lt;!-- 模板
#### 题目描述
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;/div>
#### 思路
#### 代码
&lt;details>
&lt;summary> Python &lt;/summary>
```python
```
&lt;/details>
#### 复杂度
- 时间复杂度：
- 空间复杂度：
--></description><category domain="https://matnoble.me/dsa/">dsa</category><category domain="https://matnoble.me/dsa/basic/">basic</category><category domain="https://matnoble.me/tags/leetcode%E9%A2%98%E8%A7%A3/">LeetCode题解</category><category domain="https://matnoble.me/tags/%E7%BC%96%E7%A8%8B%E5%88%B7%E9%A2%98/">编程刷题</category></item><item><title>数据类型</title><link>https://matnoble.me/dsa/array/</link><guid isPermaLink="true">https://matnoble.me/dsa/array/</guid><pubDate>Mon, 25 Jan 2021 00:19:30 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>Python 中的数据类型：&lt;/p>
&lt;ul>
&lt;li>不可变：Number, String, Tuple&lt;/li>
&lt;li>可变： Bool, List, Set, Dictionary&lt;/li>
&lt;/ul>
&lt;h2 id="数字-number">数字 Number&lt;/h2>
&lt;blockquote>
&lt;p>int, long, float, complex&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;code>//&lt;/code> &lt;strong>向下取整&lt;/strong>：&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>5 // 3 = 1.67 # 1
-5 // 3 = -1.67 # -2
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>&lt;code>%&lt;/code> 取模 - 返回除法的余数&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>365 % 10 # 5
5 % 3 # 2
&lt;/code>&lt;/pre>
&lt;style type="text/css">.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:"Font Awesome 5 Free",FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:'\f071'}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:'\f05a'}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:'\f06a'}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:'\f058'}.notice.tip{background:#e6f9e6}&lt;/style>&lt;div class="notice tip" >
&lt;p class="first notice-title">Tips&lt;/p>&lt;p>奇数&lt;br>
&lt;code>num % 2 != 0&lt;/code>&lt;br>
偶数&lt;br>
&lt;code>num % 2 == 0&lt;/code>&lt;/p>&lt;/div>
&lt;h2 id="数组-array">数组 Array&lt;/h2>
&lt;p>数组支持&lt;strong>随机访问&lt;/strong>。Python 的数组分三种类型：&lt;/p>
&lt;ul>
&lt;li>list 列表&lt;/li>
&lt;li>tuple 元组&lt;/li>
&lt;li>dictionary 字典&lt;/li>
&lt;/ul>
&lt;h3 id="列表-list-">列表 list []&lt;/h3>
&lt;p>遍历列表 &lt;code>nums&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">for&lt;/span> &lt;span class="n">num&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">idx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">val&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">enumerate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">idx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">操作&lt;/th>
&lt;th style="text-align:center">说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">.insert(index, value)&lt;/td>
&lt;td style="text-align:center">增&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">.append(value)&lt;/td>
&lt;td style="text-align:center">增&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">.remove(value)&lt;/td>
&lt;td style="text-align:center">删&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">del list[index]&lt;/td>
&lt;td style="text-align:center">删&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">.pop()&lt;/td>
&lt;td style="text-align:center">删&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">.sort()&lt;/td>
&lt;td style="text-align:center">排序&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">.reverse()&lt;/td>
&lt;td style="text-align:center">逆序&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="notice warning" >
&lt;p class="first notice-title">Ｗarning&lt;/p>&lt;p>直接赋值 &amp;amp; 浅拷贝(copy) &amp;amp; 深拷贝(deepcopy)&lt;/p>
&lt;ul>
&lt;li>&lt;strong>直接赋值&lt;/strong>：其实就是对象的引用（别名）。&lt;/li>
&lt;li>&lt;strong>浅拷贝(copy)&lt;/strong>：拷贝父对象，不会拷贝对象的内部的子对象。&lt;/li>
&lt;li>&lt;strong>深拷贝(deepcopy)&lt;/strong>： copy 模块的 deepcopy 方法，完全拷贝了父对象及其子对象。&lt;/li>
&lt;/ul>&lt;/div>
&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images/copy.png" width="600"/>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">import&lt;/span> &lt;span class="nn">copy&lt;/span>
&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">]]&lt;/span> &lt;span class="c1">#原始对象&lt;/span>
&lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="c1">#赋值，传对象的引用&lt;/span>
&lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">copy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">copy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">#对象拷贝，浅拷贝&lt;/span>
&lt;span class="n">d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">copy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">deepcopy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">#对象拷贝，深拷贝&lt;/span>
&lt;span class="n">a&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">#修改对象a&lt;/span>
&lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;c&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">#修改对象a中的[&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;]数组对象&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;a = &amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;b = &amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;c = &amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;d = &amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">d&lt;/span> &lt;span class="p">)&lt;/span>
&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;a = &amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;c&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;b = &amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;c&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;c = &amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;c&amp;#39;&lt;/span>&lt;span class="p">]])&lt;/span>
&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;d = &amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">]])&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="元组-tuple">元组 tuple()&lt;/h3>
&lt;p>&lt;strong>不可修改&lt;/strong>&lt;/p>
&lt;h3 id="字典-dictionary">字典 dictionary{:}&lt;/h3>
&lt;p>哈希表或散列表&lt;/p>
&lt;p>&lt;code>dict = {key1:value1, key2:value2, key3:value3}&lt;/code>&lt;/p>
&lt;ul>
&lt;li>增
&lt;code>dict['key'] = value&lt;/code>&lt;/li>
&lt;li>删
&lt;code>del dict['key']&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># define user = dict()&lt;/span>
&lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s1">&amp;#39;userName&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;MatNoble&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;gender&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;Male&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;age&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">18&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1"># .items()&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">():&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">Key:{key}&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="s2">&amp;#34;Value:{value}&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># .key() + .get(key)&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">key&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">keys&lt;/span>&lt;span class="p">():&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">key&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;:&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="c1"># .values()&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">values&lt;/span>&lt;span class="p">():&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;a href="https://colab.research.google.com/drive/1TUA3v4K_zdZzSUjCtoO-0tbA_9sAvFQe?usp=sharing">&lt;img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab">&lt;/a>&lt;/p>
&lt;h3 id="栈-stack">栈 Stack&lt;/h3>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://cdn.jsdelivr.net/gh/MatNoble/Images/20210125201657.png"
title="LIFO(Last In, First Out - 后进先出)"
alt="LIFO(Last In, First Out - 后进先出)"
width="95%"
>
&lt;span class="caption">◎ LIFO(Last In, First Out - 后进先出)&lt;/span>
&lt;/span>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">操作&lt;/th>
&lt;th>说明&lt;/th>
&lt;th>时间复杂度&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">.push()&lt;/td>
&lt;td>将元素放置到栈顶&lt;/td>
&lt;td>O(1)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">.pop()&lt;/td>
&lt;td>将栈顶元素弹出&lt;/td>
&lt;td>O(1)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">.top()&lt;/td>
&lt;td>得到栈顶元素的值&lt;/td>
&lt;td>O(1)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">.isEmpty()&lt;/td>
&lt;td>判断栈内是否有元素&lt;/td>
&lt;td>O(1)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>应用&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>函数调用栈&lt;/li>
&lt;li>浏览器前进后退&lt;/li>
&lt;li>匹配括号&lt;/li>
&lt;li>单调栈用来寻找下一个更大（更小）元素&lt;/li>
&lt;/ul>
&lt;h3 id="队列-queue">队列 Queue&lt;/h3>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://cdn.jsdelivr.net/gh/MatNoble/Images/20210125221038.png"
title="FIFO (First In First Out - 先进先出)"
alt="FIFO (First In First Out - 先进先出)"
width="95%"
>
&lt;span class="caption">◎ FIFO (First In First Out - 先进先出)&lt;/span>
&lt;/span>
&lt;h2 id="字符串-string">字符串 String&lt;/h2>
&lt;ul>
&lt;li>f -&amp;gt; format&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>first_name = &amp;quot;Ross&amp;quot;
last_name = &amp;quot;MatNoble&amp;quot;
full_name = f&amp;quot;{first_name} {last_name}&amp;quot; # Ross MatNoble
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>特殊符号&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">操作&lt;/th>
&lt;th>说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">\&lt;/td>
&lt;td>转义符&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">\n&lt;/td>
&lt;td>换行符&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">\t&lt;/td>
&lt;td>制表符&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;code>r&lt;/code> 避免转义
&lt;code>print(r&amp;quot;\\\t\\&amp;quot;) # \\\t\\&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">操作&lt;/th>
&lt;th>说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">.title()&lt;/td>
&lt;td>首字母大写&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">.upper()&lt;/td>
&lt;td>大写&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">.lower()&lt;/td>
&lt;td>小写&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">.strip()&lt;/td>
&lt;td>消除空格&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="布尔-bool">布尔 Bool&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">and&lt;/th>
&lt;th style="text-align:center">True&lt;/th>
&lt;th style="text-align:center">False&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">True&lt;/td>
&lt;td style="text-align:center">True&lt;/td>
&lt;td style="text-align:center">False&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">False&lt;/td>
&lt;td style="text-align:center">False&lt;/td>
&lt;td style="text-align:center">False&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">or&lt;/th>
&lt;th style="text-align:center">True&lt;/th>
&lt;th style="text-align:center">False&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">True&lt;/td>
&lt;td style="text-align:center">True&lt;/td>
&lt;td style="text-align:center">True&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">False&lt;/td>
&lt;td style="text-align:center">True&lt;/td>
&lt;td style="text-align:center">False&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">not&lt;/th>
&lt;th style="text-align:center">True&lt;/th>
&lt;th style="text-align:center">False&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:center">False&lt;/td>
&lt;td style="text-align:center">True&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="集合-set">集合 Set&lt;/h2>
&lt;p>&lt;strong>唯一性&lt;/strong>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">操作&lt;/th>
&lt;th>说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">.add(value)&lt;/td>
&lt;td>增&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">.update(value)&lt;/td>
&lt;td>增, 列表、元组、字典&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">.remove(value)&lt;/td>
&lt;td>删&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">.discard(value)&lt;/td>
&lt;td>删，不报错&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description><category domain="https://matnoble.me/dsa/">dsa</category><category domain="https://matnoble.me/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/">数据结构与算法</category></item><item><title>线性回归</title><link>https://matnoble.me/ai/ml/regression/</link><guid isPermaLink="true">https://matnoble.me/ai/ml/regression/</guid><pubDate>Sun, 24 Jan 2021 00:20:33 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h2 id="多项式拟合">多项式拟合&lt;/h2>
&lt;h3 id="问题简述">问题简述&lt;/h3>
&lt;p>拟合数据点 $\hat{y_j}$
$$
\hat{y_j} = \sum_{i=0}^{n-1} \omega_i * x_j^i
$$&lt;/p>
&lt;p>拟合 $m$ 个数据点，并写成向量的形式&lt;/p>
&lt;p>$$
\hat{\boldsymbol{y}} = \mathbf{X} \cdot \boldsymbol{\omega}
$$&lt;/p>
&lt;p>其中&lt;/p>
&lt;p>$$
\mathbf{X} =
\begin{bmatrix}
1 &amp;amp; x_1 &amp;amp; \cdots &amp;amp; x_1^{n-1} \\
1 &amp;amp; x_2 &amp;amp; \cdots &amp;amp; x_2^{n-1} \\&lt;br>
\vdots &amp;amp; \vdots &amp;amp; &amp;amp; \vdots \\&lt;br>
1 &amp;amp; x_m &amp;amp; \cdots &amp;amp; x_m^{n-1}
\end{bmatrix}
$$&lt;/p>
&lt;h3 id="程序设计">程序设计&lt;/h3>
&lt;style type="text/css">.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:"Font Awesome 5 Free",FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:'\f071'}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:'\f05a'}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:'\f06a'}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:'\f058'}.notice.tip{background:#e6f9e6}&lt;/style>&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>输入： $m$ 个相异的数据点 $(\boldsymbol{x}, \boldsymbol{y})$&lt;/p>
&lt;p>输出： $\boldsymbol{\omega}$&lt;/p>&lt;/div>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># fake data&lt;/span>
&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">linspace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">150&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">exp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mf">2.0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">power&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mf">2.0&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reshape&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">shape&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reshape&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">shape&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1"># Visualization&lt;/span>
&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">figure&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">figsize&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">18&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">mngr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_current_fig_manager&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">mngr&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">wm_geometry&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;+50+310&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">suptitle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Regression&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fontsize&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">subplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">X&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ones&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">shape&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">X&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hstack&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">power&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">X&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">w&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">X&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">shape&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">mat&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">regression&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">w&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lr&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">0.4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lam&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">stop_condition&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">1e-3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mu&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">std&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">train&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://cdn.jsdelivr.net/gh/MatNoble/Images/linear-regression.gif"
title="回归"
alt="回归"
width="95%"
>
&lt;span class="caption">◎ 回归&lt;/span>
&lt;/span>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://cdn.jsdelivr.net/gh/MatNoble/Images/20210126200259.png"
title="回归"
alt="回归"
width="95%"
>
&lt;span class="caption">◎ 回归&lt;/span>
&lt;/span>
&lt;p>&lt;a href="https://github.com/MatNoble/MachineLearningNote/blob/main/regression.py">GitHub 源码&lt;/a>&lt;/p>
&lt;h2 id="numpy-vs-pytorch">Numpy VS PyTorch&lt;/h2>
&lt;p>$$
y^{(i)} = w_1x_1^{(i)} + w_2x_2^{(i)} + b
$$&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="n">num_inputs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="c1"># w1, w2&lt;/span>
&lt;span class="n">num_examples&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1000&lt;/span> &lt;span class="c1"># 样本容量&lt;/span>
&lt;span class="n">true_w&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">3.4&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">true_b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">4.2&lt;/span>
&lt;span class="n">features&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num_examples&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">num_inputs&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">dtype&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">float32&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 特征(1000, 2)&lt;/span>
&lt;span class="n">labels&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">true_w&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">features&lt;/span>&lt;span class="p">[:,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">true_w&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">features&lt;/span>&lt;span class="p">[:,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">true_b&lt;/span>
&lt;span class="n">labels&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tensor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.01&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">size&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">labels&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">()),&lt;/span>
&lt;span class="n">dtype&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">float32&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 标签(1000, 1)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images/visual.svg"/>
&lt;h3 id="pytorch">PyTorch&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># 初始化参数&lt;/span>
&lt;span class="n">w&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tensor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.01&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">num_inputs&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)),&lt;/span>
&lt;span class="n">dtype&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">float32&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">requires_grad&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="bp">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">zeros&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dtype&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">float32&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">requires_grad&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="bp">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># 训练数据&lt;/span>
&lt;span class="n">lr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">0.1&lt;/span>
&lt;span class="n">num_epochs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">150&lt;/span> &lt;span class="c1"># 进行 150 步&lt;/span>
&lt;span class="n">net&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">linreg&lt;/span>
&lt;span class="n">loss&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">squared_loss&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">epoch&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num_epochs&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">features&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">labels&lt;/span>
&lt;span class="n">l&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">loss&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">net&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">l&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">backward&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">sgd&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">lr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">batch_size&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1000&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">w&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">grad&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">zero_&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">b&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">grad&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">zero_&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">train_l&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">loss&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">net&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">features&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">labels&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="numpy">Numpy&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># tensor --&amp;gt; numpy&lt;/span>
&lt;span class="n">features_numpy&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reshape&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">features&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">numpy&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">num_examples&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">num_inputs&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">labels_numpy&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reshape&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">labels&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">numpy&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">num_examples&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c1"># 最后增加一列 1&lt;/span>
&lt;span class="n">features_numpy&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hstack&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">features_numpy&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ones&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">num_examples&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">))))&lt;/span>
&lt;span class="n">w&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">normal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.01&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">num_inputs&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">w&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">vstack&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]))&lt;/span>
&lt;span class="n">mat&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">linear_regression&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">labels_numpy&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">features_numpy&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">w&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">lr&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">0.1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lam&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">MAX_Iter&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">150&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">stop_condition&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">1e-8&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">loss&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">w&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">train&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images/cost.svg"/>
&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images/20210128144112.png"/>
&lt;h2 id="实践">实践&lt;/h2></description><category domain="https://matnoble.me/ai/">ai</category><category domain="https://matnoble.me/ai/ml/">ml</category><category domain="https://matnoble.me/series/ai/">人工智能</category><category domain="https://matnoble.me/tags/%E5%9B%9E%E5%BD%92/">回归</category><category domain="https://matnoble.me/tags/%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D/">梯度下降</category></item><item><title>学习资料免费分享</title><link>https://matnoble.me/life/ishare/mathandlatex/</link><guid isPermaLink="true">https://matnoble.me/life/ishare/mathandlatex/</guid><pubDate>Wed, 26 Aug 2020 00:18:40 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images@master/uPic/DJw267.jpg" alt="">&lt;/p>
&lt;p>近日, 为将旧电脑硬盘变成移动硬盘, 将磁盘内容整理备份到云盘, 以节省空间. 发现一些学习资料可以跟大家分享, 需者自取吧&lt;/p>
&lt;h2 id="资源分类">资源分类&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>考研资源&lt;/td>
&lt;td>考研真题、考研经验&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>高等代数、数学分析&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>安装及入门&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$\LaTeX$ 学习资料&lt;/td>
&lt;td>细节决定成败&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>科技论文规范&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="考研资源">考研资源&lt;/h2>
&lt;p>主要是针对数学系的考研资源&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images@master/uPic/pD2F9e.png" alt="总览">&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images@master/uPic/JSQG1Y.png" alt="高等代数">&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images@master/uPic/NDAhtB.png" alt="数学分析">&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images@master/uPic/jr83Nx.png" alt="部分考研真题">&lt;/p>
&lt;p>公众号内回复: &lt;code>数学系考研资料&lt;/code> 获取下载链接🔗&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images@master/uPic/uXiJsM.jpg" alt="">&lt;/p>
&lt;h2 id="latex-学习资料">$\LaTeX$ 学习资料&lt;/h2>
&lt;p>学习 $\LaTeX$ 三年多, 绝不敢说是精通, 但是写一些简单文档或模板, 还是没有问题的, 以下资料我并没有都看完, 但对我来说, 每一份都值得备份. 感兴趣的可以看看, 不止是入门而已~&lt;/p>
&lt;p>&lt;img src="https://imgkr2.cn-bj.ufileos.com/45fd0e72-cd38-413f-ab06-130dfaa36921.png?UCloudPublicKey=TOKEN_8d8b72be-579a-4e83-bfd0-5f6ce1546f13&amp;amp;Signature=a9qOC9yW77bRit18UpzbgvSuYR0%253D&amp;amp;Expires=1598499891" alt="总览">&lt;/p>
&lt;p>公众号内回复: &lt;code>LaTeX 学习资料分享&lt;/code> 获取下载链接🔗 (建议直接复制粘贴)&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images@master/uPic/uXiJsM.jpg" alt="数系家园">&lt;/p>
&lt;h2 id="声明">声明&lt;/h2>
&lt;p>此次资源分享大部分是对网络上出现过的 &lt;strong>开源免费&lt;/strong> 的资源汇总, 所属权归原作者, 若原作者有异议, 请联系我, 我将无理由删除资源.&lt;/p>
&lt;p>严禁以该资源去某宝, 某鱼等平台获利!&lt;/p></description><category domain="https://matnoble.me/life/">life</category><category domain="https://matnoble.me/life/ishare/">ishare</category><category domain="https://matnoble.me/tags/%E5%9B%9E%E5%BF%86%E8%BF%87%E5%8E%BB/">回忆过去</category></item><item><title>初见 Mac OS</title><link>https://matnoble.me/tech/macos/first-sight/</link><guid isPermaLink="true">https://matnoble.me/tech/macos/first-sight/</guid><pubDate>Sat, 15 Aug 2020 00:20:33 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://cdn.jsdelivr.net/gh/MatNoble/Images@master/uPic/%e6%88%aa%e5%b1%8f2020-08-15%20%e4%b8%8b%e5%8d%887.24.37.png"
title="一旦用过, 就回不去了"
alt="mac os"
width="95%"
>
&lt;span class="caption">◎ 一旦用过, 就回不去了&lt;/span>
&lt;/span>
&lt;p>参照 &lt;a href="https://blog.daliansky.net/">黑果小兵的部落阁&lt;/a> 的 &lt;a href="https://github.com/daliansky/XiaoXinPro-13-hackintosh">黑苹果教程&lt;/a> 把我新买的 &lt;a href="https://matnoble.me/tech/reviews/lenovo-xiaoxin-pro-13/">联想小新 pro 13&lt;/a> 装上了苹果系统 --- Mac OS Catalina 10.15.6&lt;/p>
&lt;p>因为操作失误, 不小心删掉了之前心爱的 Ubuntu 20.04, 更重要的是&lt;strong>没有备份&lt;/strong>😭, 所以以后一定要 &lt;strong>即时备份&lt;/strong> &lt;strong>即时备份&lt;/strong> &lt;strong>即时备份&lt;/strong>&lt;/p>
&lt;p>硬着头皮装了两天, 装了3、4次, 终于使系统稳定一些. 期间, 想要恢复之前的 Ubuntu 备份, 还装了一次 Ubuntu, 对比黑苹果, 装 Ubuntu 简直不要太简单, 可惜的是, 并没有恢复🤷‍♂️&lt;/p>
&lt;p>由于不熟悉 Mac 的触控板操作, 快捷键操作, 导致前两天使用体验特别差:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>不能在任意窗口打开终端窗口;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>点击程序坞程序不能实现最小化, 导致窗口需要频繁移动;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>删除文件无法使用 &lt;code>Delete&lt;/code> 按键;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>不能使用快捷键分割窗口 (之前的 Ubuntu 经过配置后, 可以使用触控板左右滑动快速分割窗口)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>由于 FEniCS 只能通过 Anaconda 安装, 所以不能在 Emacs 内部运行, 跟之前的习惯不符;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Mac 默认 PDF 查看器不能 “实时预览” $\LaTeX{}$ ;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>...&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>当然, 随着使用, 以上问题都得到了解决. 而且, 逐渐感觉到 Mac OS 的 “优雅”:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>与 iphone、ipad 的联动, 包括: 隔空传送, 投屏, 接力等功能;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>最好用的原生触控板操作;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>三指拖移;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>比 Linux 丰富的多的软件仓库, 安装软件方便快捷;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>...&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>目前, 我的黑苹果存在以下问题:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>iMessage, FaceTime 不能激活, 虽然很少用, 但还是想拥有;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>不能升级系统(黑苹果当然不可以了), 问题是小升级也不能成功.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>自从 5 月份, 从原生安卓转换到 iphone, 就慢慢感受到除 Google 公司外, 另一家优秀的科技公司 --- Apple&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://cdn.jsdelivr.net/gh/MatNoble/Images@master/uPic/iZwBcB.jpg"
title="Google vs Apple"
alt="Google vs Apple"
width="95%"
>
&lt;span class="caption">◎ Google vs Apple&lt;/span>
&lt;/span>
&lt;p>收回我之前的错误🙅观点: &lt;del>原生安卓适合「爱折腾」的男生, iphone 更适合「不爱折腾」的女生.&lt;/del>&lt;/p>
&lt;p>之后, 会陆续记录一些 Mac 使用技巧以及好用的软件.&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://cdn.jsdelivr.net/gh/MatNoble/Images@master/uPic/tcgryjlatfmtm26mtypm.jpg"
title="期待 Big Sur"
alt="期待 Big Sur"
width="95%"
>
&lt;span class="caption">◎ 期待 Big Sur&lt;/span>
&lt;/span></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/macos/">macos</category><category domain="https://matnoble.me/tags/mac-os/">Mac os</category></item><item><title>科学上网终极版</title><link>https://matnoble.me/tech/tofreeworld/</link><guid isPermaLink="true">https://matnoble.me/tech/tofreeworld/</guid><pubDate>Tue, 07 Jul 2020 00:21:30 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://cdn.jsdelivr.net/gh/MatNoble/Images@master/uPic/Y4i6g9.jpg"
title="liberalism"
alt="liberalism"
width="95%"
>
&lt;span class="caption">◎ liberalism&lt;/span>
&lt;/span>
&lt;blockquote>
&lt;p>We hold these truths to be self-evident, that all men are created equal, that they are endowed by their Creator with certain unalienable Rights, that among these are Life, Liberty, and the pursuit of Happiness.&lt;/p>
&lt;footer>
&lt;strong>&lt;/strong>
&lt;cite>
&lt;a href="https://en.wikipedia.org/wiki/United_States_Declaration_of_Independence" title="https://en.wikipedia.org/wiki/United_States_Declaration_of_Independence">United States Declaration of Independence&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
&lt;blockquote>
&lt;p>生活在局域网的世界里，一旦窥探过外面的世界，就很难再回去了...&lt;/p>
&lt;footer>
&lt;strong>&lt;/strong>
&lt;/footer>
&lt;/blockquote>
&lt;h2 id="科学上网方法">科学上网方法&lt;/h2>
&lt;p>目前，我知道的有两大类：..商业软件VPN.. 和..机场.. &lt;sup id="fnref:1">&lt;a href="https://matnoble.me/tech/tofreeworld/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;p>商业软件 VPN 诸如著名的蓝灯之类的，价格略高，可支持多平台，稳定。&lt;/p>
&lt;p>机场包括免费分享机场，付费机场订阅和自建机场。&lt;/p>
&lt;ul>
&lt;li>免费分享机场不够稳定，质量也参差不齐，靠运气，时间成本高；&lt;/li>
&lt;li>自建机场，需要购买在海外的主机，价格也不便宜，而且 ip 地址被封后，需要另付费解封；&lt;/li>
&lt;/ul>
&lt;p>目前，我使用的是付费机场，价格可以接受，而且上网也比较稳定。但是，现在付费机场也多种多样，性价比高低不齐，而且害怕机场主“跑路”～&lt;/p>
&lt;h2 id="机场推荐">机场推荐&lt;/h2>
&lt;h3 id="海豚湾">海豚湾&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>主页: &lt;a href="https://hitun.io/">海豚湾&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>95折优惠码:HEROESNEVERDIE (月付/团队包/企业包不可用)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>我的邀请链接: &lt;a href="https://hitun.io//auth/register?affid=132597">邀请码: 132597&lt;/a>&lt;/p>
&lt;img src="https://cdn.jsdelivr.net/gh/MatNoble/Images@master/uPic/er93dD.png" title="" alt="https://cdn.jsdelivr.net/gh/MatNoble/Images@master/uPic/er93dD.png" data-align="center">
&lt;/li>
&lt;/ul>
&lt;h3 id="anylinks">&lt;del>Anylinks&lt;/del>&lt;/h3>
&lt;h3 id="piecloud">&lt;del>PieCloud&lt;/del>&lt;/h3>
&lt;h2 id="科学上网软件">科学上网软件&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Windows&lt;/p>
&lt;p>项目地址: &lt;a href="https://github.com/Fndroid/clash_for_windows_pkg">Clash for Windows&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Linux&lt;/p>
&lt;ul>
&lt;li>
&lt;p>v2rayL
支持 vmess 和 ss 订阅。项目地址：&lt;a href="https://github.com/jiangxufeng/v2rayL">github.com/jiangxufeng/v2rayL&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>electron-ssr&lt;/p>
&lt;p>&lt;a href="https://matnoble.me/tech/ubuntu/ubuntu-ssr/">Ubuntu 上使用 ssr 实现科学上网&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>MaC&lt;/p>
&lt;p>项目地址: &lt;a href="https://github.com/yichengchen/clashX">clashX&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Android&lt;/p>
&lt;ul>
&lt;li>v2ray&lt;/li>
&lt;li>ssr&lt;/li>
&lt;/ul>
&lt;p>谷歌商店或者 GitHub 都可以搜到&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Iphone&lt;/p>
&lt;p>大名鼎鼎的“小火箭”，可惜的是中国区没有该软件，需要自行搜寻美区 id 下载&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;style type="text/css">.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:"Font Awesome 5 Free",FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:'\f071'}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:'\f05a'}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:'\f06a'}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:'\f058'}.notice.tip{background:#e6f9e6}&lt;/style>&lt;div class="notice tip" >
&lt;p class="first notice-title">Tips&lt;/p>&lt;p>以上属于我对翻墙软件的部分了解，如发现有错误，请在评论区告诉我！&lt;/p>
&lt;p>另外，如果您有好用的机场或者稳定的科学上网方式，也欢迎在评论区分享出来！&lt;/p>&lt;/div>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="https://matnoble.me/tech/ubuntu/scientific-internet/">Chrome 浏览器翻墙&lt;/a>只能临时迫不得已使用，既不稳定速度又慢 &lt;a href="https://matnoble.me/tech/tofreeworld/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/">科学上网</category></item><item><title>哨兵循环</title><link>https://matnoble.me/tech/programming/python/sentinel/</link><guid isPermaLink="true">https://matnoble.me/tech/programming/python/sentinel/</guid><pubDate>Mon, 25 May 2020 00:19:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;
&lt;/span>&lt;span class="s1">哨兵循环 =&amp;gt; 线性搜索问题
&lt;/span>&lt;span class="s1">
&lt;/span>&lt;span class="s1">L =&amp;gt; list
&lt;/span>&lt;span class="s1">T =&amp;gt; target
&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">loop1&lt;/span>&lt;span class="p">():&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="bp">True&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">L&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">T&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s1">bingo, the letter is in position &amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">break&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">L&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s1">the search unsuccessfully&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">break&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">loop2&lt;/span>&lt;span class="p">():&lt;/span>
&lt;span class="n">L&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="bp">True&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">L&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">T&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">L&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s1">bingo, the letter is in position &amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s1">the search unsuccessfully&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">break&lt;/span>
&lt;span class="n">i&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="c1">#####################################################################&lt;/span>
&lt;span class="n">L&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">Please Enter a String [matnoble]: &amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="s1">&amp;#39;matnoble&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">T&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">Please Enter a letter [z]: &amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="s1">&amp;#39;z&amp;#39;&lt;/span>
&lt;span class="n">loop1&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">loop2&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/programming/">programming</category><category domain="https://matnoble.me/tags/%E7%BC%96%E7%A8%8B%E4%B9%8B%E9%81%93/">编程之道</category></item><item><title>矩阵的列空间</title><link>https://matnoble.me/math/linear-algebra/mit2020/columnspace/</link><guid isPermaLink="true">https://matnoble.me/math/linear-algebra/mit2020/columnspace/</guid><pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h2 id="前菜">“前菜”&lt;/h2>
&lt;p>将向量 &lt;span>$\alpha = \begin{bmatrix} 1 \ 2 \ 5 \end{bmatrix}^{\mathsf T}$&lt;/span> 扩充&lt;/p>
&lt;div>
$$
\boldsymbol{A} = \bigl[\alpha ,\ 3\alpha \bigr] = \begin{bmatrix} 1 &amp; 3 \\ 2 &amp; 6 \\ 5 &amp; 15 \end{bmatrix}
$$
&lt;/div>
&lt;p>因为列向量呈倍数关系，所以矩阵 $\boldsymbol{A}$ 的列秩为$1$。检查一下，矩阵 $\boldsymbol{A}$ 的三个行向量也有倍数关系，行秩也是$1$&lt;/p>
&lt;p>继续扩充，&lt;/p>
&lt;div>
\begin{equation} \label{eq:1}
\boldsymbol{A} = \bigl[\alpha ,\ 3\alpha,\ 2\alpha,\ 4\alpha \bigr] = \begin{bmatrix} 1 &amp; 3 &amp; 2 &amp; 4 \\ 2 &amp; 6 &amp; 4 &amp; 8 \\ 5 &amp; 15 &amp; 10 &amp; 20 \end{bmatrix}
\end{equation}
&lt;/div>
&lt;p>检查一下，扩充之后依旧成立：行秩 $=$ 列秩 $= 1$&lt;/p>
&lt;p>式(\ref{eq:1})可以写为:&lt;/p>
&lt;div>
\begin{equation}\label{eq:2}
\begin{aligned}
\boldsymbol{A} = \bigl[\alpha ,\ 3\alpha,\ 2\alpha,\ 4\alpha \bigr] &amp;= \alpha\bigl[1,\ 3,\ 2,\ 4 \bigr] \\[3pt]
&amp;= \begin{bmatrix} 1 \\ 2 \\ 5 \end{bmatrix} \bigl[1,\ 3,\ 2,\ 4 \bigr] \\[3pt]
&amp; = \begin{bmatrix} 1 &amp; 3 &amp; 2 &amp; 4 \\ 2 &amp; 6 &amp; 4 &amp; 8 \\ 5 &amp; 15 &amp; 10 &amp; 20 \end{bmatrix}
\end{aligned}
\end{equation}
&lt;/div>
&lt;p>式(\ref{eq:2})可以说明:&lt;/p>
&lt;ul>
&lt;li>只考虑列向量扩充矩阵，行向量存在与列向量的&lt;strong>不变量&lt;/strong> --- 秩&lt;/li>
&lt;li>$\boldsymbol{A}$ 的列向量全是列向量 $\alpha$ 的线性组合；&lt;/li>
&lt;li>$\boldsymbol{A}$ 的行向量全是行向量 $\bigl[1,\ 3,\ 2,\ 4 \bigr]$ 的线性组合；&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="矩阵-boldsymbola-的列空间">矩阵 $\boldsymbol{A}$ 的列空间&lt;/h2>
&lt;div>
$$
\begin{align*}
\text{Column space of}\ \boldsymbol{A} &amp;= C(\boldsymbol{A}) \\ &amp;= \text{all vectors} \ \boldsymbol{A}\vec{x}
\end{align*}
$$
&lt;/div>
&lt;div>
$$
\begin{align*}
\boldsymbol{A}\vec{x} &amp;= \begin{bmatrix} 1 &amp; 4 &amp; 5 \\
3 &amp; 2 &amp; 5 \\
2 &amp; 1 &amp; 3 \end{bmatrix} \begin{bmatrix} x_1 \\ x_2 \\ x_3 \end{bmatrix} \\[3pt]
&amp;= \begin{bmatrix} 1\\ 3 \\ 2 \end{bmatrix}x_1 + \begin{bmatrix} 4\\ 2 \\ 1 \end{bmatrix}x_2 + \begin{bmatrix} 5\\ 5 \\ 3 \end{bmatrix}x_3
\end{align*}
$$
&lt;/div>
&lt;p>其中 $\vec{x}$ 任意取, $\boldsymbol{A}$ 的列空间即: $\boldsymbol{A}$ 的列的所有&lt;strong>线性组合&lt;/strong>&lt;/p>
&lt;p>因为&lt;/p>
&lt;div>
$$
\begin{bmatrix} 1\\ 3 \\ 2 \end{bmatrix} + \begin{bmatrix} 4\\ 2 \\ 1 \end{bmatrix} = \begin{bmatrix} 5\\ 5 \\ 3 \end{bmatrix}
$$
&lt;/div>
&lt;p>所以 $\boldsymbol{A}$ 的列空间表示一个平面(plane)&lt;/p>
&lt;hr>
&lt;h2 id="boldsymbola--boldsymbolcboldsymbolr">$\boldsymbol{A} = \boldsymbol{C}\boldsymbol{R}$&lt;/h2>
&lt;p>矩阵 $\boldsymbol{A}$ 可以写成如下&lt;strong>矩阵分解&lt;/strong>的形式:&lt;/p>
&lt;div>
\begin{equation} \label{eq:3}
\boldsymbol{A} = \begin{bmatrix} 1 &amp; 4 &amp; 5 \\
3 &amp; 2 &amp; 5 \\
2 &amp; 1 &amp; 3 \end{bmatrix} = \begin{bmatrix} 1 &amp; 4 \\
3 &amp; 2 \\
2 &amp; 1 \end{bmatrix} \left[ {\begin{array}{c:c}
\begin{matrix}
1 &amp; 0 \\
0 &amp; 1
\end{matrix}&amp;
\begin{matrix}
1 \\
1
\end{matrix}
\end{array}} \right]
\end{equation}
&lt;/div>
&lt;p>第一个矩阵记为 $\boldsymbol{C}$，它的列向量全部来自矩阵 $\boldsymbol{A}$，并且是列满秩。实际，$\boldsymbol{C}$ 是矩阵 $\boldsymbol{A}$ 的列向量中任意一个&lt;strong>最大线性无关组&lt;/strong>&lt;/p>
&lt;p>第二个矩阵记为 $\boldsymbol{R}$，它包含一个与行数同阶的单位矩阵(有可能是分散的)&lt;/p>
&lt;p>任意矩阵都可以做如上分解，称为 CR 分解。&lt;/p>
&lt;h3 id="行秩-equiv-列秩">行秩 $\equiv$ 列秩&lt;/h3>
&lt;p>分解式 (\ref{eq:3}) 可以说明:&lt;/p>
&lt;ol>
&lt;li>矩阵 $\boldsymbol{C}$ 的列向量是矩阵 $\boldsymbol{A}$ 列空间的(一组)基底，所以列秩$ = r (=2)$&lt;/li>
&lt;li>矩阵 $\boldsymbol{R}$ 的行向量是矩阵 $\boldsymbol{A}$ 行空间的(一组)基底，所以行秩$ = r (=2)$ (因为$\boldsymbol{R}$ 含有单位矩阵)&lt;/li>
&lt;/ol>
&lt;p>所以行秩 $\equiv$ 列秩&lt;/p>
&lt;h3 id="小结">小结&lt;/h3>
&lt;ul>
&lt;li>虽然没有求 CR 分解的具体公式(计算复杂)，但是可以肯定所有矩阵都至少有一个 CR 分解，根据分解式，行秩 $\equiv$ 列秩是很显然的；&lt;/li>
&lt;li>当 $r=1$ 时, 就是“前菜”中呈现的例子。(秩1矩阵 $\boldsymbol{A}^n$ 问题)；&lt;/li>
&lt;li>矩阵 $\boldsymbol{R}$ 是矩阵 $\boldsymbol{A}$ 的行阶梯形矩阵；&lt;/li>
&lt;li>CR 分解没有“实用”价值，不用于求解线性方程组；&lt;/li>
&lt;li>当 $\boldsymbol{A}$ 列满秩时，CR 分解是无意义的。&lt;/li>
&lt;/ul>
&lt;hr />
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>矩阵可以看成是由列向量组成的，矩阵的列空间是矩阵所有列的线性组合。CR 分解中，$\boldsymbol{C}$ 是矩阵列空间的基底，$\boldsymbol{R}$ 是矩阵行空间的基底。&lt;/p></description><category domain="https://matnoble.me/math/">math</category><category domain="https://matnoble.me/math/linear-algebra/">Linear-Algebra</category><category domain="https://matnoble.me/series/mla/">线代拾遗</category><category domain="https://matnoble.me/tags/mit-2020/">MIT 2020</category></item><item><title>MIT 2020 版线性代数 --- 前言</title><link>https://matnoble.me/math/linear-algebra/mit2020/intro/</link><guid isPermaLink="true">https://matnoble.me/math/linear-algebra/mit2020/intro/</guid><pubDate>Sat, 23 May 2020 00:00:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>今年早些时候，Gilbert Strang 教授把经典的 18.06 线性代数 更新了一些内容，准确来说是：重新阐释了其中一些重要内容，是对之前课程的补充。&lt;/p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/YrHlHbtiSM0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;h2 id="1806-线性代数">18.06 线性代数&lt;/h2>
&lt;p>第一版发布于 2002 年，至今有超过 1000 万的浏览量，应该属于最受欢迎的线性代数公开课之一。在 B 站上可以观看&lt;/p>
&lt;div style="position: relative; width: 100%; padding-bottom: 70%; padding-top: 5px; height: 0; overflow: hidden;">
&lt;iframe src="https://matnoble.me//player.bilibili.com/player.html?aid=36568126&amp;cid=64213503&amp;page=1" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> &lt;/iframe>
&lt;/div>
&lt;h2 id="2020-补充内容">2020 补充内容&lt;/h2>
&lt;p>从课程主页上，可以看到本次更新了 6 个视频&lt;/p>
&lt;ul>
&lt;li>A New Way to Start Linear Algebra&lt;/li>
&lt;li>The Column Space of a Matrix&lt;/li>
&lt;li>The Big Picture of Linear Algebra&lt;/li>
&lt;li>Orthogonal Vectors&lt;/li>
&lt;li>Eigenvalues and Eigenvectors&lt;/li>
&lt;li>Singular Values and Singular Vectors&lt;/li>
&lt;/ul>
&lt;p>大致内容如下：&lt;/p>
&lt;p>更加关注矩阵的..列..，$\boldsymbol{A}\vec{x}$表示$\boldsymbol{A}$各列的线性组合。介绍..矩阵的列空间..，强调线性无关列的重要性。&lt;/p>
&lt;p>介绍矩阵的..四个基本空间..可以更全面的从矩阵的角度理解..线性映射..。&lt;/p>
&lt;p>..正交矩阵..是比普通矩阵更“友好”的矩阵。&lt;/p>
&lt;p>..特征值与特征向量..可以帮我们将矩阵尽可能的对角化。&lt;/p>
&lt;p>..奇异值与奇异向量..则展示了普通矩阵最本质的特征。&lt;/p>
&lt;h2 id="小结">小结&lt;/h2>
&lt;p>由于今年情况特殊，大一的小朋友在春季学期学的线性代数要等到返校后才能考，复习期间不妨看看他山之石。另外，时间充裕的考研同学也可以看看最流行的线性代数课程。&lt;/p>
&lt;p>正如教授开设的数据分析、机器学习等课程，熟练掌握线性代数对于时下热门的智能科学也相当重要。&lt;/p>
&lt;p>课程主页：&lt;/p>
&lt;p>&lt;a href="https://ocw.mit.edu/resources/res-18-010-a-2020-vision-of-linear-algebra-spring-2020/">https://ocw.mit.edu/resources/res-18-010-a-2020-vision-of-linear-algebra-spring-2020/&lt;/a>&lt;/p>
&lt;p>看完 2020 版更新的内容，我甚至感到一些欣慰，最近的几次关于线性代数的更新全部属于本次更新的内容🎉&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://matnoble.me/math/linear-algebra/rotationandmirroring/">正交矩阵之旋转与镜射&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://matnoble.me/math/linear-algebra/svd-mathematical-basis-a/">奇异值分解初探&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://matnoble.me/math/linear-algebra/svd-mathematical-basis-a/">奇异值分解再探&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://matnoble.me/math/linear-algebra/matrixleastsquares/">线代视角下的最小二乘法&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://matnoble.me/math/linear-algebra/matrix4basicth/">矩阵的四个基本空间, 不了解下吗?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://matnoble.me/math/linear-algebra/basicspacebase/">矩阵四个基本空间的基底&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/71e2cb41-d715-4f30-a73a-26dc83ac1a9d.svg" alt="">&lt;/p>
&lt;p>上表展示了 MIT 2020 版线性代数更新提纲，之后所有内容都围绕他们展开&lt;/p>
&lt;p>前三行展示了三种&lt;strong>矩阵分解&lt;/strong>。第一个并不常见：&lt;em>对于任意矩阵$\boldsymbol{A}$，都可以分解为 $\boldsymbol{C \cdot R}$，其中矩阵 $\boldsymbol{C}$ 列满秩。&lt;/em>&lt;/p>
&lt;p>后两个是非常常见的矩阵分解，前者实质上是&lt;strong>行变换&lt;/strong>，后者中，$\boldsymbol{Q}$ 表示&lt;strong>正交矩阵&lt;/strong>。&lt;/p>
&lt;p>第二个方框中的三个式子全部与&lt;strong>特征值&lt;/strong>和&lt;strong>特征向量&lt;/strong>有关。$\boldsymbol{S}$ 表示&lt;strong>对称矩阵&lt;/strong>。最后涉及到 --- &lt;strong>奇异值分解&lt;/strong>，它们是非常重要的内容(原文:That's the high point of the theory.)&lt;/p>
&lt;p>以上，除了第一个式子是 Gilbert Strang 教授本次拿出来作为教授线代的出发点，其余内容都可以在完整版 18.06 的课程中找到。&lt;/p>
&lt;hr>
&lt;p>之前看过台湾国立交通大学的线代课程，任课教授提到『线性代数是一门与时俱进的课程』每隔几年，工程中遇到的问题会反馈到教学中，之后在应用到实际工作中。当然，数学作为一门基础学科，不会直接影响实际的生产工作，但是这种影响是..间接..的，是..潜移默化..的。&lt;/p>
&lt;p>正如本次 2020 更新，矩阵分解、特征值、特征向量，尤其是奇异值、奇异向量，对于当今人工智能领域，诸如机器学习，深度学习有很重要的应用。&lt;/p></description><category domain="https://matnoble.me/math/">math</category><category domain="https://matnoble.me/math/linear-algebra/">Linear-Algebra</category><category domain="https://matnoble.me/series/mla/">线代拾遗</category><category domain="https://matnoble.me/tags/mit-2020/">MIT 2020</category></item><item><title>在 LaTeX 中添加图片</title><link>https://matnoble.me/tech/latex/figure/</link><guid isPermaLink="true">https://matnoble.me/tech/latex/figure/</guid><pubDate>Tue, 07 Apr 2020 00:18:32 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/4e7ca500-bdca-42dc-9444-bffa8af84fc5.png" width="95%" />&lt;/p>
&lt;div align="center">&lt;a href="https://matnoble.me/series/latex">◎ 你过来啊 🤞&lt;/a>&lt;/div>
&lt;h2 id="最基础">最基础&lt;/h2>
&lt;p>在 $\LaTeX$ 里添加图片使用 &lt;code>graphicx&lt;/code> 宏包，在导言区导入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\usepackage&lt;/span>&lt;span class="nb">{&lt;/span>graphicx&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后，在需要插入图片的地方，使用如下命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\includegraphics&lt;/span>&lt;span class="na">[选项]&lt;/span>&lt;span class="nb">{&lt;/span>图形文件名&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>其中，图形文件名支持包含路径，常用的选项包括:&lt;/p>
&lt;ul>
&lt;li>width, height $\to$ 指定图形的宽度和高度&lt;sup id="fnref:1">&lt;a href="https://matnoble.me/tech/latex/figure/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/li>
&lt;li>scale $\to$ 缩放因子，如 scale = 0.6&lt;/li>
&lt;li>angle $\to$ 制定旋转角度，逆时针，以&lt;code>度&lt;/code>为单位&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="c">% 插入 MatNoble logo
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\includegraphics&lt;/span>&lt;span class="na">[width = .3\textwidth]&lt;/span>&lt;span class="nb">{&lt;/span>images/logo.pdf&lt;span class="nb">}&lt;/span>
&lt;span class="c">% 居中 logo
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="nb">{&lt;/span> &lt;span class="k">\centering&lt;/span> &lt;span class="k">\includegraphics&lt;/span>&lt;span class="na">[width = .3\textwidth]&lt;/span>&lt;span class="nb">{&lt;/span>images/logo.pdf&lt;span class="nb">}&lt;/span>
&lt;span class="c">% 下方必须有一行空格才能居中
&lt;/span>&lt;span class="c">&lt;/span>
&lt;span class="nb">}&lt;/span>
&lt;span class="c">% 居中 logo 并逆时针旋转 37 度
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="nb">{&lt;/span> &lt;span class="k">\centering&lt;/span> &lt;span class="k">\includegraphics&lt;/span>&lt;span class="na">[width = .3\textwidth,angle=37]&lt;/span>&lt;span class="nb">{&lt;/span>images/logo.pdf&lt;span class="nb">}&lt;/span>
&lt;span class="c">% 下方必须有一行空格才能居中
&lt;/span>&lt;span class="c">&lt;/span>
&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/0e40f4dd-e865-4017-958c-e4404f50214c.png" width="85%" />&lt;/p>
&lt;style type="text/css">.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:"Font Awesome 5 Free",FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:'\f071'}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:'\f05a'}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:'\f06a'}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:'\f058'}.notice.tip{background:#e6f9e6}&lt;/style>&lt;div class="notice tip" >
&lt;p class="first notice-title">Tips&lt;/p>&lt;p>&lt;code>graphicx&lt;/code> 宏包支持多种常见的图片格式，但推荐使用 &lt;code>.eps&lt;/code> 和 &lt;code>.pdf&lt;/code> 格式，以得到更清晰的显示效果。&lt;/p>&lt;/div>
&lt;h2 id="自动搜寻路径">自动搜寻路径&lt;/h2>
&lt;p>以上 &lt;code>图形文件名&lt;/code> 处，加上了 &lt;code>.tex&lt;/code> 文件目录下的用来存储图片文件夹的目录 &lt;code>images&lt;/code>，为了更方便使用，我们可以不加目录，甚至是图片后缀名。只需在导言区加入以下代码&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex"> &lt;span class="c">% 如果图片没有指定后缀, 依次按下列顺序搜索
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\DeclareGraphicsExtensions&lt;/span>&lt;span class="nb">{&lt;/span>.eps,.pdf,.jpg,.png&lt;span class="nb">}&lt;/span>
&lt;span class="c">% 设置图表搜索路径, 可以给图表文件夹取如下名字
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\graphicspath&lt;/span>&lt;span class="nb">{{&lt;/span>figures/&lt;span class="nb">}{&lt;/span>figure/&lt;span class="nb">}{&lt;/span>pictures/&lt;span class="nb">}&lt;/span>
&lt;span class="nb">{&lt;/span>picture/&lt;span class="nb">}{&lt;/span>pic/&lt;span class="nb">}{&lt;/span>pics/&lt;span class="nb">}{&lt;/span>image/&lt;span class="nb">}{&lt;/span>images/&lt;span class="nb">}}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>之后，就可以省去目录和后缀名&lt;sup id="fnref:2">&lt;a href="https://matnoble.me/tech/latex/figure/#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\includegraphics&lt;/span>&lt;span class="na">[width = .3\textwidth]&lt;/span>&lt;span class="nb">{&lt;/span>logo&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="浮动图环境">浮动图环境&lt;/h2>
&lt;p>如果想为图片自动添加编号，则需要使用..浮动图环境..&lt;sup id="fnref:3">&lt;a href="https://matnoble.me/tech/latex/figure/#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>。&lt;strong>浮动&lt;/strong>的意义在于：自动调整图表位置, 避免出现大片的空白&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>figure&lt;span class="nb">}&lt;/span>[位置]
··· ···
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>figure&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>位置&lt;/strong> 选项的取值: h $\to$ here, t $\to$ top, b $\to$ bottom, p $\to$ page&lt;/p>
&lt;p>推荐顺序：h $\to$ t $\to$ b $\to$ p&lt;/p>
&lt;p>一般情况，还要求图片居中，则可以在环境中首先加上 &lt;code>\centering&lt;/code>&lt;/p>
&lt;pre>&lt;code class="language-te" data-lang="te">\begin{figure}[htbp]
\centering
··· ···
\end{figure}
&lt;/code>&lt;/pre>&lt;p>接着填入开始说的 &lt;code>\includegraphics[选项]{图形文件名}&lt;/code> 命令。添加图片名称使用 &lt;code>\caption&lt;/code> 命令。最后，使用 &lt;code>\label&lt;/code> 标签及 &lt;code>\ref&lt;/code> 命令实现..交叉引用..&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>figure&lt;span class="nb">}&lt;/span>[htbp]
&lt;span class="k">\centering&lt;/span>
&lt;span class="k">\includegraphics&lt;/span>&lt;span class="na">[width = .3\textwidth]&lt;/span>&lt;span class="nb">{&lt;/span>logo&lt;span class="nb">}&lt;/span>
&lt;span class="k">\caption&lt;/span>&lt;span class="nb">{&lt;/span>&lt;span class="k">\em&lt;/span> logo&lt;span class="nb">}&lt;/span>
&lt;span class="k">\label&lt;/span>&lt;span class="nb">{&lt;/span>fig:logo&lt;span class="nb">}&lt;/span>
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>figure&lt;span class="nb">}&lt;/span>
figure &lt;span class="k">\ref&lt;/span>&lt;span class="nb">{&lt;/span>fig:logo&lt;span class="nb">}&lt;/span> is my logo
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/9255d2bb-ca05-4726-a390-77a107dc3e94.png" width="85%" />&lt;/p>
&lt;h2 id="子图">子图&lt;/h2>
&lt;p>在文章中通常还需要添加..子图..，此时，可以使用 &lt;code>subfigure&lt;/code> 环境来实现，首先在导言区加载 &lt;code>\usepackage{subcaption}&lt;/code>&lt;/p>
&lt;h3 id="子图并排">子图并排&lt;/h3>
&lt;p>两张图片并排是最常用的&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>figure&lt;span class="nb">}&lt;/span>[htbp]
&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>subfigure&lt;span class="nb">}{&lt;/span>.5&lt;span class="k">\textwidth&lt;/span>&lt;span class="nb">}&lt;/span>
&lt;span class="k">\centering&lt;/span>
&lt;span class="c">% 子图一
&lt;/span>&lt;span class="c">&lt;/span> &lt;span class="k">\includegraphics&lt;/span>&lt;span class="na">[width=.8\linewidth]&lt;/span>&lt;span class="nb">{&lt;/span>logo.png&lt;span class="nb">}&lt;/span>
&lt;span class="k">\caption&lt;/span>&lt;span class="nb">{&lt;/span>子图一&lt;span class="nb">}&lt;/span>
&lt;span class="k">\label&lt;/span>&lt;span class="nb">{&lt;/span>fig:sub-first2&lt;span class="nb">}&lt;/span>
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>subfigure&lt;span class="nb">}&lt;/span>
&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>subfigure&lt;span class="nb">}{&lt;/span>.5&lt;span class="k">\textwidth&lt;/span>&lt;span class="nb">}&lt;/span>
&lt;span class="k">\centering&lt;/span>
&lt;span class="c">% 子图二
&lt;/span>&lt;span class="c">&lt;/span> &lt;span class="k">\includegraphics&lt;/span>&lt;span class="na">[width=.8\linewidth]&lt;/span>&lt;span class="nb">{&lt;/span>logo.png&lt;span class="nb">}&lt;/span>
&lt;span class="k">\caption&lt;/span>&lt;span class="nb">{&lt;/span>子图二&lt;span class="nb">}&lt;/span>
&lt;span class="k">\label&lt;/span>&lt;span class="nb">{&lt;/span>fig:sub-second2&lt;span class="nb">}&lt;/span>
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>subfigure&lt;span class="nb">}&lt;/span>
&lt;span class="k">\caption&lt;/span>&lt;span class="nb">{&lt;/span>并列子图&lt;span class="nb">}&lt;/span>
&lt;span class="k">\label&lt;/span>&lt;span class="nb">{&lt;/span>fig:fig2&lt;span class="nb">}&lt;/span>
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>figure&lt;span class="nb">}&lt;/span>
&lt;span class="c">% 交叉引用
&lt;/span>&lt;span class="c">&lt;/span>图(&lt;span class="k">\ref&lt;/span>&lt;span class="nb">{&lt;/span>fig:fig2&lt;span class="nb">}&lt;/span>)包括子图(&lt;span class="k">\ref&lt;/span>&lt;span class="nb">{&lt;/span>fig:sub-first2&lt;span class="nb">}&lt;/span>)和子图(&lt;span class="k">\ref&lt;/span>&lt;span class="nb">{&lt;/span>fig:sub-second2&lt;span class="nb">}&lt;/span>)
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/dc3fa528-070e-4bad-a14f-1b1f3e17257b.png" width="85%" />&lt;/p>
&lt;h3 id="多行多列子图">多行多列子图&lt;/h3>
&lt;p>实现多行子图也不难，需要注意&lt;strong>在换行处添加一行空格&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>figure&lt;span class="nb">}&lt;/span>[htbp]
&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>subfigure&lt;span class="nb">}{&lt;/span>.3&lt;span class="k">\textwidth&lt;/span>&lt;span class="nb">}&lt;/span>
&lt;span class="k">\centering&lt;/span>
&lt;span class="c">% 子图一
&lt;/span>&lt;span class="c">&lt;/span> &lt;span class="k">\includegraphics&lt;/span>&lt;span class="na">[width=.8\linewidth]&lt;/span>&lt;span class="nb">{&lt;/span>logo.png&lt;span class="nb">}&lt;/span>
&lt;span class="k">\caption&lt;/span>&lt;span class="nb">{&lt;/span>子图一&lt;span class="nb">}&lt;/span>
&lt;span class="k">\label&lt;/span>&lt;span class="nb">{&lt;/span>fig:sub-first&lt;span class="nb">}&lt;/span>
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>subfigure&lt;span class="nb">}&lt;/span>
&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>subfigure&lt;span class="nb">}{&lt;/span>.3&lt;span class="k">\textwidth&lt;/span>&lt;span class="nb">}&lt;/span>
&lt;span class="k">\centering&lt;/span>
&lt;span class="c">% 子图二
&lt;/span>&lt;span class="c">&lt;/span> &lt;span class="k">\includegraphics&lt;/span>&lt;span class="na">[width=.8\linewidth]&lt;/span>&lt;span class="nb">{&lt;/span>logo.png&lt;span class="nb">}&lt;/span>
&lt;span class="k">\caption&lt;/span>&lt;span class="nb">{&lt;/span>子图二&lt;span class="nb">}&lt;/span>
&lt;span class="k">\label&lt;/span>&lt;span class="nb">{&lt;/span>fig:sub-second&lt;span class="nb">}&lt;/span>
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>subfigure&lt;span class="nb">}&lt;/span>
&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>subfigure&lt;span class="nb">}{&lt;/span>.3&lt;span class="k">\textwidth&lt;/span>&lt;span class="nb">}&lt;/span>
&lt;span class="k">\centering&lt;/span>
&lt;span class="c">% 子图三
&lt;/span>&lt;span class="c">&lt;/span> &lt;span class="k">\includegraphics&lt;/span>&lt;span class="na">[width=.8\linewidth]&lt;/span>&lt;span class="nb">{&lt;/span>logo.png&lt;span class="nb">}&lt;/span>
&lt;span class="k">\caption&lt;/span>&lt;span class="nb">{&lt;/span>子图三&lt;span class="nb">}&lt;/span>
&lt;span class="k">\label&lt;/span>&lt;span class="nb">{&lt;/span>fig:sub-third&lt;span class="nb">}&lt;/span>
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>subfigure&lt;span class="nb">}&lt;/span>
&lt;span class="c">% 下方需空一行
&lt;/span>&lt;span class="c">&lt;/span>
&lt;span class="c">% 上方需空一行
&lt;/span>&lt;span class="c">&lt;/span> &lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>subfigure&lt;span class="nb">}{&lt;/span>.3&lt;span class="k">\textwidth&lt;/span>&lt;span class="nb">}&lt;/span>
&lt;span class="k">\centering&lt;/span>
&lt;span class="c">% 子图四
&lt;/span>&lt;span class="c">&lt;/span> &lt;span class="k">\includegraphics&lt;/span>&lt;span class="na">[width=.8\linewidth]&lt;/span>&lt;span class="nb">{&lt;/span>logo.png&lt;span class="nb">}&lt;/span>
&lt;span class="k">\caption&lt;/span>&lt;span class="nb">{&lt;/span>子图四&lt;span class="nb">}&lt;/span>
&lt;span class="k">\label&lt;/span>&lt;span class="nb">{&lt;/span>fig:sub-fourth&lt;span class="nb">}&lt;/span>
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>subfigure&lt;span class="nb">}&lt;/span>
&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>subfigure&lt;span class="nb">}{&lt;/span>.3&lt;span class="k">\textwidth&lt;/span>&lt;span class="nb">}&lt;/span>
&lt;span class="k">\centering&lt;/span>
&lt;span class="c">% 子图五
&lt;/span>&lt;span class="c">&lt;/span> &lt;span class="k">\includegraphics&lt;/span>&lt;span class="na">[width=.8\linewidth]&lt;/span>&lt;span class="nb">{&lt;/span>logo.png&lt;span class="nb">}&lt;/span>
&lt;span class="k">\caption&lt;/span>&lt;span class="nb">{&lt;/span>子图五&lt;span class="nb">}&lt;/span>
&lt;span class="k">\label&lt;/span>&lt;span class="nb">{&lt;/span>fig:sub-fifth&lt;span class="nb">}&lt;/span>
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>subfigure&lt;span class="nb">}&lt;/span>
&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>subfigure&lt;span class="nb">}{&lt;/span>.3&lt;span class="k">\textwidth&lt;/span>&lt;span class="nb">}&lt;/span>
&lt;span class="k">\centering&lt;/span>
&lt;span class="c">% 子图六
&lt;/span>&lt;span class="c">&lt;/span> &lt;span class="k">\includegraphics&lt;/span>&lt;span class="na">[width=.8\linewidth]&lt;/span>&lt;span class="nb">{&lt;/span>logo.png&lt;span class="nb">}&lt;/span>
&lt;span class="k">\caption&lt;/span>&lt;span class="nb">{&lt;/span>子图六&lt;span class="nb">}&lt;/span>
&lt;span class="k">\label&lt;/span>&lt;span class="nb">{&lt;/span>fig:sub-sixth&lt;span class="nb">}&lt;/span>
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>subfigure&lt;span class="nb">}&lt;/span>
&lt;span class="k">\caption&lt;/span>&lt;span class="nb">{&lt;/span>多行多列子图&lt;span class="nb">}&lt;/span>
&lt;span class="k">\label&lt;/span>&lt;span class="nb">{&lt;/span>fig:fig&lt;span class="nb">}&lt;/span>
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>figure&lt;span class="nb">}&lt;/span>
&lt;span class="c">% 交叉引用
&lt;/span>&lt;span class="c">&lt;/span>图(&lt;span class="k">\ref&lt;/span>&lt;span class="nb">{&lt;/span>fig:fig&lt;span class="nb">}&lt;/span>)包括子图(&lt;span class="k">\ref&lt;/span>&lt;span class="nb">{&lt;/span>fig:sub-first&lt;span class="nb">}&lt;/span>)、图(&lt;span class="k">\ref&lt;/span>&lt;span class="nb">{&lt;/span>fig:sub-second&lt;span class="nb">}&lt;/span>)、图 (&lt;span class="k">\ref&lt;/span>&lt;span class="nb">{&lt;/span>fig:sub-third&lt;span class="nb">}&lt;/span>)、图(&lt;span class="k">\ref&lt;/span>&lt;span class="nb">{&lt;/span>fig:sub-fourth&lt;span class="nb">}&lt;/span>)、图 (&lt;span class="k">\ref&lt;/span>&lt;span class="nb">{&lt;/span>fig:sub-fifth&lt;span class="nb">}&lt;/span>)和图(&lt;span class="k">\ref&lt;/span>&lt;span class="nb">{&lt;/span>fig:sub-sixth&lt;span class="nb">}&lt;/span>)
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/bb4971a5-0097-4425-8080-e33a28c4a39d.png" width="85%" />&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>只保留其中一个参数，另一个则会等比例放大或缩小 &lt;a href="https://matnoble.me/tech/latex/figure/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>仔细观察下代码就可以发现，诸如&lt;code>{figures/}{figure/}{pictures/}{picture/}{pic/}{pics/}{image/}{images/}&lt;/code> 这些目录都会被支持 &lt;a href="https://matnoble.me/tech/latex/figure/#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>对应的还有浮动..表..环境 &lt;a href="https://matnoble.me/tech/latex/figure/#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/latex/">latex</category><category domain="https://matnoble.me/series/latex/">LaTeX 排版「冷」知识</category><category domain="https://matnoble.me/tags/">标签云</category></item><item><title>Ubuntu 安装 Zsh ，配置最强终端</title><link>https://matnoble.me/tech/ubuntu/install-zsh/</link><guid isPermaLink="true">https://matnoble.me/tech/ubuntu/install-zsh/</guid><pubDate>Mon, 30 Mar 2020 00:12:58 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>
&lt;blockquote>
&lt;p>Z shell（Zsh）是一款可用作交互式登录的shell及脚本编写的命令解释器。Zsh对Bourne shell做出了大量改进，同时加入了Bash、ksh及tcsh的某些功能。&lt;/p>
&lt;footer>
&lt;strong>&lt;/strong>
&lt;cite>
&lt;a href="https://zh.wikipedia.org/wiki/Z_shell" title="https://zh.wikipedia.org/wiki/Z_shell">zh.wikipedia.org/wiki/Z_shell&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
&lt;h2 id="安装-zsh">安装 Zsh&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># 安装&lt;/span>
sudo apt install zsh
&lt;span class="c1"># 将 zsh 设置为默认 shell&lt;/span>
chsh -s /bin/zsh
&lt;span class="c1"># 检查&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$SHELL&lt;/span>
&lt;span class="c1"># 返回 /usr/bin/zsh 即表示成功；若没成功，重启试试看&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="安装-oh-my-zsh">安装 Oh My Zsh&lt;/h2>
&lt;p>
&lt;blockquote>
&lt;p>&lt;p>Oh My Zsh is an open source, community-driven framework for managing your zsh configuration.&lt;/p>
&lt;p>Oh My Zsh will not make you a 10x developer...but you may feel like one.&lt;/p>
&lt;/p>
&lt;footer>
&lt;strong>&lt;/strong>
&lt;cite>
&lt;a href="https://github.com/ohmyzsh/ohmyzsh#readme" title="https://github.com/ohmyzsh/ohmyzsh#readme">Oh My Zsh&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
Oh My Zsh 是基于 Zsh 命令行的一个扩展工具集，提供了丰富的扩展功能，如：主题配置，插件机制，内置的便捷操作等，，可以给我们一种全新的命令行使用体验。&lt;sup id="fnref:1">&lt;a href="https://matnoble.me/tech/ubuntu/install-zsh/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">% 通过 curl
sh -c &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
% 或者 通过 wget
sh -c &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="配置">配置&lt;/h2>
&lt;h3 id="更换主题">更换主题&lt;/h3>
&lt;p>在 &lt;a href="https://github.com/ohmyzsh/ohmyzsh/wiki/Themes">这里&lt;/a> 选择喜欢的主题，将名称填入根目录 &lt;code>.zshrc&lt;/code> 中对应位置&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="nv">ZSH_THEME&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;theme name&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/30/ec33f690e38708ce841c001fc59c4878.png"
title="ys"
alt="ys"
width="95%"
>
&lt;span class="caption">◎ ys&lt;/span>
&lt;/span>
&lt;h3 id="配置插件">配置插件&lt;/h3>
&lt;p>在这里，我介绍我使用的 3 个插件，安装都很简单，打开 Terminal 依次输入&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/8131805f-4f17-45da-9a04-0897dcc9ece7.gif" width="95%" />&lt;/p>
&lt;ol>
&lt;li>自动补全
&lt;mark>zsh-autosuggestions&lt;/mark>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git clone https://github.com/zsh-users/zsh-autosuggestions &lt;span class="si">${&lt;/span>&lt;span class="nv">ZSH_CUSTOM&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="p">~/.oh-my-zsh/custom&lt;/span>&lt;span class="si">}&lt;/span>/plugins/zsh-autosuggestions
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>代码高亮
&lt;mark>zsh-syntax-highlighting&lt;/mark>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git clone https://github.com/zsh-users/zsh-syntax-highlighting.git &lt;span class="si">${&lt;/span>&lt;span class="nv">ZSH_CUSTOM&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="p">~/.oh-my-zsh/custom&lt;/span>&lt;span class="si">}&lt;/span>/plugins/zsh-syntax-highlighting
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>快速打开 GitHub 仓库
&lt;mark>git-open&lt;/mark>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git clone https://github.com/paulirish/git-open.git &lt;span class="nv">$ZSH_CUSTOM&lt;/span>/plugins/git-open&lt;span class="sb">`&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>最后需要配置 &lt;code>plugins&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="nv">plugins&lt;/span>&lt;span class="o">=(&lt;/span>
git
zsh-autosuggestions
zsh-syntax-highlighting
git-open
&lt;span class="o">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="alias-命令别名">alias 命令别名&lt;/h3>
&lt;p>同样在 &lt;code>.zshrc&lt;/code> 中，可使用下方类似语法设置命令别名，实现快速输入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># alias&lt;/span>
&lt;span class="nb">alias&lt;/span> &lt;span class="nv">cls&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;clear&amp;#39;&lt;/span>
&lt;span class="nb">alias&lt;/span> &lt;span class="nv">ga&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git add&amp;#39;&lt;/span>
&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gc&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git commit -m&amp;#39;&lt;/span>
&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gp&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git push&amp;#39;&lt;/span>
&lt;span class="nb">alias&lt;/span> &lt;span class="nv">go&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git-open&amp;#39;&lt;/span>
&lt;span class="nb">alias&lt;/span> &lt;span class="nv">update&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;sudo apt update&amp;#39;&lt;/span>
&lt;span class="nb">alias&lt;/span> &lt;span class="nv">upgrade&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;sudo apt upgrade&amp;#39;&lt;/span>
&lt;span class="nb">alias&lt;/span> &lt;span class="nv">install&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;sudo apt install&amp;#39;&lt;/span>
&lt;span class="nb">alias&lt;/span> &lt;span class="nv">aremove&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;sudo apt autoremove&amp;#39;&lt;/span>
&lt;span class="nb">alias&lt;/span> &lt;span class="nv">remove&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;sudo apt remove&amp;#39;&lt;/span>
&lt;span class="nb">alias&lt;/span> &lt;span class="nv">aclean&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;sudo apt autoclean&amp;#39;&lt;/span>
&lt;span class="nb">alias&lt;/span> &lt;span class="nv">clean&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;sudo apt clean&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/9d09d6d9-7352-4099-8027-5313d41b085a.gif" width="95%" />&lt;/p>
&lt;p>最后，&lt;code>source ~/.zshrc&lt;/code> 使配置生效&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="https://segmentfault.com/a/1190000015283092">https://segmentfault.com/a/1190000015283092&lt;/a> &lt;a href="https://matnoble.me/tech/ubuntu/install-zsh/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/ubuntu/">Ubuntu</category><category domain="https://matnoble.me/tags/ubuntu-%E8%A3%85%E6%9C%BA%E4%B8%8E%E4%BC%98%E5%8C%96/">Ubuntu 装机与优化</category></item><item><title>联想小新 Pro-13 2020 是地表最强轻薄本?</title><link>https://matnoble.me/tech/reviews/lenovo-xiaoxin-pro-13/</link><guid isPermaLink="true">https://matnoble.me/tech/reviews/lenovo-xiaoxin-pro-13/</guid><pubDate>Sat, 28 Mar 2020 00:00:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h2 id="引言">引言&lt;/h2>
&lt;p>前些日子，联想官方宣布小新 Pro 13 2020 将于 3 月 18 日 00：00 开启预售， 3 月 24 日 00：00 正式开售&lt;sup id="fnref:1">&lt;a href="https://matnoble.me/tech/reviews/lenovo-xiaoxin-pro-13/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>。我在 23 日晚上决定“剁手”，在联想乐呗店以 5899 的首发价买了 i5 的版本。&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/29/6c54269b740b75314df133ea4e4ffd35.jpg"
title="小新 Pro 13 2020"
alt="小新 Pro 13 2020"
width="95%"
>
&lt;span class="caption">◎ 小新 Pro 13 2020&lt;/span>
&lt;/span>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/29/cb5f4bd3aba0086785a812e30d0373f1.jpg"
title="真香配置"
alt="真香配置"
width="95%"
>
&lt;span class="caption">◎ 真香配置&lt;/span>
&lt;/span>
&lt;p>相比 2019 版，2020 版更新了 NVIDIA 显卡，MX250 $\to$ MX350，据说，游戏性能提高 20%，续航缩短 30-60min&lt;/p>
&lt;p>开箱和评测视频就不做了，网上有很多雷同的视频。本文，我以一名消费者的角度来说一说，它配得上『地表最强轻薄本』的赞誉吗？&lt;/p>
&lt;h2 id="我的需求">我的需求&lt;/h2>
&lt;ul>
&lt;li>价格&lt;/li>
&lt;/ul>
&lt;p>虽然研究生有了一些收入，但毕竟还是学生党，买“大件”还是有些手紧。所以，最高不超过 7000 元。&lt;/p>
&lt;ul>
&lt;li>性能&lt;/li>
&lt;/ul>
&lt;p>因为我是数学系的学生，有经常跑一些计算相关的程序。所以，对于 CPU 和内存有一定要求，而对于显卡没有很高的要求。&lt;/p>
&lt;ul>
&lt;li>便携&lt;/li>
&lt;/ul>
&lt;p>我的第一个笔记本是联想 Y430P，属于业余的游戏本，又大又重，非常不便携。由于学院没有提供课题室，上自习总要背着去图书馆，很累。所以，一定要买一个尽可能便携的笔记本。&lt;/p>
&lt;ul>
&lt;li>颜值&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>好看的人总喜欢用好看的东西 (请原谅我的狂妄的自恋 😜)&lt;/p>
&lt;/blockquote>
&lt;p>一方面，笔记本的整体设计要过得去，要有『现代感』&lt;sup id="fnref:2">&lt;a href="https://matnoble.me/tech/reviews/lenovo-xiaoxin-pro-13/#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>。另一方面，『屏幕素质』也很重要，毕竟要一直盯着看的东西。&lt;/p>
&lt;hr />
&lt;h2 id="优缺点">优缺点&lt;/h2>
&lt;p>作为老牌 PC 制造商制衡华为、小米等新兴厂商的产品，激进的小新 Pro 13 的优缺点都很明显&lt;/p>
&lt;h3 id="优点">优点&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>性能释放领跑&lt;/p>
&lt;ul>
&lt;li>CPU: 酷睿 10 代处理器 i5-10210U / i7-10710U&lt;/li>
&lt;li>GPU: NVIDIA MX350 显卡&lt;/li>
&lt;/ul>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/55fef289-04a0-4a00-a14b-569735d42001.webp"
title="据说，MX350 实际表现更好"
alt="据说，MX350 实际表现更好"
width="95%"
>
&lt;span class="caption">◎ 据说，MX350 实际表现更好&lt;/span>
&lt;/span>
&lt;p>流行的硬件配置 + 双风扇双热管散热使得机器能够长时间高性能工作，应该是同样配置，性能释放最好的机器&lt;sup id="fnref:3">&lt;a href="https://matnoble.me/tech/reviews/lenovo-xiaoxin-pro-13/#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>十分便携
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/7207587d-0e97-4a60-b76e-c5d27515247a.webp"
title="相当薄了"
alt="相当薄了"
width="95%"
>
&lt;span class="caption">◎ 相当薄了&lt;/span>
&lt;/span>
重量 1.29 千克。另外，很多人吐槽官方自带的充电器: 使用更现代的 Type-C 口充电，但还是使用古老而笨重的两段式&lt;sup id="fnref:4">&lt;a href="https://matnoble.me/tech/reviews/lenovo-xiaoxin-pro-13/#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>颜值颇高&lt;/p>
&lt;ul>
&lt;li>2.5K 高清分辨率(2560 x 1600)屏幕，像素密度达到高达 226 ppi，显示效果十分细腻&lt;/li>
&lt;li>100% sRGB 色域覆盖，DC 调光，最高 300 nit 亮度&lt;/li>
&lt;li>13.3 英寸的 16:10 屏幕(黄金分割比)，屏占比为 90%，观感很不错&lt;br>
也许是窄边框的缘故，13 存的屏幕并没有感官上的小&lt;/li>
&lt;li>外观设计虽无特点，但符合现代审美
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/a8cf7ede-021b-4fbd-935d-184bcf149440.webp"
title="这配色咋看着这么熟悉呢 😂"
alt="这配色咋看着这么熟悉呢 😂"
width="80%"
>
&lt;span class="caption">◎ 这配色咋看着这么熟悉呢 😂&lt;/span>
&lt;/span>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>其他&lt;/p>
&lt;ul>
&lt;li>Fn + Q 三级调节 CPU 性能，野兽模式很狂野&lt;/li>
&lt;li>支持 Windows Hello 人脸解锁 🔓，安全快速有逼格&lt;/li>
&lt;li>65 W 大电池，更长续航，而且支持快充&lt;sup id="fnref:5">&lt;a href="https://matnoble.me/tech/reviews/lenovo-xiaoxin-pro-13/#fn:5" class="footnote-ref" role="doc-noteref">5&lt;/a>&lt;/sup>&lt;/li>
&lt;li>支持 &lt;a href="https://www.ithome.com/0/418/065.htm">wifi6&lt;/a>，上网更快&lt;/li>
&lt;li>Windows 系统自带杜比音效，对耳朵友好。导致我如果要长时间看视频，一般会选择 Windows 系统&lt;/li>
&lt;li>全功能 Type-C，支持外接显示屏&lt;/li>
&lt;li>触控板足够大，且足够好用，大部分时间可以舍弃鼠标&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>最后，说下价格。首发价 5899 元，应该是同等价位，配置最高，体验最好；同配置，价格最低的轻薄本。短时间内，应该不会再有 5899 这个价了。&lt;/p>
&lt;h3 id="缺点">缺点&lt;/h3>
&lt;ul>
&lt;li>不算优秀的品控
&lt;ul>
&lt;li>屏幕问题&lt;br>
看到有的网友，屏幕出现白色亮点。我这台机器，在开机黑屏幕下，摄像头处有轻微漏光。&lt;/li>
&lt;li>屏幕四周边框没有作磨光处理，拐角处有明显的“割”手感&lt;/li>
&lt;li>Type-C 口很紧，每次充电都很小心
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/3e34c993-698c-4f08-b066-b3903b9ce13a.webp"
title="小心翼翼怕整坏了"
alt="小心翼翼怕整坏了"
width="55%"
>
&lt;span class="caption">◎ 小心翼翼怕整坏了&lt;/span>
&lt;/span>
&lt;/li>
&lt;li>触控板有缝隙
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/7fef813d-fda8-4451-8630-083d7aaa51f7.webp"
title="触控板缝隙"
alt="触控板缝隙"
width="55%"
>
&lt;span class="caption">◎ 触控板缝隙&lt;/span>
&lt;/span>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>键盘键程超级短&lt;br>
也许是向大容量电池、双风扇的妥协，导致键程极短。比我之前用的“巧克力”键盘和 Surface Go 键盘都要差很多。
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/29e217c8-f516-400d-8f2f-7f838fc95191.webp"
title="超级难用的键盘"
alt="超级难用的键盘"
width="95%"
>
&lt;span class="caption">◎ 超级难用的键盘&lt;/span>
&lt;/span>
&lt;/li>
&lt;li>野兽模式的代价&lt;br>
开启高性能模式后，小小身材里的双风扇也像脱疆的野马，开启的频率提高，而且声音真的很大(晚上测试的，也许声音并没有那么大)&lt;/li>
&lt;li>背盖并不能严丝合缝
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/f3b7cfa7-d7ca-46a8-9032-540cac0ed731.gif"
title="不知道算不算小毛病"
alt="不知道算不算小毛病"
width="60%"
>
&lt;span class="caption">◎ 不知道算不算小毛病&lt;/span>
&lt;/span>
&lt;/li>
&lt;li>摄像头及麦克风&lt;br>
虽然支持 Windows Hello 人脸识别，但摄像头表现实在太差，视频电话，马赛克严重，麦克风收音效果也处于不合格的范围。&lt;sup id="fnref:6">&lt;a href="https://matnoble.me/tech/reviews/lenovo-xiaoxin-pro-13/#fn:6" class="footnote-ref" role="doc-noteref">6&lt;/a>&lt;/sup>&lt;/li>
&lt;li>电源接口处偶尔发出电流的滋滋声，当外界环境安静时，会有些影响～&lt;/li>
&lt;li>关于快充问题&lt;br>
当想使用快充时，却诚实地显示：快充会降低电池寿命。虽然是实话，但总感觉怪怪的 😩，所以目前我还没有使用过这个『高科技』&lt;/li>
&lt;/ul>
&lt;h3 id="小结">小结&lt;/h3>
&lt;p>小新 Pro 13 属于轻薄本里的激进派，性能发挥、续航以及屏幕表现在所有参考因素中拥有最高的优先级。由于价格的限制，不得不在外观设计、键盘，摄像头等其他方面妥协。&lt;/p>
&lt;hr />
&lt;h2 id="ubuntu-双系统">Ubuntu 双系统&lt;/h2>
&lt;p>实际上，我现在很少使用 Windows 系统。目前，本机的 Windows 上只安装了 QQ 和微信，后续有可能装 Adobe 系的素材剪辑软件&lt;sup id="fnref:7">&lt;a href="https://matnoble.me/tech/reviews/lenovo-xiaoxin-pro-13/#fn:7" class="footnote-ref" role="doc-noteref">7&lt;/a>&lt;/sup>&lt;/p>
&lt;p>目前，小新 Pro 13 装 Ubuntu，能够流畅运行，没有出现任何问题。&lt;/p>
&lt;p>其实，安装 Ubuntu 系统十分简单，只有下载好镜像，10 分钟左右就可以安装好。下面是我花了一天的时间，优化后的 Ubuntu 20.04，至于具体的优化过程，我会慢慢地以文字的形式记录下来&lt;/p>
&lt;ul>
&lt;li>B 站&lt;/li>
&lt;/ul>
&lt;div style="position: relative; width: 100%; padding-bottom: 70%; padding-top: 5px; height: 0; overflow: hidden;">
&lt;iframe src="https://matnoble.me//player.bilibili.com/player.html?aid=967526189&amp;cid=170984821&amp;page=1" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> &lt;/iframe>
&lt;/div>
&lt;ul>
&lt;li>油管&lt;/li>
&lt;/ul>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/DhOJcro_jZI" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;hr>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="https://item.lenovo.com.cn/product/1007230.html">https://item.lenovo.com.cn/product/1007230.html&lt;/a> &lt;a href="https://matnoble.me/tech/reviews/lenovo-xiaoxin-pro-13/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>想想我之前那个电脑的设计，就无语凝咽 &lt;a href="https://matnoble.me/tech/reviews/lenovo-xiaoxin-pro-13/#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>中正评测里所长说，比标压 i9 性能还要好些 &lt;a href="https://matnoble.me/tech/reviews/lenovo-xiaoxin-pro-13/#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4" role="doc-endnote">
&lt;p>之前看有的同学说是为了防触电，我没有证实。但我平常在家或者宿舍都使用官方带的充电器，外出带着我之前为 Surface Go 买的 65W 的充电头和充电宝 &lt;a href="https://matnoble.me/tech/reviews/lenovo-xiaoxin-pro-13/#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:5" role="doc-endnote">
&lt;p>Windows 系统被调教得很省电，可以看很长时间的电视剧。但对于我常用的 Ubuntu 就没有那么幸运了 🙃 &lt;a href="https://matnoble.me/tech/reviews/lenovo-xiaoxin-pro-13/#fnref:5" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:6" role="doc-endnote">
&lt;p>这一点好像是目前整个市场的通病，但小新 Pro 13 离及格线还有很远... &lt;a href="https://matnoble.me/tech/reviews/lenovo-xiaoxin-pro-13/#fnref:6" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:7" role="doc-endnote">
&lt;p>最近，发现开源软件 Kdenlive、Gimp 和 Inkscape 也有很强大的素材编辑功能，而且比 Adobe 系的软件轻量的多，还是开源免费的 &lt;a href="https://matnoble.me/tech/reviews/lenovo-xiaoxin-pro-13/#fnref:7" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/reviews/">Reviews</category><category domain="https://matnoble.me/tags/%E5%80%BC%E4%B8%8D%E5%80%BC%E5%BE%97%E4%B9%B0/">值不值得买</category></item><item><title>LaTeX 排版多行公式</title><link>https://matnoble.me/tech/latex/multi-line-equations/</link><guid isPermaLink="true">https://matnoble.me/tech/latex/multi-line-equations/</guid><pubDate>Mon, 23 Mar 2020 00:22:50 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/4e7ca500-bdca-42dc-9444-bffa8af84fc5.png" width="95%" />&lt;/p>
&lt;div align="center">&lt;a href="https://matnoble.me/series/latex">◎ 你过来啊 🤞&lt;/a>&lt;/div>
&lt;p>&lt;br />&lt;/p>
&lt;p>在 $\LaTeX$ 排版过程中，多行公式经常被遇到。其中，又分为多种情况&lt;/p>
&lt;ul>
&lt;li>公式本身很长&lt;/li>
&lt;li>公式组
&lt;ul>
&lt;li>需加定界符，如花括号 &lt;code>{&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>首先，在导言区加载 &lt;code>amsmath&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\usepackage&lt;/span>&lt;span class="nb">{&lt;/span>amsmath&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="长公式被迫折行">长公式「被迫」折行&lt;/h2>
&lt;p>使用 &lt;code>multline&lt;/code> 环境，实现首行局左，中间居中，末行局右&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>multline&lt;span class="nb">}&lt;/span>
p = 3x&lt;span class="nb">^&lt;/span>6 + 14x&lt;span class="nb">^&lt;/span>5y + 590x&lt;span class="nb">^&lt;/span>4y&lt;span class="nb">^&lt;/span>2 + 19x&lt;span class="nb">^&lt;/span>3y&lt;span class="nb">^&lt;/span>3&lt;span class="k">\\&lt;/span>
+ &lt;span class="k">\sin&lt;/span>&lt;span class="nb">{&lt;/span>x&lt;span class="nb">}&lt;/span> + &lt;span class="k">\cos&lt;/span>&lt;span class="nb">{&lt;/span>y&lt;span class="nb">}&lt;/span> + &lt;span class="k">\tan&lt;/span>&lt;span class="nb">{&lt;/span>a&lt;span class="nb">}&lt;/span> + e&lt;span class="nb">^{&lt;/span>x+y&lt;span class="nb">}&lt;/span> &lt;span class="k">\\&lt;/span>
- 12x&lt;span class="nb">^&lt;/span>2y&lt;span class="nb">^&lt;/span>4 - 12xy&lt;span class="nb">^&lt;/span>5 + 2y&lt;span class="nb">^&lt;/span>6 - a&lt;span class="nb">^&lt;/span>3b&lt;span class="nb">^&lt;/span>3
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>multline
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div>
\begin{multline}
p = 3x^6 + 14x^5y + 590x^4y^2 + 19x^3y^3 \\
+ \sin{x} + \cos{y} + \tan{a} + e^{x+y} \\
- 12x^2y^4 - 12xy^5 + 2y^6 - a^3b^3
\end{multline}
&lt;/div>
&lt;p>&lt;strong>注意&lt;/strong>: 若不需要编号则使用 &lt;code>multline*&lt;/code>&lt;/p>
&lt;h2 id="公式并排">公式并排&lt;/h2>
&lt;h3 id="分别编号">分别编号&lt;/h3>
&lt;ul>
&lt;li>需要对齐&lt;/li>
&lt;/ul>
&lt;p>使用 &lt;code>align&lt;/code> 环境，在需要对齐的地方加 &lt;code>&amp;amp;&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>align&lt;span class="nb">}&lt;/span>
a &lt;span class="nb">&amp;amp;&lt;/span> = b + c &lt;span class="k">\label&lt;/span>&lt;span class="nb">{&lt;/span>eq:eq1&lt;span class="nb">}&lt;/span>
&lt;span class="k">\\&lt;/span>&lt;span class="na">[3pt]&lt;/span>
&lt;span class="nb">&amp;amp;&lt;/span> = d + e &lt;span class="k">\label&lt;/span>&lt;span class="nb">{&lt;/span>eq:eq2&lt;span class="nb">}&lt;/span>
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>align&lt;span class="nb">}&lt;/span>
&lt;span class="c">% 分别交叉引用
&lt;/span>&lt;span class="c">&lt;/span>式 (&lt;span class="k">\ref&lt;/span>&lt;span class="nb">{&lt;/span>eq:eq1&lt;span class="nb">}&lt;/span>) 和式 (&lt;span class="k">\ref&lt;/span>&lt;span class="nb">{&lt;/span>eq:eq2&lt;span class="nb">}&lt;/span>) 采用 align 对齐环境
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div>
\begin{align}
a &amp; = b + c \label{eq:eq1}
\\[3pt]
&amp; = d + e \label{eq:eq2}
\end{align}
&lt;/div>
&lt;p>式 (\ref{eq:eq1}) 和式 (\ref{eq:eq2}) 采用 &lt;code>align&lt;/code> 对齐环境&lt;/p>
&lt;ul>
&lt;li>使用 &lt;code>\notag&lt;/code> 对某行不编号&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>align&lt;span class="nb">}&lt;/span>
a = &lt;span class="nb">{}&amp;amp;&lt;/span> b + c &lt;span class="k">\\&lt;/span>
= &lt;span class="nb">{}&amp;amp;&lt;/span> d + e + f + g + h + i + j + k + l &lt;span class="k">\notag&lt;/span> &lt;span class="k">\\&lt;/span>
&lt;span class="nb">&amp;amp;{}&lt;/span> + m + n + o &lt;span class="k">\\&lt;/span>
= &lt;span class="nb">{}&amp;amp;&lt;/span> p + q + r + s
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>align&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div>
\begin{align}
a= {}&amp; b + c \\
= {}&amp; d + e + f + g + h + i + j + k + l \notag \\
&amp;{} + m + n + o \\
= {}&amp; p + q + r + s
\end{align}
&lt;/div>
&lt;p>&lt;strong>注意&lt;/strong>: 因为此处在 &lt;code>+&lt;/code> (二元运算符)处对齐，所以应该在对齐符号 &lt;code>&amp;amp;&lt;/code> 前后使用一个占位符 &lt;code>{}&lt;/code> 来避免不正确的缩进&lt;sup id="fnref:1">&lt;a href="https://matnoble.me/tech/latex/multi-line-equations/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;ul>
&lt;li>多列对齐&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>align*&lt;span class="nb">}&lt;/span>
a &lt;span class="nb">&amp;amp;&lt;/span>=1 &lt;span class="nb">&amp;amp;&lt;/span> b &lt;span class="nb">&amp;amp;&lt;/span>=2 &lt;span class="nb">&amp;amp;&lt;/span> c &lt;span class="nb">&amp;amp;&lt;/span>=3 &lt;span class="k">\\&lt;/span>
d &lt;span class="nb">&amp;amp;&lt;/span>=-1 &lt;span class="nb">&amp;amp;&lt;/span> e &lt;span class="nb">&amp;amp;&lt;/span>=-2 &lt;span class="nb">&amp;amp;&lt;/span> f &lt;span class="nb">&amp;amp;&lt;/span>=-5
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>align*&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div>
\begin{align*}
a &amp;=1 &amp; b &amp;=2 &amp; c &amp;=3 \\
d &amp;=-1 &amp; e &amp;=-2 &amp; f &amp;=-5
\end{align*}
&lt;/div>
&lt;ul>
&lt;li>不需要对齐&lt;/li>
&lt;/ul>
&lt;p>使用 &lt;code>gather&lt;/code> 环境&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>gather&lt;span class="nb">}&lt;/span>
a = b + c &lt;span class="k">\\&lt;/span>
d = e + f + g &lt;span class="k">\\&lt;/span>
h + i = j + k &lt;span class="k">\notag&lt;/span> &lt;span class="k">\\&lt;/span>
l + m = n
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>gather&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div>
\begin{gather}
a = b + c \\
d = e + f + g \\
h + i = j + k \notag \\
l + m = n
\end{gather}
&lt;/div>
&lt;p>&lt;strong>注意&lt;/strong>: 若不需要编号则使用 &lt;code>align*&lt;/code> 或 &lt;code>gather*&lt;/code>&lt;/p>
&lt;h3 id="统一编号">统一编号&lt;/h3>
&lt;p>使用 &lt;code>aligned / gathered&lt;/code> 环境，并且依赖 &lt;code>\begin{equation} \end{equation}&lt;/code>，若不须加编号则使用&lt;code>\[ \]&lt;/code>包裹。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>equation&lt;span class="nb">}&lt;/span>
&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>aligned&lt;span class="nb">}&lt;/span>
a &lt;span class="nb">&amp;amp;&lt;/span>= b + c &lt;span class="k">\\&lt;/span>
d &lt;span class="nb">&amp;amp;&lt;/span>= e + f + g &lt;span class="k">\\&lt;/span>
h + i &lt;span class="nb">&amp;amp;&lt;/span>= j + k &lt;span class="k">\\&lt;/span>
l + m &lt;span class="nb">&amp;amp;&lt;/span>= n
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>aligned&lt;span class="nb">}&lt;/span>
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>equation&lt;span class="nb">}&lt;/span>
&lt;span class="sb">\[&lt;/span>&lt;span class="nb">
&lt;/span>&lt;span class="nb"> &lt;/span>&lt;span class="nv">\begin&lt;/span>&lt;span class="nb">{gathered}
&lt;/span>&lt;span class="nb"> a &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb"> b &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nb"> c &lt;/span>&lt;span class="nv">\\&lt;/span>&lt;span class="nb">
&lt;/span>&lt;span class="nb"> d &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb"> e &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nb"> f &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nb"> g &lt;/span>&lt;span class="nv">\\&lt;/span>&lt;span class="nb">
&lt;/span>&lt;span class="nb"> h &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nb"> i &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb"> j &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nb"> k &lt;/span>&lt;span class="nv">\\&lt;/span>&lt;span class="nb">
&lt;/span>&lt;span class="nb"> l &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nb"> m &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb"> n
&lt;/span>&lt;span class="nb"> &lt;/span>&lt;span class="nv">\end&lt;/span>&lt;span class="nb">{gathered}
&lt;/span>&lt;span class="nb">&lt;/span>&lt;span class="s">\]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>带编号且对齐&lt;/p>
&lt;div>
\begin{equation}
\begin{aligned}
a &amp;= b + c \\
d &amp;= e + f + g \\
h + i &amp;= j + k \\
l + m &amp;= n
\end{aligned}
\end{equation}
&lt;/div>
&lt;p>不带编号不对齐&lt;/p>
&lt;div>
\[
\begin{gathered}
a = b + c \\
d = e + f + g \\
h + i = j + k \\
l + m = n
\end{gathered}
\]
&lt;/div>
&lt;h3 id="添加定界符">添加定界符&lt;/h3>
&lt;p>有时需要在多行公式中添加&lt;a href="https://matnoble.me/tech/latex/delimiter/">定界符&lt;/a>，最常用的就是在公式左端加上花括号 &lt;code>{&lt;/code>，下面介绍 3 种方法实现该功能。&lt;/p>
&lt;p>实际上，除了 &lt;code>cases&lt;/code> 环境，其他方法都可以实现其他定界符，尤其是最后一种。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>\left\{ \right.&lt;/code>&lt;/p>
&lt;ul>
&lt;li>&lt;code>aligned / gathered&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>equation&lt;span class="nb">}&lt;/span>
&lt;span class="k">\left\{&lt;/span>
&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>gathered&lt;span class="nb">}&lt;/span>
a&lt;span class="nb">_{&lt;/span>11&lt;span class="nb">}&lt;/span> x&lt;span class="nb">_{&lt;/span>1&lt;span class="nb">}&lt;/span> + a&lt;span class="nb">_{&lt;/span>12&lt;span class="nb">}&lt;/span> x&lt;span class="nb">_{&lt;/span>2&lt;span class="nb">}&lt;/span> + a&lt;span class="nb">_{&lt;/span>13&lt;span class="nb">}&lt;/span> x&lt;span class="nb">_{&lt;/span>2&lt;span class="nb">}&lt;/span> = b&lt;span class="nb">_{&lt;/span>1&lt;span class="nb">}&lt;/span>
&lt;span class="k">\\&lt;/span>&lt;span class="na">[3pt]&lt;/span>
a&lt;span class="nb">_{&lt;/span>21&lt;span class="nb">}&lt;/span> x&lt;span class="nb">_{&lt;/span>1&lt;span class="nb">}&lt;/span> + a&lt;span class="nb">_{&lt;/span>22&lt;span class="nb">}&lt;/span> x&lt;span class="nb">_{&lt;/span>3&lt;span class="nb">}&lt;/span> + a&lt;span class="nb">_{&lt;/span>23&lt;span class="nb">}&lt;/span> x&lt;span class="nb">_{&lt;/span>3&lt;span class="nb">}&lt;/span> = b&lt;span class="nb">_{&lt;/span>2&lt;span class="nb">}&lt;/span>
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>gathered&lt;span class="nb">}&lt;/span>
&lt;span class="k">\right&lt;/span>.
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>equation&lt;span class="nb">}&lt;/span>
&lt;span class="sb">\[&lt;/span>&lt;span class="nb">
&lt;/span>&lt;span class="nb"> &lt;/span>&lt;span class="nv">\left\{&lt;/span>&lt;span class="nb">
&lt;/span>&lt;span class="nb"> &lt;/span>&lt;span class="nv">\begin&lt;/span>&lt;span class="nb">{aligned}
&lt;/span>&lt;span class="nb"> a_{&lt;/span>&lt;span class="m">11&lt;/span>&lt;span class="nb">} x_{&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="nb">} &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nb"> a_{&lt;/span>&lt;span class="m">12&lt;/span>&lt;span class="nb">} x_{&lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="nb">} &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nb"> a_{&lt;/span>&lt;span class="m">13&lt;/span>&lt;span class="nb">} x_{&lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="nb">} &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb"> b_{&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="nb">}
&lt;/span>&lt;span class="nb"> &lt;/span>&lt;span class="nv">\\&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="nb">pt&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="nb">
&lt;/span>&lt;span class="nb"> a_{&lt;/span>&lt;span class="m">22&lt;/span>&lt;span class="nb">} x_{&lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="nb">} &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nb"> a_{&lt;/span>&lt;span class="m">23&lt;/span>&lt;span class="nb">} x_{&lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="nb">} &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb"> b_{&lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="nb">}
&lt;/span>&lt;span class="nb"> &lt;/span>&lt;span class="nv">\end&lt;/span>&lt;span class="nb">{aligned}
&lt;/span>&lt;span class="nb"> &lt;/span>&lt;span class="nv">\right&lt;/span>&lt;span class="nb">.
&lt;/span>&lt;span class="nb">&lt;/span>&lt;span class="s">\]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>不对齐带编号&lt;/p>
&lt;div>
\begin{equation}
\left\{
\begin{gathered}
a_{11} x_{1} + a_{12} x_{2} + a_{13} x_{2} = b_{1}
\\[3pt]
a_{21} x_{1} + a_{22} x_{3} + a_{23} x_{3} = b_{2}
\end{gathered}
\right.
\end{equation}
&lt;/div>
对齐不带编号
&lt;div>
\[
\left\{
\begin{aligned}
a_{11} x_{1} + a_{12} x_{2} + a_{13} x_{2} = b_{1}
\\[3pt]
a_{22} x_{3} + a_{23} x_{3} = b_{2}
\end{aligned}
\right.
\]
&lt;/div>
&lt;ul>
&lt;li>&lt;code>array&lt;/code> 环境&lt;sup id="fnref:2">&lt;a href="https://matnoble.me/tech/latex/multi-line-equations/#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="sb">\[&lt;/span>&lt;span class="nb">
&lt;/span>&lt;span class="nb"> |x| &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb"> &lt;/span>&lt;span class="nv">\left\{&lt;/span>&lt;span class="nb">
&lt;/span>&lt;span class="nb"> &lt;/span>&lt;span class="nv">\begin&lt;/span>&lt;span class="nb">{array}{rl}
&lt;/span>&lt;span class="nb"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nb">x &amp;amp; &lt;/span>&lt;span class="nv">\mbox&lt;/span>&lt;span class="nb">{if } x &amp;lt; &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="nb">,&lt;/span>&lt;span class="nv">\\&lt;/span>&lt;span class="nb">
&lt;/span>&lt;span class="nb"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="nb"> &amp;amp; &lt;/span>&lt;span class="nv">\mbox&lt;/span>&lt;span class="nb">{if } x &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="nb">,&lt;/span>&lt;span class="nv">\\&lt;/span>&lt;span class="nb">
&lt;/span>&lt;span class="nb"> x &amp;amp; &lt;/span>&lt;span class="nv">\mbox&lt;/span>&lt;span class="nb">{if } x &amp;gt; &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="nb">.
&lt;/span>&lt;span class="nb"> &lt;/span>&lt;span class="nv">\end&lt;/span>&lt;span class="nb">{array} &lt;/span>&lt;span class="nv">\right&lt;/span>&lt;span class="nb">.
&lt;/span>&lt;span class="nb">&lt;/span>&lt;span class="s">\]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div>
\[
|x| = \left\{
\begin{array}{rl}
-x &amp; \mbox{if } x &lt; 0,\\
0 &amp; \mbox{if } x = 0,\\
x &amp; \mbox{if } x > 0.
\end{array} \right.
\]
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>&lt;code>cases&lt;/code> 环境&lt;sup id="fnref:3">&lt;a href="https://matnoble.me/tech/latex/multi-line-equations/#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>&lt;/p>
&lt;ul>
&lt;li>分别编号&lt;br />
需要在&lt;code>导言区&lt;/code>载入 &lt;code>cases&lt;/code> 宏包 &lt;code>\usepackage{cases}&lt;/code>，并且放在 &lt;code>amsmath&lt;/code> 之后&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>numcases&lt;span class="nb">}&lt;/span> &lt;span class="nb">{&lt;/span>|x| =&lt;span class="nb">}&lt;/span>
-x &lt;span class="nb">&amp;amp;&lt;/span> &lt;span class="k">\mbox&lt;/span>&lt;span class="nb">{&lt;/span>if &lt;span class="nb">}&lt;/span> x &amp;lt; 0 &lt;span class="k">\label&lt;/span>&lt;span class="nb">{&lt;/span>eq:eq1&lt;span class="nb">}&lt;/span>,&lt;span class="k">\\&lt;/span>
0 &lt;span class="nb">&amp;amp;&lt;/span> &lt;span class="k">\mbox&lt;/span>&lt;span class="nb">{&lt;/span>if &lt;span class="nb">}&lt;/span> x = 0,&lt;span class="k">\\&lt;/span>
x &lt;span class="nb">&amp;amp;&lt;/span> &lt;span class="k">\mbox&lt;/span>&lt;span class="nb">{&lt;/span>if &lt;span class="nb">}&lt;/span> x &amp;gt; 0.
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>numcases&lt;span class="nb">}&lt;/span>
&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>subnumcases&lt;span class="nb">}&lt;/span> &lt;span class="nb">{&lt;/span>&lt;span class="k">\label&lt;/span>&lt;span class="nb">{&lt;/span>eq:eq4&lt;span class="nb">}&lt;/span> |x| =&lt;span class="nb">}&lt;/span>
-x &lt;span class="nb">&amp;amp;&lt;/span> &lt;span class="k">\mbox&lt;/span>&lt;span class="nb">{&lt;/span>if &lt;span class="nb">}&lt;/span> x &amp;lt; 0,&lt;span class="k">\\&lt;/span>
0 &lt;span class="nb">&amp;amp;&lt;/span> &lt;span class="k">\mbox&lt;/span>&lt;span class="nb">{&lt;/span>if &lt;span class="nb">}&lt;/span> x = 0&lt;span class="k">\label&lt;/span>&lt;span class="nb">{&lt;/span>eq:eq42&lt;span class="nb">}&lt;/span>,&lt;span class="k">\\&lt;/span>
x &lt;span class="nb">&amp;amp;&lt;/span> &lt;span class="k">\mbox&lt;/span>&lt;span class="nb">{&lt;/span>if &lt;span class="nb">}&lt;/span> x &amp;gt; 0.
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>subnumcases&lt;span class="nb">}&lt;/span>
式 (&lt;span class="k">\ref&lt;/span>&lt;span class="nb">{&lt;/span>eq:eq1&lt;span class="nb">}&lt;/span>) 和 式 (&lt;span class="k">\ref&lt;/span>&lt;span class="nb">{&lt;/span>eq:eq4&lt;span class="nb">}&lt;/span>) 和 式 (&lt;span class="k">\ref&lt;/span>&lt;span class="nb">{&lt;/span>eq:eq42&lt;span class="nb">}&lt;/span>)
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;sup id="fnref:4">&lt;a href="https://matnoble.me/tech/latex/multi-line-equations/#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>&lt;img src="https://imgkr.cn-bj.ufileos.com/5ee5ecdf-8f8e-4606-8488-30e43ab4b871.png" width="90%"/>&lt;/p>
&lt;ul>
&lt;li>统一编号&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>equation&lt;span class="nb">}&lt;/span> |x| =
&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>cases&lt;span class="nb">}&lt;/span>
-x &lt;span class="nb">&amp;amp;&lt;/span> &lt;span class="k">\mbox&lt;/span>&lt;span class="nb">{&lt;/span>if &lt;span class="nb">}&lt;/span> x &amp;lt; 0,&lt;span class="k">\\&lt;/span>
0 &lt;span class="nb">&amp;amp;&lt;/span> &lt;span class="k">\mbox&lt;/span>&lt;span class="nb">{&lt;/span>if &lt;span class="nb">}&lt;/span> x = 0,&lt;span class="k">\\&lt;/span>
x &lt;span class="nb">&amp;amp;&lt;/span> &lt;span class="k">\mbox&lt;/span>&lt;span class="nb">{&lt;/span>if &lt;span class="nb">}&lt;/span> x &amp;gt; 0.
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>cases&lt;span class="nb">}&lt;/span>
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>equation&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div>
\begin{equation} |x| =
\begin{cases}
-x &amp; \mbox{if } x &lt; 0,\\
0 &amp; \mbox{if } x = 0,\\
x &amp; \mbox{if } x > 0.
\end{cases}
\end{equation}
&lt;/div>
&lt;p>&lt;em>注意与 &lt;code>array&lt;/code> 环境的区别&lt;/em>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>empheq&lt;/code> 环境&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>其与之前的都不同，&lt;u>它可以从整个公式(组)四周加载定界符&lt;/u>&lt;sup id="fnref:5">&lt;a href="https://matnoble.me/tech/latex/multi-line-equations/#fn:5" class="footnote-ref" role="doc-noteref">5&lt;/a>&lt;/sup>。从左端、从右端，甚至是用一个..盒子..包住整个公式(组)&lt;/p>
&lt;p>首先在 &lt;code>导言区&lt;/code> 载入 &lt;code>\usepackage{empheq}&lt;/code>。使用它的框架是这样:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\usepackage&lt;/span>&lt;span class="nb">{&lt;/span>empheq&lt;span class="nb">}&lt;/span>
&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>empheq&lt;span class="nb">}&lt;/span>[markup instructions]&lt;span class="nb">{&lt;/span>AMS env name&lt;span class="nb">}&lt;/span>
&amp;lt; content AMS environment &amp;gt;
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>empheq&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/cab3a67a-01f2-4b91-b3c3-b7aa47b07852.jpeg"
title="AMS env name"
alt="AMS env name"
width="90%"
>
&lt;span class="caption">◎ AMS env name&lt;/span>
&lt;/span>
&lt;p>对于 &lt;code>定界符号&lt;/code>，可以在 &lt;code>markup instructions&lt;/code> 处填入下表中的命令&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/13c84ea6-f584-41c0-94a1-77ca7cfa7ac4.jpeg" width="90%" />&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>empheq&lt;span class="nb">}&lt;/span>[left=&lt;span class="k">\empheqlbrace&lt;/span>]&lt;span class="nb">{&lt;/span>align*&lt;span class="nb">}&lt;/span>
E &lt;span class="nb">&amp;amp;&lt;/span> =mc&lt;span class="nb">^&lt;/span>2
&lt;span class="k">\\&lt;/span>&lt;span class="na">[3pt]&lt;/span>
Y &lt;span class="nb">&amp;amp;&lt;/span> = &lt;span class="k">\sum&lt;/span>&lt;span class="nb">_{&lt;/span>n=1&lt;span class="nb">}^&lt;/span>&lt;span class="k">\infty&lt;/span> &lt;span class="k">\frac&lt;/span>&lt;span class="nb">{&lt;/span>1&lt;span class="nb">}{&lt;/span>n&lt;span class="nb">^&lt;/span>2&lt;span class="nb">}&lt;/span>
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>empheq&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/2c6cd65f-09b7-4748-93c9-d6ac5d794c8f.png" width="20%" />&lt;/p>
&lt;hr />
&lt;p>&lt;code>empheq&lt;/code> 环境还可以实现以下效果，感兴趣的可以看下官方文档&lt;sup id="fnref:5">&lt;a href="https://matnoble.me/tech/latex/multi-line-equations/#fn:5" class="footnote-ref" role="doc-noteref">5&lt;/a>&lt;/sup>&lt;/p>
&lt;img src="https://imgkr.cn-bj.ufileos.com/7e8e342b-0097-451b-a826-4a163dd449c1.png" width="80%"/>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="https://geelaw.blog/entries/la-composition-soignee-des-formules-mathematiques/#mistakes-latex-align-env">https://geelaw.blog/entries/la-composition-soignee-des-formules-mathematiques/#mistakes-latex-align-env&lt;/a> &lt;a href="https://matnoble.me/tech/latex/multi-line-equations/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>&lt;code>array&lt;/code> 环境经常出现在多维数组中 &lt;br> &lt;a href="https://mirror.bjtu.edu.cn/ctan/macros/latex/required/tools/array.pdf">https://mirror.bjtu.edu.cn/ctan/macros/latex/required/tools/array.pdf&lt;/a> &lt;a href="https://matnoble.me/tech/latex/multi-line-equations/#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>&lt;code>cases&lt;/code> 环境 &lt;a href="http://mirror.lzu.edu.cn/CTAN/macros/latex/contrib/cases/cases.pdf">http://mirror.lzu.edu.cn/CTAN/macros/latex/contrib/cases/cases.pdf&lt;/a> &lt;a href="https://matnoble.me/tech/latex/multi-line-equations/#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4" role="doc-endnote">
&lt;p>因为博客渲染公式的 Mathjax 不支持 &lt;code>numcases&lt;/code> 环境，所以采用图片展现，也就造成前后问公式编号有些混乱 &lt;a href="https://matnoble.me/tech/latex/multi-line-equations/#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:5" role="doc-endnote">
&lt;p>a way to produce arbitrary delimiters that span entire math displays &lt;br> &lt;a href="http://mirror.lzu.edu.cn/CTAN/macros/latex/contrib/mathtools/empheq.pdf">http://mirror.lzu.edu.cn/CTAN/macros/latex/contrib/mathtools/empheq.pdf&lt;/a> &lt;a href="https://matnoble.me/tech/latex/multi-line-equations/#fnref:5" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/latex/">latex</category><category domain="https://matnoble.me/series/latex/">LaTeX 排版「冷」知识</category><category domain="https://matnoble.me/tags/">标签云</category></item><item><title>Inkscape 学习笔记 I</title><link>https://matnoble.me/tech/draw/inkscape-note-1/</link><guid isPermaLink="true">https://matnoble.me/tech/draw/inkscape-note-1/</guid><pubDate>Mon, 23 Mar 2020 00:19:41 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h2 id="下载安装">下载安装&lt;/h2>
&lt;p>首先在官网 &lt;a href="https://inkscape.org/">https://inkscape.org/&lt;/a> 下载对应系统的安装包，目前稳定版是：0.92.4
&lt;img src="https://imgkr.cn-bj.ufileos.com/470e4428-8383-4d45-95c6-e9225d3209ed.jpeg" alt="Draw Freely">
安装完毕，初次打开它张这个样子，还喜欢吗？
&lt;img src="https://imgkr.cn-bj.ufileos.com/03316115-0dd7-473f-8471-114fb3578ef3.png" alt="">&lt;/p>
&lt;h2 id="绘制矩形">绘制矩形&lt;/h2>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/68c17a0d-36ce-4303-9cad-0f5ba523a345.png" alt="">&lt;/p>
&lt;p>选择&lt;code>矩形&lt;/code>工具，按住 &lt;code>Ctrl&lt;/code> 键，向不同方向拖动鼠标，可生成不同比例的矩形&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/d691d0f3-d0ec-4193-9ee8-ccf228ed55f4.gif" alt="注意最下方的提示">&lt;/p>
&lt;h2 id="绘制圆形">绘制圆形&lt;/h2>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/677185e3-a472-4e3e-9bd5-fe8318d9ab60.png" alt="">&lt;/p>
&lt;p>选择&lt;code>圆&lt;/code>工具，按住 &lt;code>Ctrl&lt;/code> 键，向不同方向拖动鼠标，可生成圆或不同比例的椭圆&lt;/p>
&lt;p>点击图形的&lt;code>小空心圆&lt;/code>，绕圆周拖动，得到满意的弧形&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/1312b656-3309-4d6b-b89f-c8afd94a233b.gif" alt="按住 Ctrl 键，可快速得到满意的角度">&lt;/p>
&lt;h2 id="多边形">多边形&lt;/h2>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/39f0285f-5c15-4ba8-82bc-3f900d2efc90.png" alt="">&lt;/p>
&lt;p>选择&lt;code>多边形&lt;/code>工具，拖拽鼠标即可。若按住 &lt;code>Ctrl&lt;/code> 键，则可以一定的角度旋转&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/906f7858-204f-4529-b4f9-61b9b1cc3aab.gif" alt="其他选项可自由探索">&lt;/p>
&lt;h2 id="坐标轴及划分网格">坐标轴及划分网格&lt;/h2>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/4838a41c-4998-4b3d-ae4e-f97c718e9f0e.png"
title="网格剖分"
alt="网格剖分"
width="95%"
>
&lt;span class="caption">◎ 网格剖分&lt;/span>
&lt;/span></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/draw/">draw</category><category domain="https://matnoble.me/tags/%E7%A7%91%E7%A0%94%E5%88%B6%E5%9B%BE/">科研制图</category></item><item><title>LaTeX 定界符</title><link>https://matnoble.me/tech/latex/delimiter/</link><guid isPermaLink="true">https://matnoble.me/tech/latex/delimiter/</guid><pubDate>Mon, 23 Mar 2020 00:12:07 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/4e7ca500-bdca-42dc-9444-bffa8af84fc5.png" width="95%" />&lt;/p>
&lt;div align="center">&lt;a href="https://matnoble.me/series/latex">◎ 你过来啊 🤞&lt;/a>&lt;/div>
&lt;br>
&lt;p>$\LaTeX$ 提供了多种形式的定界符，包括各种括号:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">()
[]
&lt;span class="k">\{&lt;/span> &lt;span class="k">\}&lt;/span>
&lt;span class="k">\langle&lt;/span> &lt;span class="k">\rangle&lt;/span>
| |
&lt;span class="k">\|&lt;/span> &lt;span class="k">\|&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$
() \quad [] \quad \{ \} \quad \langle \rangle \quad || \quad \| \|
$$&lt;/p>
&lt;p>而最后的绝对值和范数符号，amsmath 宏包推荐建议使用&lt;code>\lvert \rvert&lt;/code>　和&lt;code>\lVert \rVert&lt;/code> 代替&lt;/p>
&lt;p>$$
\lvert \rvert \quad \lVert \rVert
$$&lt;/p>
&lt;p>而当遇到「个子比较高」的公式时，就需要 &lt;code>\left \right&lt;/code> 配对使用来自动调整定界符的大小&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">(&lt;span class="k">\frac&lt;/span>&lt;span class="nb">{&lt;/span>1&lt;span class="nb">}{&lt;/span>1-x&lt;span class="nb">}&lt;/span>)&lt;span class="nb">^&lt;/span>2 &lt;span class="k">\qquad&lt;/span>
&lt;span class="k">\left&lt;/span>( &lt;span class="k">\frac&lt;/span>&lt;span class="nb">{&lt;/span>1&lt;span class="nb">}{&lt;/span>1-x&lt;span class="nb">}&lt;/span> &lt;span class="k">\right&lt;/span>)&lt;span class="nb">^&lt;/span>2
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$
(\frac{1}{1-x})^2 \qquad
\left( \frac{1}{1-x} \right)^2
$$&lt;/p>
&lt;p>&lt;strong>注意:&lt;/strong> &lt;code>\left&lt;/code> 和 &lt;code>\right&lt;/code> 必须配对使用。只需要单个定界符时，另一个定界符写成&lt;code>\left.&lt;/code> 或 &lt;code>\right.&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\frac&lt;/span>&lt;span class="nb">{&lt;/span>1&lt;span class="nb">}{&lt;/span>x&lt;span class="nb">^&lt;/span>2&lt;span class="nb">}&lt;/span>|&lt;span class="nb">_&lt;/span>0&lt;span class="nb">^&lt;/span>1 &lt;span class="k">\qquad&lt;/span>
&lt;span class="k">\left&lt;/span>. &lt;span class="k">\frac&lt;/span>&lt;span class="nb">{&lt;/span>1&lt;span class="nb">}{&lt;/span>x&lt;span class="nb">^&lt;/span>2&lt;span class="nb">}&lt;/span>&lt;span class="k">\right&lt;/span>|&lt;span class="nb">_&lt;/span>0&lt;span class="nb">^&lt;/span>1
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$
\frac{1}{x^2}|_0^1 \qquad
\left. \frac{1}{x^2}\right|_0^1
$$&lt;/p>
&lt;p>除了自动调整大小，amsmath 宏包推荐使用 &lt;code>\big(1.5倍), \Big(2倍), \bigg(2.5倍), \Bigg(3倍)&lt;/code> ，更精准地调整定界符的大小，以达到更美观的效果&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>align*&lt;span class="nb">}&lt;/span>
&lt;span class="k">\left&lt;/span>((x-1)(x+1)&lt;span class="k">\right&lt;/span>)&lt;span class="nb">^&lt;/span>2
&lt;span class="k">\\&lt;/span>&lt;span class="na">[3pt]&lt;/span>
&lt;span class="k">\bigl&lt;/span>( (x-1)(x+1) &lt;span class="k">\bigr&lt;/span>)&lt;span class="nb">^&lt;/span>2
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>align*&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/5b410414-8fb7-4123-93c7-410978c5dc56.svg" alt="">&lt;/p>
&lt;br>
$$
\Biggl( \biggl( \Bigl( \bigl( \bigr) \Bigr) \biggr) \Biggr)
$$
$$
\Biggl[ \biggl[ \Bigl[ \bigl[ \bigr] \Bigr] \biggr] \Biggr]
$$
$$
\Biggl\{ \biggl\{ \Bigl\{ \bigl\{ \bigr\} \Bigr\} \biggr\} \Biggr\}
$$
$$
\Biggl\langle \biggl\langle \Bigl\langle \bigl\langle \bigr\rangle \Bigr\rangle \biggr\rangle \Biggr\rangle
$$
$$
\Biggl\lvert \biggl\lvert \Bigl\lvert \bigl\lvert \bigr\rvert \Bigr\rvert \biggr\rvert \Biggr\rvert
$$
$$
\Biggl\lVert \biggl\lVert \Bigl\lVert \bigl\lVert \bigr\rVert \Bigr\rVert \biggr\rVert \Biggr\rVert
$$</description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/latex/">latex</category><category domain="https://matnoble.me/series/latex/">LaTeX 排版「冷」知识</category><category domain="https://matnoble.me/tags/">标签云</category></item><item><title>绘图工具大比拼</title><link>https://matnoble.me/tech/draw/comparison-drawing-software/</link><guid isPermaLink="true">https://matnoble.me/tech/draw/comparison-drawing-software/</guid><pubDate>Sun, 22 Mar 2020 00:10:09 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;img src="https://imgkr.cn-bj.ufileos.com/6dd6e180-27d3-4ba1-8dca-1906deda8ae9.svg" alt="blog matnoble.me Comparison drawing software" width="90%"/>
&lt;p>绘图分好多类型, 本文只涉及非编程类的「科研绘图」&lt;/p>
&lt;p>「图式」可以帮助创作者更清楚的表达意图, 所谓「一图胜千言」。而高质量的图示更能令读者赏心悦目&lt;/p>
&lt;blockquote>
&lt;p>曾经有位论文审稿人在自己的博文中就写道：“我审稿时看稿件的顺序是题目、摘要、图表、前言、参考文献和正文”。&lt;br>
古语云「字如其人」，现在讲「第一印象」，说的都是形象、气质的重要作用，规范的、高质量的图片是发表高水平文章的必备条件。&lt;/p>
&lt;footer>
&lt;strong>&lt;/strong>
&lt;cite>
&lt;a href="http://www.360doc.com/content/20/0101/22/99071_883578538.shtml" title="http://www.360doc.com/content/20/0101/22/99071_883578538.shtml">360doc.com/content/20/0101/22/...&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
&lt;hr>
&lt;p>下面, 总结一些本人所用过的非编程式的绘图软件, 并将考虑以下 4 个因素，给出主观评分 😉&lt;/p>
&lt;ul>
&lt;li>上手难度&lt;/li>
&lt;li>成图效果&lt;/li>
&lt;li>可再编辑性&lt;/li>
&lt;li>支持设备&lt;/li>
&lt;/ul>
&lt;h2 id="micsoft-visio">Micsoft Visio&lt;/h2>
&lt;p>微软家的 Visio 算是我接触的第一个科研类的绘图软件。2017 年春节期间，需要对大三上学期所做的一套程序作总结，在文档中加入图示以辅助思考。&lt;/p>
&lt;p>我学 Visio 的“老师”是当时还在读研的姐姐，她学的是工科，需要作图的地方不少。现在印象最深刻的就是教给我：如何组合、拆分图形 😂&lt;/p>
&lt;p>当时费了「九牛二虎之力」画了类似以下的图，由于初次使用，修改了很多次（当时姐姐多次劝说我：&lt;strong>做就做好&lt;/strong>）。最终效果令当时的我比较满意，而且算是入门 Visio 了&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/a575bb41-129d-48a7-92b0-15259fecfcc7.svg"
title="剖分网格"
alt="剖分网格"
width="95%"
>
&lt;span class="caption">◎ 剖分网格&lt;/span>
&lt;/span>
&lt;p>最近的一次数学建模竞赛中，一位电气专业的队友还是在使用 Visio 作图，而且作得还蛮漂亮的&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/1f25e02a-b9c2-4d37-8dc1-3f2773d97217.svg"
title="飞行器飞行示意图"
alt="飞行器飞行示意图"
width="95%"
>
&lt;span class="caption">◎ 飞行器飞行示意图&lt;/span>
&lt;/span>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/e494637b-4aac-4fe3-9af6-f94a74c4ba89.svg"
title="流程图"
alt="流程图"
width="95%"
>
&lt;span class="caption">◎ 流程图&lt;/span>
&lt;/span>
&lt;p>Micsoft Visio 上手简单，可以作出高质量的科研用图。但是，个人主观认为，有如下不足&lt;/p>
&lt;ul>
&lt;li>作为微软的产品，入门简单，进阶难&lt;/li>
&lt;li>图片导至微软系产品，质量很好；生成的其他图片格式，用作它用的话，效果就很一般了&lt;sup id="fnref:1">&lt;a href="https://matnoble.me/tech/draw/comparison-drawing-software/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/li>
&lt;li>若有再编辑的需求，需要保存特定的格式，不方便管理&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">项目&lt;/th>
&lt;th style="text-align:center">得分&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">上手难度&lt;/td>
&lt;td style="text-align:center">25&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">成图效果&lt;/td>
&lt;td style="text-align:center">20&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">可再编辑性&lt;/td>
&lt;td style="text-align:center">20&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">支持设备&lt;/td>
&lt;td style="text-align:center">20&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">总分&lt;/td>
&lt;td style="text-align:center">85&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="axglyph">AxGlyph&lt;/h2>
&lt;p>这是之前提到过的 &lt;a href="https://matnoble.me/tech/latex/typeset-bbt/#axmath-%E6%98%AF%E5%85%AC%E5%BC%8F%E7%BC%96%E8%BE%91%E5%99%A8%E7%A5%9E%E5%99%A8">AxMath&lt;/a> 的“小兄弟”，支持使用 AxMath 输入公式。&lt;/p>
&lt;p>本科毕业设计中，都是使用 AxGlyph 作的图，没有选择 Visio 是因为前者对公式输入更好些。&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/17a30e9b-edfe-40a3-b4a7-5a23dd352303.svg"
title="Pe 值"
alt="Pe 值"
width="70%"
>
&lt;span class="caption">◎ Pe 值&lt;/span>
&lt;/span>
&lt;p>跟 Visio 一样，AxGlyph 的功能还有很多，我只使用了它的一小部分，下面是官网中的示例图&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/9ececfdd-3dbb-469d-911f-3e8380f0b0c3.png"
title="AxGlyph"
alt="AxGlyph"
width="95%"
>
&lt;span class="caption">◎ AxGlyph&lt;/span>
&lt;/span>
&lt;p>与 Visio 有着极其类似的操作逻辑，画图时，图片质量很高，但导出效果总感觉差了一些&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">项目&lt;/th>
&lt;th style="text-align:center">得分&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">上手难度&lt;/td>
&lt;td style="text-align:center">25&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">成图效果&lt;/td>
&lt;td style="text-align:center">22&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">可再编辑性&lt;/td>
&lt;td style="text-align:center">20&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">支持设备&lt;/td>
&lt;td style="text-align:center">20&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">总分&lt;/td>
&lt;td style="text-align:center">87&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;br>
&lt;hr>
&lt;h2 id="geogebra">GeoGebra&lt;/h2>
&lt;blockquote>
&lt;p>GeoGebra 是一款开源的动态几何软件。其绘图的基本元素包括点，直线，线段，多边形，向量，圆锥曲线和函数。 GeoGebra 3.2 及以后的版本还加入了电子表格和正在不断完善的数据处理功能.&lt;br>
GeoGebra 可以完成大量初高等数学中的绘图工作, 比如直接绘制圆锥曲线，对函数求导数，积分，对多项式函数求极值和拐点等，这些极大的方便了教师们制作教学材料。&lt;/p>
&lt;footer>
&lt;strong>&lt;/strong>
&lt;cite>
&lt;a href="https://zh.wikipedia.org/wiki/GeoGebra" title="https://zh.wikipedia.org/wiki/GeoGebra">zh.wikipedia.org/wiki/GeoGebra&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
&lt;p>很早之前就知道 GeoGebra 这个软件了，但一直没有使用过。直到之前写「简述有限元」时遇到要画三维图和坐标轴的刚需&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/8efb50f9-21a2-4163-ac13-39f90d4719b0.png"
title="orthogonality"
alt="orthogonality"
width="95%"
>
&lt;span class="caption">◎ orthogonality&lt;/span>
&lt;/span>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/319297e0-9878-48d2-89f0-aecb6f486ffb.svg"
title="hat function"
alt="hat function"
width="95%"
>
&lt;span class="caption">◎ hat function&lt;/span>
&lt;/span>
&lt;p>GeoGebra 同样支持用 $\TeX$ 代码输入公式。它还是跨平台的，甚至支持手机端 APP，在浏览器里也可以打开&lt;sup id="fnref:2">&lt;a href="https://matnoble.me/tech/draw/comparison-drawing-software/#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/7f697514-17dd-4ac4-a7df-25b91d4f76ba.png"
title="生态系统也太丰富了吧"
alt="生态系统也太丰富了吧"
width="95%"
>
&lt;span class="caption">◎ 生态系统也太丰富了吧&lt;/span>
&lt;/span>
&lt;p>但是，总感觉它的风格太鲜明了，不够“纯粹”。用在科研文档里，显得太“花哩胡哨”。而且，它虽然支持导出「矢量图」，但在我有限的使用体验当中，出现 bug 的机会还是挺大的。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">项目&lt;/th>
&lt;th style="text-align:center">得分&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">上手难度&lt;/td>
&lt;td style="text-align:center">23&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">成图效果&lt;/td>
&lt;td style="text-align:center">22&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">可再编辑性&lt;/td>
&lt;td style="text-align:center">20&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">支持设备&lt;/td>
&lt;td style="text-align:center">25&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">总分&lt;/td>
&lt;td style="text-align:center">90&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;br>
&lt;hr>
&lt;h2 id="inkscape">Inkscape&lt;/h2>
&lt;blockquote>
&lt;p>Inkscape 是支持 Linux，苹果和视窗桌面系统的专业的高质量的矢量图像编辑器。它是自由和开源的软件。&lt;/p>
&lt;footer>
&lt;strong>&lt;/strong>
&lt;cite>
&lt;a href="https://inkscape.org/" title="https://inkscape.org/">inkscape.org/&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
&lt;p>从 &lt;a href="https://castel.dev/post/lecture-notes-2/#">How I draw figures for my mathematical lecture notes using Inkscape&lt;/a>&lt;sup id="fnref:3">&lt;a href="https://matnoble.me/tech/draw/comparison-drawing-software/#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup> 中得知这个免费开源软件，该作者使用「Vim + LaTeX + Inkscape」快速实时记数学笔记&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/ce8a2c09-fecf-46bd-9d2e-8e5cce3e08bf.png"
title="对于小哥的手速，在下是自愧不如啊"
alt="对于小哥的手速，在下是自愧不如啊"
width="95%"
>
&lt;span class="caption">◎ 对于小哥的手速，在下是自愧不如啊&lt;/span>
&lt;/span>
&lt;p>如此快速高质量记笔记是我目前难以企及的高度，但是 Inkscape 还是可以学一学的&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/73e3f691-d269-4a73-93ef-1ade1dba2c23.svg"
title="博客 logo"
alt="博客 logo"
width="30%"
>
&lt;span class="caption">◎ 博客 logo&lt;/span>
&lt;/span>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/ab83f63b-e721-4f24-9c61-40815143c6df.png"
title="unit balls in the sense of different norms"
alt="unit balls in the sense of different norms"
width="95%"
>
&lt;span class="caption">◎ unit balls in the sense of different norms&lt;/span>
&lt;/span>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/e242449d-f810-4466-8b21-6e2b7ea33a23.png"
title="minimal approximation problem"
alt="minimal approximation problem"
width="95%"
>
&lt;span class="caption">◎ minimal approximation problem&lt;/span>
&lt;/span>
&lt;p>&lt;br />&lt;/p>
&lt;p>Inkscape 的最大优点是支持导出 .svg .eps 等高清矢量图&lt;sup id="fnref:4">&lt;a href="https://matnoble.me/tech/draw/comparison-drawing-software/#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>，.svg 格式还可以再编辑。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">项目&lt;/th>
&lt;th style="text-align:center">得分&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">上手难度&lt;/td>
&lt;td style="text-align:center">20&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">成图效果&lt;/td>
&lt;td style="text-align:center">25&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">可再编辑性&lt;/td>
&lt;td style="text-align:center">25&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">支持设备&lt;/td>
&lt;td style="text-align:center">25&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">总分&lt;/td>
&lt;td style="text-align:center">95&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;br>
&lt;hr>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>除了以上, 我还算是用过「TiKZ」&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/63a0e6d2-58a3-48c3-a2c2-a5acbf08b50e.svg" alt="">
但这其实就是简单的套模板，不是真的会，以后有需要再学。&lt;/p>
&lt;p>我使用的制图软件有限，而且以上评分完全是「主观」的，仅供娱乐参考。&lt;/p>
&lt;p>非常希望你在评论区留言，告诉我们你平时用哪些制图软件，还可以加上简短的使用感受 ✍&lt;/p>
&lt;p>另外，我还计划写一些简短的 Inkscape 的学习笔记，介绍一些基本形状的绘制以及使用技巧，之后分享出来，到时也可以给我提一些意见 🙏&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/a7efd4ad-9c89-4cfa-bd3c-00358ef783d0.gif" alt="">&lt;/p>
&lt;hr>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>上面数学建模中，队友制的 Visio 图 $\to$ Office Word $\to$ PDF $\to$ $\LaTeX{}$。虽然插图质量得到了保证，但还是有些麻烦。 &lt;a href="https://matnoble.me/tech/draw/comparison-drawing-software/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>&lt;a href="https://www.geogebra.org/classic/">https://www.geogebra.org/classic/&lt;/a> &lt;a href="https://matnoble.me/tech/draw/comparison-drawing-software/#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>知乎翻译版： &lt;a href="https://zhuanlan.zhihu.com/p/64205323">https://zhuanlan.zhihu.com/p/64205323&lt;/a> &lt;a href="https://matnoble.me/tech/draw/comparison-drawing-software/#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4" role="doc-endnote">
&lt;p>无论如何放大，图像都不失真 &lt;a href="https://matnoble.me/tech/draw/comparison-drawing-software/#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/draw/">draw</category><category domain="https://matnoble.me/tags/%E7%A7%91%E7%A0%94%E5%88%B6%E5%9B%BE/">科研制图</category></item><item><title>向量范数与矩阵范数</title><link>https://matnoble.me/math/linear-algebra/vector-and-matrix-norm/</link><guid isPermaLink="true">https://matnoble.me/math/linear-algebra/vector-and-matrix-norm/</guid><pubDate>Thu, 19 Mar 2020 00:13:23 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h2 id="向量范数">向量范数&lt;/h2>
&lt;blockquote>
&lt;p>&lt;strong>范数(模)&lt;/strong>(英语：norm), 是具有「长度」概念的函数. 在线性代数、泛函分析及相关的数学领域, 是一个函数, 其为..向量空间..内的所有向量赋予非零的正长度或大小.&lt;/p>
&lt;footer>
&lt;strong>&lt;/strong>
&lt;cite>
&lt;a href="https://zh.wikipedia.org/wiki/%E8%8C%83%E6%95%B0" title="https://zh.wikipedia.org/wiki/%E8%8C%83%E6%95%B0">zh.wikipedia.org/wiki/...&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
&lt;p>假设 $V$ 是数域 $F$ 上的向量空间, $V$ 的范数是一个函数 $p:V \to \mathbb{R}$, 对于 $\forall a \in F, \forall \, \mathrm{u}, \mathrm{v} \in V$, 满足&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>&lt;strong>正定性&lt;/strong>: $p(\mathrm{v}) \geq 0$, 当且仅当 $\mathrm{v}=0$ 时, $p(\mathrm{v})=0$&lt;/li>
&lt;li>&lt;strong>齐次性&lt;/strong>: $p(a\mathrm{v}) = |a|p(\mathrm{v})$&lt;/li>
&lt;li>&lt;strong>三角不等式&lt;/strong>: $p(\mathrm{u}+\mathrm{v}) \leq p(\mathrm{u}) + p(\mathrm{v})$&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;h3 id="p-范数">$p-$范数&lt;/h3>
&lt;p>对于向量 &lt;span>$\mathrm{x} = [x_1, x_2, \ldots, x_n]$&lt;/span>, 定义 &lt;span>$p-$&lt;/span> 范数为&lt;/p>
&lt;div>
\begin{equation}
\displaystyle
\lVert \mathrm{x} \rVert_p := \biggl( \sum_{i=1}^n |x_i|^p \biggr)^{1/p}
\label{eq:eqp}
\end{equation}
&lt;/div>
&lt;p>其中 $p \in [1, +\infty)$.&lt;/p>
&lt;p>范数在几何意义下, 可以看作是「距离」. 以 $2$ 维平面为例, 在式 (\ref{eq:eqp}) 定义的距离下, 分别取 $p = 0.25, 0.5, 1, 2, 4$, 画以原点为圆心的“单位圆” (unit ball)&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># python3&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">numpy&lt;/span> &lt;span class="kn">as&lt;/span> &lt;span class="nn">np&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">matplotlib.pyplot&lt;/span> &lt;span class="kn">as&lt;/span> &lt;span class="nn">plt&lt;/span>
&lt;span class="n">fig&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">figure&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dpi&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">150&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="n">linestyle&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;b-&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;k-&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;m-&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;r-&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;y-&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">p_values&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mf">0.25&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">p&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">enumerate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p_values&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">arange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mf">1e-5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mf">360.0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="n">p&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">1.0&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">zip&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">linestyle&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="n">axs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">gca&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">axs&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set_aspect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;equal&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;box&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">savefig&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;images/norm.svg&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">bbox_inches&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;tight&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://cdn.jsdelivr.net/gh/MatNoble/Images/norm.svg"
title="$\lVert \mathrm{x} \rVert_p = 1$, p = 0.25, 0.5, 1, 2, 4"
alt="$\lVert \mathrm{x} \rVert_p = 1$, p = 0.25, 0.5, 1, 2, 4"
width="60%"
>
&lt;span class="caption">◎ $\lVert \mathrm{x} \rVert_p = 1$, p = 0.25, 0.5, 1, 2, 4&lt;/span>
&lt;/span>
&lt;br>
&lt;p>不同的 $p$ 值, “单位球”的形状是不一样的. $p$ 值越大, 越往外扩. 当 $p\geq 1$ 时, 图形都是凸集. $p&amp;lt;1$ 则不是凸集, 此时不满足「三角不等式」&lt;sup id="fnref:1">&lt;a href="https://matnoble.me/math/linear-algebra/vector-and-matrix-norm/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;p>&lt;br />&lt;/p>
&lt;p>&lt;strong>常用 $p-$范数&lt;/strong>&lt;/p>
&lt;p>以式 (\ref{eq:eqp}) 为基础, 最常用的范数有三个&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://matnoble.me/images/norm.svg"
title="Vector Norm"
alt="Vector Norm"
width="95%"
>
&lt;span class="caption">◎ Vector Norm&lt;/span>
&lt;/span>
&lt;ul>
&lt;li>$1-$范数&lt;br>
取 $p = 1$
\begin{equation}
\displaystyle
\lVert \mathrm{x} \rVert_1 = \sum_{i=1}^n |x_i|
\end{equation}
也叫绝对值范数.&lt;/li>
&lt;li>$2-$范数&lt;br>
取 $p = 2$
\begin{equation}
\displaystyle
\lVert \mathrm{x} \rVert_2 = \sqrt{\sum_{i=1}^n |x_i|^2}
\end{equation}
这是最常见的欧几里德范数, 也叫作 $L^2$ 范数. 写成矩阵的形式: $\lVert \mathrm{x} \rVert_2 = \sqrt{\mathrm{x}^{\mathsf T}\mathrm{x}}$&lt;/li>
&lt;li>$\infty-$范数&lt;br>
令 $p = +\infty$ 并取极限
\begin{equation}
\displaystyle
\lVert \mathrm{x} \rVert_{\infty} = \max |x_i|
\end{equation}&lt;/li>
&lt;/ul>
&lt;style type="text/css">.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:"Font Awesome 5 Free",FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:'\f071'}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:'\f05a'}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:'\f06a'}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:'\f058'}.notice.tip{background:#e6f9e6}&lt;/style>&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>取 $\mathrm{v} = [1, 2, 3]^\mathsf{T}$, 计算向量$p-$范数并填入下表&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">名称&lt;/th>
&lt;th style="text-align:center">符号&lt;/th>
&lt;th style="text-align:center">取值&lt;/th>
&lt;th style="text-align:center">近似值&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">$L^1$ norm&lt;/td>
&lt;td style="text-align:center">$\lVert \mathrm{v} \rVert_1$&lt;/td>
&lt;td style="text-align:center">$6$&lt;/td>
&lt;td style="text-align:center">$6.000$&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$L^2$ norm&lt;/td>
&lt;td style="text-align:center">$\lVert \mathrm{v} \rVert_2$&lt;/td>
&lt;td style="text-align:center">$\sqrt{14}$&lt;/td>
&lt;td style="text-align:center">$3.742$&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$L^3$ norm&lt;/td>
&lt;td style="text-align:center">$\lVert \mathrm{v} \rVert_3$&lt;/td>
&lt;td style="text-align:center">$6^{2/3}$&lt;/td>
&lt;td style="text-align:center">$3.302$&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$L^4$ norm&lt;/td>
&lt;td style="text-align:center">$\lVert \mathrm{v} \rVert_4$&lt;/td>
&lt;td style="text-align:center">$2^{1/4}\sqrt{7}$&lt;/td>
&lt;td style="text-align:center">$3.146$&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$L^{\infty}$ norm&lt;/td>
&lt;td style="text-align:center">$\lVert \mathrm{v} \rVert_{\infty}$&lt;/td>
&lt;td style="text-align:center">$3$&lt;/td>
&lt;td style="text-align:center">$3.000$&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>可以看出, 向量 $p-$范数随着 $p$ 值的增加而减小&lt;/p>&lt;/div>
&lt;h3 id="boldsymbols-范数">$\boldsymbol{S}-$范数&lt;/h3>
&lt;div>
\begin{equation}
\displaystyle
\lVert \mathrm{v} \rVert_{\boldsymbol{S}} = \sqrt{\mathrm{v}^\mathsf{T} \boldsymbol{S} \mathrm{v}}
\end{equation}
&lt;/div>
&lt;p>$\boldsymbol{S}$ 是对称正定矩阵.&lt;/p>
&lt;p>考虑 $\mathrm{v} \in \mathbb{R}^2$ 并假设 &lt;span>$\boldsymbol{S} = \bigl[\begin{smallmatrix} 1/4 &amp;amp; 0 \\ 0 &amp;amp; 1/9 \end{smallmatrix}\bigr]$&lt;/span>&lt;/p>
&lt;div>
$$
\lVert \mathrm{v} \rVert_{\boldsymbol{S}} = [v_1, v_2] \begin{bmatrix} 1/4 &amp; 0 \\ 0 &amp; 1/9 \end{bmatrix} \begin{bmatrix} v_1 \\v_2 \end{bmatrix} = \frac{v_1^2}{4} + \frac{v_2^2}{9} = 1
$$
&lt;/div>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://matnoble.me/images/norm_ellipse.svg"
title="unit ellipsoid"
alt="unit ellipsoid"
width="40%"
>
&lt;span class="caption">◎ unit ellipsoid&lt;/span>
&lt;/span>
&lt;h3 id="最小逼近问题">最小逼近问题&lt;/h3>
&lt;p>$$
\displaystyle
\min_{\mathrm{x}} \lVert \boldsymbol{A}\mathrm{x} - \mathrm{b} \rVert_p
$$&lt;/p>
&lt;p>不同的 $p$ 值, 对应不同的最小逼近问题. 当 $p=2$ 时, 是熟悉的&lt;a href="https://matnoble.me/math/linear-algebra/matrixleastsquares/#%E7%90%86%E8%A7%A3%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84">最小二乘问题&lt;/a>.&lt;sup id="fnref:2">&lt;a href="https://matnoble.me/math/linear-algebra/vector-and-matrix-norm/#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;/p>
&lt;p>二维情况下, 设 $\boldsymbol{A}=[2, 3], \mathrm{x} = [x, y]^{\mathsf{T}}, b=2$. 则&lt;/p>
&lt;p>$$
\displaystyle
\min_{\mathrm{x}} \lVert \boldsymbol{A}\mathrm{x} - \mathrm{b} \rVert_p = \min_{\mathrm{x}} \lVert 2x + 3y -2 \rVert_p
$$&lt;/p>
&lt;p>在 $L^1, L^2, L^{\infty}$ 下解是不同的.&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://matnoble.me/images/leastsquare.svg"
title="最小逼近"
alt="最小逼近"
width="95%"
>
&lt;span class="caption">◎ 最小逼近&lt;/span>
&lt;/span>
&lt;hr />
&lt;h2 id="矩阵范数">矩阵范数&lt;/h2>
&lt;p>那么矩阵 $\boldsymbol{A}$ 的..大小..应如何来..度量..呢?&lt;/p>
&lt;h3 id="f-范数">F 范数&lt;/h3>
&lt;p>因为矩阵是由列(行)向量组成, 所以仿照向量范数, 首先可以定义度量「矩阵长度」的 Frobenius 范数, 简称 F 范数, 记为 $\lVert \boldsymbol{A} \rVert_F$. 假设 $\boldsymbol{A}$ 是 $m\times n$ 阶矩阵, 则 Frobenius 范数定义为:&lt;/p>
&lt;div>
$$
\begin{aligned}
\lVert \boldsymbol{A} \rVert_F &amp;= \sqrt{\lVert \mathrm{\alpha_1} \rVert^2 + \cdots + \lVert \mathrm{\alpha_n} \rVert^2} \\[3pt]
&amp; = \sqrt{\sum_{i=1}^m |a_{i1}|^2 + \cdots + \sum_{i=1}^m |a_{in}|^2} \\[3pt]
&amp; = \sqrt{\sum_{j=1}^n\sum_{i=1}^m |a_{ij}|^2} = \sqrt{\mathrm{trace}(\boldsymbol{A}^{\mathsf T}\boldsymbol{A})}
\end{aligned}
$$
&lt;div>
&lt;p>另外, F 范数还和奇异值有关系. 如果已知秩为 $r$ 的矩阵 $\boldsymbol{A}$ 及其奇异值, &lt;span>$\sigma_1 \geq \cdots \geq \sigma_r &amp;gt; 0$, $\sigma_{r+1} = \cdots = \sigma_p = 0, p = \min\{m, n\}$&lt;/span>, 那么&lt;/p>
&lt;p>\begin{equation}
\lVert \boldsymbol{A} \rVert_F = \sqrt{\sum_{i=1}^r \sigma_i^2}
\label{eq:eqf}
\end{equation}&lt;/p>
&lt;p>&lt;strong>证明:&lt;/strong>&lt;/p>
&lt;p>首先假设 $\boldsymbol{Q}$ 是正交矩阵, 那么成立&lt;/p>
&lt;div>
$$
\begin{cases}
\lVert \boldsymbol{Q} \boldsymbol{A} \rVert_F^2 = \mathrm{trace}\bigl((\boldsymbol{Q} \boldsymbol{A})^\mathsf{T}\boldsymbol{Q} \boldsymbol{A}\bigr) = \mathrm{trace}\bigl(\boldsymbol{A}^\mathsf{T} \boldsymbol{Q}^\mathsf{T} \boldsymbol{Q} \boldsymbol{A}\bigr) = \mathrm{trace}(\boldsymbol{A}^{\mathsf T}\boldsymbol{A}) = \lVert \boldsymbol{A} \rVert_F^2
\\[3pt]
\lVert \boldsymbol{A} \boldsymbol{Q} \rVert_F^2 = \mathrm{trace}\bigl(\boldsymbol{A} \boldsymbol{Q} (\boldsymbol{A} \boldsymbol{Q})^\mathsf{T}\bigr) = \mathrm{trace}\bigl(\boldsymbol{A} \boldsymbol{Q} \boldsymbol{Q}^\mathsf{T}\boldsymbol{A}^\mathsf{T} \bigr) = \mathrm{trace}(\boldsymbol{A}\boldsymbol{A}^\mathsf{T}) = \lVert \boldsymbol{A} \rVert_F^2
\end{cases}
$$
&lt;div>
&lt;p>即矩阵范数有「正交不变性」&lt;/p>
&lt;p>所以针对矩阵的奇异值分解 $\boldsymbol{A} = \boldsymbol{U}\boldsymbol{\Sigma}\boldsymbol{V}^{\mathsf T}$, 成立&lt;/p>
&lt;p>$$
\lVert \boldsymbol{A} \rVert_F = \lVert \boldsymbol{\Sigma} \rVert_F = \sqrt{\sum_{i=1}^r \sigma_i^2}
$$&lt;/p>
&lt;p style="text-align: right">
$\blacksquare$
&lt;/p>
&lt;h3 id="矩阵范数的性质">矩阵范数的性质&lt;/h3>
&lt;p>首先, 矩阵是多维向量, 所以容易验证, 矩阵范数同样满足: &lt;strong>正定性, 齐次性, 三角不等式&lt;/strong>&lt;/p>
&lt;p>正因为矩阵是增加了维度的向量, 所以还有向量所没有的性质 --- 矩阵可以表示「线性变换」在维度合适(可乘)时, 矩阵可以乘向量 $\boldsymbol{A}\mathrm{x}$, 得到的..像.. $\boldsymbol{A}\mathrm{x}$ 与..原像.. $\mathrm{x}$ 有如下关系&lt;/p>
&lt;div>
$$
\displaystyle
\begin{aligned}
\lVert \boldsymbol{A}\mathrm{x} \rVert^2 &amp; = \lVert x_1 \alpha_1 + \cdots + x_n \alpha_n \rVert^2
\\[3pt]
&amp; \leq \bigl( \lVert x_1 \alpha_1 \rVert + \cdots + \lVert x_n \alpha_n \bigr)^2
\\[3pt]
&amp; = \bigl(|x_1| \cdot \lVert \alpha_1 \rVert + \cdots + |x_n| \cdot \lVert \alpha_n\bigr)^2
\end{aligned}
$$
&lt;/div>
&lt;p>利用 &lt;a href="https://matnoble.me/math/fem/inequality/#cauchy-inequality-for-scalar-product">Cauchy 不等式&lt;/a>, 可得&lt;/p>
&lt;div>
$$
\displaystyle
\begin{aligned}
\bigl(|x_1| \cdot \lVert \alpha_1 \rVert + \cdots + |x_n| \cdot \lVert \alpha_n\bigr)^2 &amp; \leq (\lVert \alpha_1 \rVert^2 + \cdots + \lVert \alpha_n \rVert^2)(|x_1|^2 + \cdots + |x_n|^2)
\\[3pt]
&amp; = \lVert \boldsymbol{A} \rVert_F^2 \lVert \mathrm{x} \rVert^2
\end{aligned}
$$
&lt;/div>
&lt;p>即 $\lVert \boldsymbol{A}\mathrm{x} \rVert\leq \lVert \boldsymbol{A} \rVert_F \lVert \mathrm{x} \rVert$. 若将向量 $\mathrm{x}$ 换作 $n\times p$ 阶矩阵 $\boldsymbol{B}$，情况又如何呢?&lt;/p>
&lt;div>
$$
\displaystyle
\begin{aligned}
\lVert \boldsymbol{A}\boldsymbol{B} \rVert_F^2 &amp; = \bigl\lVert \bigl[ \boldsymbol{A} \beta_1 \cdots \boldsymbol{A} \beta_p \bigr] \bigr\rVert_F^2
\\[3pt]
&amp; = \lVert \boldsymbol{A} \beta_1 \rVert_F^2 + \cdots + \lVert \boldsymbol{A} \beta_p \rVert_F^2
\\[3pt]
&amp; \leq \lVert \boldsymbol{A} \rVert_F^2 \lVert \beta_1 \rVert^2 + \cdots + \lVert \boldsymbol{A} \rVert_F^2 \lVert \beta_p \rVert^2
\\[3pt]
&amp; = \lVert \boldsymbol{A} \rVert_F^2 ( \lVert \beta_1 \rVert^2 + \cdots + \lVert \beta_p \rVert^2)
\\[3pt]
&amp; = \lVert \boldsymbol{A} \rVert_F^2\lVert \boldsymbol{B} \rVert_F^2
\end{aligned}
$$
&lt;/div>
&lt;p>即 $\lVert \boldsymbol{A}\boldsymbol{B} \rVert_F \leq \lVert \boldsymbol{A} \rVert_F \lVert \boldsymbol{B} \rVert_F$. 综合之前的 3 条性质, 可总结为&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>矩阵范数的性质&lt;/strong>&lt;br>&lt;/p>
&lt;ul>
&lt;li>$\lVert \boldsymbol{A} \rVert \geq 0$, 当且仅当 $A=0$ 等号成立.&lt;br>&lt;/li>
&lt;li>$\lVert c\boldsymbol{A} \rVert = |c|\lVert \boldsymbol{A} \rVert $&lt;/li>
&lt;li>$\lVert \boldsymbol{A} + \boldsymbol{B} \rVert \leq \lVert \boldsymbol{A} \rVert + \lVert \boldsymbol{B} \rVert $&lt;/li>
&lt;li>$\lVert \boldsymbol{A}\boldsymbol{B} \rVert \leq \lVert \boldsymbol{A} \rVert \lVert \boldsymbol{B} \rVert$&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>与向量范数相同, 矩阵范数也不唯一. 甚至利用性质 4, 可以导出更重要的范数.&lt;/p>
&lt;h3 id="矩阵-2-范数">矩阵 $2-$范数&lt;/h3>
&lt;p>当矩阵 $\boldsymbol{B}$ 退化为向量 $\mathrm{x}$ 时, $\lVert \boldsymbol{A}\mathrm{x} \rVert\leq \lVert \boldsymbol{A} \rVert \lVert \mathrm{x} \rVert$
, 如果 $\mathrm{x} \neq 0$, 就有&lt;/p>
&lt;p>\begin{equation}
\displaystyle
\lVert \boldsymbol{A} \rVert \geq \frac{\lVert \boldsymbol{A}\mathrm{x} \rVert}{\lVert \mathrm{x} \rVert}
\label{eq:eq20}
\end{equation}&lt;/p>
&lt;p>当式 (\ref{eq:eq20}) 右端取向量 $2-$范数时, 可以定义矩阵 $2-$范数&lt;/p>
&lt;p>\begin{equation}
\displaystyle
\lVert \boldsymbol{A} \rVert_2 = \max_{x\neq 0} \frac{\lVert \boldsymbol{A}\mathrm{x} \rVert_2}{\lVert \mathrm{x} \rVert_2}
\label{eq:eqm2}
\end{equation}&lt;/p>
&lt;p>因为是由向量的欧氏距离所决定, 所以对应地称为矩阵的 $2-$范数. 其几何意义是: 限制了原像的「伸缩」&lt;/p>
&lt;p>&lt;strong>那如何计算$\lVert \boldsymbol{A} \rVert_2$ ?&lt;/strong>&lt;/p>
&lt;p>将式 (\ref{eq:eqm2}) 平方&lt;/p>
&lt;div>
$$
\displaystyle
\begin{aligned}
\lVert \boldsymbol{A} \rVert_2^2 = \max_{x\neq 0} \frac{\lVert \boldsymbol{A}\mathrm{x} \rVert_2^2}{\lVert \mathrm{x} \rVert_2^2} &amp; = \max_{x\neq 0} \frac{\mathrm{x}^{\mathsf{T}}\boldsymbol{A}^{\mathsf{T}}\boldsymbol{A}\mathrm{x}}{\lVert \mathrm{x} \rVert_2^2}
\\[3pt]
&amp; = \max_{x\neq 0} \biggl(\frac{\mathrm{x}}{\lVert \mathrm{x} \rVert_2}\biggr)^{\mathsf{T}} \boldsymbol{A}^{\mathsf{T}}\boldsymbol{A} \frac{\mathrm{x}}{\lVert \mathrm{x} \rVert_2}
\\[3pt]
&amp; = \max_{||\mathrm{y}||_2 = 1} \mathrm{y}^{\mathsf{T}} \boldsymbol{A}^{\mathsf{T}}\boldsymbol{A} \mathrm{y}
\\[3pt]
&amp; = \max_{||\mathrm{x}||_2 = 1} \lVert \boldsymbol{A}\mathrm{x} \rVert_2^2
\end{aligned}
$$
&lt;/div>
&lt;p>即
$$
\lVert \boldsymbol{A} \rVert_2 = \max_{||\mathrm{x}||_2 = 1} \sqrt{ \mathrm{x}^{\mathsf{T}} \boldsymbol{A}^{\mathsf{T}}\boldsymbol{A} \mathrm{x}} = \max_{||\mathrm{x}||_2 = 1} \lVert \boldsymbol{A}\mathrm{x} \rVert_2
$$&lt;/p>
&lt;p>考虑 Gram 矩阵 $\boldsymbol{A}^{\mathsf{T}}\boldsymbol{A}$ 可正交对角化&lt;/p>
&lt;p>$$
\boldsymbol{A}^{\mathsf{T}}\boldsymbol{A} = \boldsymbol{V} \boldsymbol{\Lambda} \boldsymbol{V}^\mathsf{T}
$$&lt;/p>
&lt;p>其中 $\boldsymbol{V}$ 是正交矩阵. 所以&lt;/p>
&lt;p>$$
\mathrm{x}^{\mathsf{T}} \boldsymbol{A}^{\mathsf{T}}\boldsymbol{A} \mathrm{x} = \mathrm{x}^{\mathsf{T}} \boldsymbol{V}\boldsymbol{\Lambda} \boldsymbol{V}^\mathsf{T} \mathrm{x} = \mathrm{z}^\mathsf{T} \boldsymbol{\Lambda} \mathrm{z}
$$&lt;/p>
&lt;p>其中 $\mathrm{z}=\boldsymbol{V}^{\mathsf{T}}\mathrm{x}$, 并且满足&lt;/p>
&lt;p>$$
\lVert \mathrm{z} \rVert^2 = \mathrm{z}^{\mathsf{T}}\mathrm{z} = \mathrm{x}^{\mathsf{T}} \boldsymbol{V} \boldsymbol{V}^\mathsf{T} \mathrm{x} = \mathrm{x}^{\mathsf{T}}\mathrm{x} = \lVert \mathrm{x} \rVert^2
$$&lt;/p>
&lt;p>所以
$$
\lVert \boldsymbol{A} \rVert_2^2 = \max_{||\mathrm{x}||_2 = 1} \mathrm{x}^{\mathsf{T}} \boldsymbol{A}^{\mathsf{T}}\boldsymbol{A} \mathrm{x} = \max_{||\mathrm{z}||_2 = 1} \mathrm{z}^\mathsf{T} \boldsymbol{\Lambda} \mathrm{z}
$$&lt;/p>
&lt;p>而当 $||\mathrm{z}||&lt;em>2 = 1$ 时
$$
\mathrm{z}^\mathsf{T} \boldsymbol{\Lambda} \mathrm{z} = \lambda_1z_1^2 + \cdots + \lambda_n z_n^2 \leq \lambda&lt;/em>{\max}(z_1^2 + \cdots + z_n^2) = \lambda_{\max}
$$&lt;/p>
&lt;p>所以
\begin{equation}
\lVert \boldsymbol{A} \rVert_2 = \max_{||\mathrm{z}||_2 = 1} \sqrt{\mathrm{z}^\mathsf{T} \boldsymbol{\Lambda} \mathrm{z}} = \sqrt{\lambda_{\max}} = \sigma_1
\label{eq:eqm21}
\end{equation}
其中, $\sigma_1$ 为矩阵 $\boldsymbol{A}$ 的最大奇异值. 此时, 可以看出 $\lVert \boldsymbol{A} \rVert_2$ 与 $\lVert \boldsymbol{A} \rVert_F$ 式 (\ref{eq:eqf}) 的不同.&lt;/p>
&lt;h3 id="其他矩阵范数">其他矩阵范数&lt;/h3>
&lt;p>将不同的向量范数代入式 (\ref{eq:eq20}), 得到相应的矩阵范数.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>矩阵 $1-$范数&lt;br>
$$
\displaystyle \Vert \boldsymbol{A} \Vert_1=\max_{\Vert\mathrm{x}\Vert_1=1}\Vert \boldsymbol{A} \mathrm{x}\Vert_1
$$
对任一 $\mathrm{x}$, $\Vert \mathrm{x} \Vert_1=\sum_{j=1}^n\vert x_j\vert=1$&lt;br>
$$
\displaystyle
\begin{aligned} \Vert \boldsymbol{A} \mathrm{x}\Vert_1 &amp;amp;=\sum_{i=1}^n\biggl\vert\sum_{j=1}^n a_{ij}x_j\biggr\vert \leq \sum_{i=1}^n\sum_{j=1}^n\vert a_{ij}\vert\cdot\vert x_j\vert \\[3pt]
&amp;amp;=\sum_{j=1}^n\left( \vert x_j\vert\sum_{i=1}^n\vert a_{ij}\vert\right)\le\left(\sum_{j=1}^n\vert x_j\vert\right)\left( \max_{1\le j\le n}\sum_{i=1}^n\vert a_{ij}\vert\right) \\[3pt]
&amp;amp;=\max_{1\le j\le n}\sum_{i =1}^n\vert a_{ij}\vert
\end{aligned}
$$
即矩阵的 $1-$范数为..最大列和..&lt;/p>
&lt;/li>
&lt;li>
&lt;p>矩阵 $\infty-$范数&lt;br>
$$
\displaystyle \Vert \boldsymbol{A} \Vert_{\infty}=\max_{\Vert\mathrm{x}\Vert_{\infty}=1}\Vert \boldsymbol{A} \mathrm{x}\Vert_{\infty}
$$
对任一 $\mathrm{x}$, $\Vert \mathrm{x} \Vert_{\infty}=\max_j \vert x_j \vert=1$&lt;br>
$$
\displaystyle \Vert \boldsymbol{A} \mathrm{x}\Vert_{\infty}=\max_{1\le i\le n}\biggl\vert\sum_{j=1}^na_{ij}x_j\biggr\vert \le \max_{1\le i \le n}\sum_{j=1}^n\vert a_{ij}\vert\cdot\vert x_j\vert\le\max_{1\le i\le n} \sum_{j=1}^n\vert a_{ij}\vert
$$
即矩阵的无穷范数为..最大行和..&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>参考:&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://mathworld.wolfram.com/VectorNorm.html">https://mathworld.wolfram.com/VectorNorm.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mathworld.wolfram.com/MatrixNorm.html">https://mathworld.wolfram.com/MatrixNorm.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Matrix_norm">https://en.wikipedia.org/wiki/Matrix_norm&lt;/a>&lt;/li>
&lt;/ol>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>取 $\mathrm{u}=[0, 1]^\mathsf{T}, \mathrm{v}=[1, 0]^\mathsf{T}$, 则
$$
\begin{aligned}
\lVert u + v \rVert_p &amp;amp; = (1^p + 1^p)^{1/p} = 2^{1/p}
\\[3pt]
\lVert u \rVert_p + \lVert v \rVert_p &amp;amp; = (1^p)^{1/p} + (1^p)^{1/p} = 2
\end{aligned}
$$
当 $p&amp;lt;1$ 时, 不满足三角不等式. &lt;a href="https://matnoble.me/math/linear-algebra/vector-and-matrix-norm/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>简述有限元中逼近向量用的也是 $L^2$ norm. &lt;br> &lt;a href="https://matnoble.me/math/fem/fem1/#%E6%9C%80%E5%B0%8F%E4%BA%8C%E4%B9%98%E6%B3%95-1">https://matnoble.me/math/fem/fem1/#%E6%9C%80%E5%B0%8F%E4%BA%8C%E4%B9%98%E6%B3%95-1&lt;/a> &lt;a href="https://matnoble.me/math/linear-algebra/vector-and-matrix-norm/#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description><category domain="https://matnoble.me/math/">math</category><category domain="https://matnoble.me/math/linear-algebra/">Linear-Algebra</category><category domain="https://matnoble.me/series/mla/">线代拾遗</category><category domain="https://matnoble.me/tags/">标签云</category></item><item><title>Inequality</title><link>https://matnoble.me/math/fem/inequality/</link><guid isPermaLink="true">https://matnoble.me/math/fem/inequality/</guid><pubDate>Tue, 17 Mar 2020 00:21:47 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h2 id="cauchy-inequality">Cauchy inequality&lt;/h2>
&lt;p>Let $a, b$ are any real numbers, then&lt;/p>
&lt;p>\begin{equation}
\label{eq:eqc}
ab \leq \frac{1}{2}(a^{2} + b^{2}),\quad (Cauchy\ inequality)
\end{equation}&lt;/p>
&lt;p>\begin{equation}
\label{eq:eqce}
ab \leq \epsilon a^{2} + \frac{b^{2}}{4\epsilon},\,\forall \epsilon &amp;gt; 0,\quad (Cauchy\ inequality\ with\ epsilon)
\end{equation}&lt;/p>
&lt;p>&lt;strong>Proof.&lt;/strong>&lt;/p>
&lt;p>$$
(a-b)^{2} \geq 0 \Rightarrow ab \leq\frac{1}{2}(a^{2} + b^{2}).
$$&lt;/p>
&lt;p>Constant deformation with $\epsilon$&lt;/p>
&lt;p>$$
\begin{aligned}
ab &amp;amp;= ((2\epsilon)^{\frac{1}{2}}a)\bigg(\frac{b}{(2\epsilon)^{\frac{1}{2}}}\bigg) \\[3pt]
&amp;amp;\leq \frac{1}{2} \biggl[((2\epsilon)^{\frac{1}{2}}a)^2 + \bigg(\frac{b}{(2\epsilon)^{\frac{1}{2}}}\biggl)^2 \biggl] \\[3pt]
&amp;amp;= \frac{1}{2} \biggl(2\epsilon a^{2} + \frac{b^{2}}{2\epsilon}\biggr) \\[3pt]
&amp;amp;= \epsilon a^{2} + \frac{b^{2}}{4\epsilon}.
\end{aligned}
$$&lt;/p>
&lt;p style="text-align: right">
$\blacksquare$
&lt;/p>
&lt;h3 id="cauchy-inequality-for-scalar-product">Cauchy inequality for scalar product&lt;/h3>
&lt;p>Let $\lVert \mathbf{x} \rVert^2 = \sum_{k=1}^n \lvert x \rvert^2$, $\langle \mathbf{x}, \mathbf{y} \rangle = \sum_{k=1}^n x_k \bar{y}_k$, which $\mathbf{x} = \{ x_k \}_{k=1,\ldots,n}, \mathbf{y} = \{ y_k \}_{k=1,\ldots,n}$ then&lt;/p>
&lt;p>\begin{equation}
\langle \mathbf{x}, \mathbf{y} \rangle \leq \lVert \mathbf{x} \rVert \lVert \mathbf{y} \rVert
\end{equation}&lt;/p>
&lt;p>&lt;strong>Proof.&lt;/strong> We have
$$
f(\lambda) = \lVert \mathbf{x} + \lambda\mathbf{y}\rVert^2 \geq 0, \quad \forall \lambda \in \mathbb{R}
$$
Thus the quadratic function
$$
f(\lambda) = \lVert \mathbf{y} \rVert^2 \lambda^2 + 2\langle \mathbf{x}, \mathbf{y} \rangle \lambda + \lVert \mathbf{x} \rVert^2 \geq 0
$$
According to &lt;em>the discriminant of the quadratic polynomial&lt;/em>
$$
\langle \mathbf{x}, \mathbf{y} \rangle ^2 \leq \lVert \mathbf{x} \rVert^2 \lVert \mathbf{y} \rVert^2
$$&lt;/p>
&lt;p style="text-align: right">
$\blacksquare$
&lt;/p>
&lt;h2 id="youngs-inequality">Young's inequality&lt;/h2>
&lt;p>For $a, b \geq 0$ and $p,q \geq 1$ such that $ \frac{1}{p} + \frac{1}{q} = 1$, then&lt;/p>
&lt;p>\begin{equation}
\label{eq:eqy}
ab \leq \frac{a^{p}}{p} + \frac{b^{q}}{q}. \quad (Young\ inequality)
\end{equation}&lt;/p>
&lt;p>&lt;strong>Proof.&lt;/strong> The function $x \mapsto e^x$ is convex. This means that for $x, y\in \mathbb{R}$ and $0\leq \theta \leq 1$&lt;/p>
&lt;p>$$
\mbox{exp}(\theta x + (1-\theta)y) \leq \theta\mbox{exp}(x) + (1-\theta)\mbox{exp}(y)
$$&lt;/p>
&lt;p>When $a$ or $b$ are zero the inequality is trivial. Otherwise, the theorem is just this inequality with&lt;/p>
&lt;p>$$
x:= p \ln a \quad y:= q \ln b \quad \theta = \frac{1}{p}
$$&lt;/p>
&lt;p style="text-align: right">
$\blacksquare$
&lt;/p>
&lt;h3 id="general-youngs-inequality">General Young’s inequality&lt;/h3>
&lt;p>Let $c&amp;gt;0$ and $f:[0, c] \to \mathbb{R}$ be a strictly increasing continuous function such that $f(0)=0$. Let $a\in [0, c]$ and $b\in [0, f(c)]$. Then&lt;/p>
&lt;p>\begin{equation}
ab \leq \int_0^a f(x) \, \mathrm{d}x + \int_0^b f^{-1}(x) \, \mathrm{d}x
\label{eq:eqy2}
\end{equation}&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/a41e796b-adbb-44a7-adbe-3da2bb474641.svg"
title="Figure 1"
alt="Figure 1"
width="95%"
>
&lt;span class="caption">◎ Figure 1&lt;/span>
&lt;/span>
&lt;p>(\ref{eq:eqy2}) can be understood with the figure 1.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Lemma&lt;/strong> Let $c&amp;gt;0$. For a strictly increasing continuous function $f:[0, c]\to \mathbb{R}$ and $b\in [0, f(c)]$, we have that
$$
bf^{-1}(b) = \int_0^b f^{-1}(x) \, \mathrm{d}x + \int_0^{f^{-1}(b)} f(x) \, \mathrm{d}x
$$
&lt;strong>Proof.&lt;/strong> It is enough to prove it when $f$ is $C^1$, as then a continuous $f$ can be uniformly approximated by strictly increasing $C^1$ functions while $f ^{−1}$ is also uniformly approximated. It is also enough to prove it when $f(a) \geq b$, as otherwise we can just interchange both $f, f^{−1}$ and $a, b$.&lt;/p>
&lt;p>To prove it in this case we can change variables in the integral $\int_0^b\ f^{−1}(x)\, \mathrm{d}x$ by putting $x = f(y)$, and then integrate by parts:
$$
\int_0^b f^{-1}(x) \, \mathrm{d}x = \int_0^{f^{-1}(b)} yf'(y) \, \mathrm{d}y = bf^{-1}(b) - \int_0^{f^{-1}(b)} f(x) \, \mathrm{d}x
$$&lt;/p>
&lt;p style="text-align: right"> $\blacksquare$ &lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Proof.&lt;/strong> Use (\ref{eq:eqy2}), and $f(a)\geq b$, we get&lt;/p>
&lt;p>$$
\begin{aligned}
ab &amp;amp; = bf^{-1}(b) + b(a-f^{-1}(b)) \\[3pt]
&amp;amp; = \int_0^b f^{-1}(x) \, \mathrm{d}x + \int_0^{f^{-1}(b)} f(x) \, \mathrm{d}x + b(a-f^{-1}(b)) \\[3pt]
&amp;amp; \leq \int_0^b f^{-1}(x) \, \mathrm{d}x + \int_0^{f^{-1}(b)} f(x) \, \mathrm{d}x + \int_{f^{-1}(b)}^a f(x) \, \mathrm{d}x \\[3pt]
&amp;amp; = \int_0^b f^{-1}(x) \, \mathrm{d}x + \int_0^a f(x) \, \mathrm{d}x
\end{aligned}
$$&lt;/p>
&lt;p>While $f(a)\leq b$, the proof process is similar.&lt;/p>
&lt;p style="text-align: right"> $\blacksquare$ &lt;/p>
&lt;h2 id="holder-inequality">Holder inequality&lt;/h2>
&lt;p>Let $p, q$ are real numbers $1\leq p, q\leq \infty$ connected by the relationship $\frac{1}{p} + \frac{1}{q} = 1$ and $u \in L^p, v \in L^q$. then&lt;/p>
&lt;p>\begin{equation}
\int \lvert uv \rvert \,\mathrm{d}x \leq \sqrt[p]{\int \lvert u \rvert \,\mathrm{d}x} \sqrt[q]{\int \lvert v \rvert \,\mathrm{d}x}
\label{eq:eqh}
\end{equation}&lt;/p>
&lt;p>&lt;strong>Proof.&lt;/strong> The formula Young inequality (\ref{eq:eqy}) implies
$$
\int \lvert ab \rvert \,\mathrm{d}x \leq \frac{1}{p} \int \lvert a \rvert^p \,\mathrm{d}x + \frac{1}{q} \int \lvert b \rvert^q \,\mathrm{d}x
$$&lt;/p>
&lt;p>set $a=\frac{|u|}{c_1}, a=\frac{|v|}{c_2}$, where $c_1=\sqrt[p]{\int \lvert u \rvert \,\mathrm{d}x}$ and $\sqrt[q]{\int \lvert v \rvert \,\mathrm{d}x}$, then&lt;/p>
&lt;p>$$
\begin{aligned}
\frac{1}{c_1c_2} \int \lvert uv \rvert \,\mathrm{d}x &amp;amp; \leq \frac{1}{p} \int \Biggl| \frac{|u|}{c_1} \Biggr| ^p \,\mathrm{d}x + \frac{1}{q} \int \Biggl| \frac{|v|}{c_2} \Biggr| ^q \,\mathrm{d}x \\[3pt]
&amp;amp; = \frac{1}{p} + \frac{1}{q} \\[3pt]
&amp;amp; = 1
\end{aligned}
$$
Hence
$$
\int \lvert uv \rvert \,\mathrm{d}x \leq c_1 c_2 = \sqrt[p]{\int \lvert u \rvert \,\mathrm{d}x} \sqrt[q]{\int \lvert v \rvert \,\mathrm{d}x}
$$&lt;/p>
&lt;p style="text-align: right">
$\blacksquare$
&lt;/p></description><category domain="https://matnoble.me/math/">math</category><category domain="https://matnoble.me/math/fem/">fem</category><category domain="https://matnoble.me/tags/">标签云</category></item><item><title>在 Ubuntu 中配置 Python 环境</title><link>https://matnoble.me/tech/ubuntu/configure-python-environment-in-ubuntu/</link><guid isPermaLink="true">https://matnoble.me/tech/ubuntu/configure-python-environment-in-ubuntu/</guid><pubDate>Tue, 17 Mar 2020 00:09:10 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h2 id="安装-python2">安装 Python2&lt;/h2>
&lt;p>自从 Ubuntu 18.04 以来，Python 2 不再是默认的 Python 版本。在最新的 Ubuntu 20.04 中，Python 2 更是被完全抛弃。但是 Python 2 依旧有用，所以需要自行安装&lt;/p>
&lt;ol>
&lt;li>安装 Python2，打开 Terminal 输入&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">$ sudo apt install python2
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>检测安装版本&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">$ python2 -V
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/17/f444145dd9da89e57ff3903845871cac.png"
title="Python 2 version"
alt="Python 2 version"
width="95%"
>
&lt;span class="caption">◎ Python 2 version&lt;/span>
&lt;/span>
&lt;h2 id="切换不同的-python-版本">切换不同的 Python 版本&lt;/h2>
&lt;ol>
&lt;li>检查系统已安装的 Python 版本，打开 Terminal 输入&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">$ ls /usr/bin/python*
/usr/bin/python /usr/bin/python3.6 /usr/bin/python3.8
/usr/bin/python2 /usr/bin/python3.6-config /usr/bin/python3.8-config
/usr/bin/python2.7 /usr/bin/python3.6m /usr/bin/python3-config
/usr/bin/python3 /usr/bin/python3.6m-config /usr/bin/python-mkdebian
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;em>因为我是由 18.04 升级到 20.04，所以还有 Python 3.6 版本&lt;/em>&lt;/p>
&lt;ol start="2">
&lt;li>检测是否已存在 Python 的配置方案&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">$ sudo update-alternatives --list python
update-alternatives: error: no alternatives &lt;span class="k">for&lt;/span> python
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>此时，显示没有配置方案&lt;/p>
&lt;ol start="3">
&lt;li>为 Python2 和 Python3 分别配置&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">$ sudo update-alternatives --install /usr/bin/python python /usr/bin/python2 &lt;span class="m">1&lt;/span>
$ sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 &lt;span class="m">2&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="4">
&lt;li>确认是否配置成功&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">$ sudo update-alternatives --list python
/usr/bin/python2
/usr/bin/python3
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="5">
&lt;li>更改默认 Python 版本&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">$ sudo update-alternatives --config python
有 &lt;span class="m">2&lt;/span> 个候选项可用于替换 python &lt;span class="o">(&lt;/span>提供 /usr/bin/python&lt;span class="o">)&lt;/span>。
选择 路径 优先级 状态
------------------------------------------------------------
&lt;span class="m">0&lt;/span> /usr/bin/python3 &lt;span class="m">2&lt;/span> 自动模式
* &lt;span class="m">1&lt;/span> /usr/bin/python2 &lt;span class="m">1&lt;/span> 手动模式
&lt;span class="m">2&lt;/span> /usr/bin/python3 &lt;span class="m">2&lt;/span> 手动模式
要维持当前值&lt;span class="o">[&lt;/span>*&lt;span class="o">]&lt;/span>请按&amp;lt;回车键&amp;gt;，或者键入选择的编号：1
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果想默认 Python 2 选 &lt;code>1&lt;/code>，想默认 Python 3 选&lt;code>2&lt;/code>&lt;/p>
&lt;ol start="6">
&lt;li>检查当前 Python 默认版本&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>$ python -V
&lt;/code>&lt;/pre>&lt;h2 id="安装-python-包管理器-pip">安装 Python 包管理器 PIP&lt;/h2>
&lt;blockquote>
&lt;p>pip is the package installer for Python. You can use pip to install packages from the Python Package Index and other indexes.&lt;/p>
&lt;footer>
&lt;strong>&lt;/strong>
&lt;cite>
&lt;a href="https://pypi.org/project/pip/" title="https://pypi.org/project/pip/">pypi.org/project/pip/&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
&lt;ol>
&lt;li>分别为 Python 2 和 Python 3 安装&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">% Python 2:
$ sudo apt install python-pip
% Python 3:
$ sudo apt install python3-pip
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>检测是否安装成功&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">$ pip --version
$ pip3 --version
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/17/5f4fa5a26ab2b361dc640ece3134b5e6.png"
title="PIP Version"
alt="PIP Version"
width="95%"
>
&lt;span class="caption">◎ PIP Version&lt;/span>
&lt;/span>
&lt;h3 id="更换源">更换源&lt;/h3>
&lt;p>更新为国内的源，更新更快&lt;/p>
&lt;ol>
&lt;li>打开 Terminal&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">% 进入 .config
$ &lt;span class="nb">cd&lt;/span> .config
% 创建文件夹 pip
$ mkdir pip
% 创建文件 pip.conf
$ touch pip.conf
% 编辑 pip.conf
$ sudo emacs pip.conf
% 填入并保存
&lt;span class="o">[&lt;/span>global&lt;span class="o">]&lt;/span>
index-url &lt;span class="o">=&lt;/span> https://pypi.tuna.tsinghua.edu.cn/simple
trusted-host &lt;span class="o">=&lt;/span> pypi.tuna.tsinghua.edu.cn
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>也可以填入其他源:&lt;/p>
&lt;ul>
&lt;li>阿里云 &lt;a href="http://mirrors.aliyun.com/pypi/simple/">http://mirrors.aliyun.com/pypi/simple/&lt;/a>&lt;/li>
&lt;li>中国科技大学 &lt;a href="https://pypi.mirrors.ustc.edu.cn/simple/">https://pypi.mirrors.ustc.edu.cn/simple/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="更新-pip">更新 PIP&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">% Python &lt;span class="m">2&lt;/span>
$ python2 -m pip install --upgrade pip
% Python &lt;span class="m">3&lt;/span>
$ python3 -m pip install --upgrade pip
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="安装">安装&lt;/h3>
&lt;h4 id="安装常用科学计算包">安装常用科学计算包&lt;/h4>
&lt;blockquote>
&lt;p>NumPy SciPy Pandas Matplotlib&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>安装，打开 Terminal&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">% Python 2:
$ pip install numpy scipy pandas matplotlib
% Python 3:
$ pip3 install numpy scipy pandas matplotlib
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/17/c76f11595ad3eb03f3309062fd855a67.png"
title="NumPy SciPy Pandas Matplotlib"
alt="NumPy SciPy Pandas Matplotlib"
width="95%"
>
&lt;span class="caption">◎ NumPy SciPy Pandas Matplotlib&lt;/span>
&lt;/span>
&lt;ol start="2">
&lt;li>检查安装版本(以 NumPy 为例)&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">$ python -c &lt;span class="s2">&amp;#34;import numpy; print(numpy.__version__)&amp;#34;&lt;/span>
1.16.6
$ python3 -c &lt;span class="s2">&amp;#34;import numpy; print(numpy.__version__)&amp;#34;&lt;/span>
1.18.1
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>更新(以 NumPy 为例)&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">% Python 2:
$ pip install --upgrade numpy
% Python 3:
$ pip3 install --upgrade numpy
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="ipython">IPython&lt;/h4>
&lt;p>&lt;img src="https://ttfou.com/images/2020/03/17/ff2a2704bc153b05dd7532c6b30a7e3c.png" width="60%" />&lt;/p>
&lt;blockquote>
&lt;p>&lt;p>&lt;strong>IPython provides a rich architecture for interactive computing with:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>A powerful interactive shell.&lt;/li>
&lt;li>A kernel for Jupyter.&lt;/li>
&lt;li>Support for interactive data visualization and use of GUI toolkits.&lt;/li>
&lt;li>Flexible, embeddable interpreters to load into your own projects.&lt;/li>
&lt;li>Easy to use, high performance tools for parallel computing.&lt;/li>
&lt;/ul>
&lt;/p>
&lt;footer>
&lt;strong>&lt;/strong>
&lt;cite>
&lt;a href="http://ipython.org/" title="http://ipython.org/">ipython.org/&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">% python &lt;span class="m">3&lt;/span>
$ pip3 install ipython
% or
$ sudo apt install ipython3
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/17/5f8320ded08b503d4375064da04f23d4.png"
title="IPython3 in my desktop"
alt="IPython3 in my desktop"
width="95%"
>
&lt;span class="caption">◎ IPython3 in my desktop&lt;/span>
&lt;/span>
&lt;h4 id="debugs">Debugs&lt;/h4>
&lt;p>如果遇到权限问题，可以尝试在命令后加 &lt;code>--user&lt;/code>&lt;/p>
&lt;h3 id="卸载">卸载&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">$ pip uninstall &amp;lt;package name&amp;gt;
% or
$ pip3 uninstall &amp;lt;package name&amp;gt;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/ubuntu/">Ubuntu</category><category domain="https://matnoble.me/tags/%E5%AE%89%E8%A3%85/">安装</category><category domain="https://matnoble.me/tags/ubuntu-%E8%A3%85%E6%9C%BA%E4%B8%8E%E4%BC%98%E5%8C%96/">Ubuntu 装机与优化</category><category domain="https://matnoble.me/tags/python/">Python</category></item><item><title>「手撕」奇异值分解 SVD</title><link>https://matnoble.me/math/linear-algebra/solve-svd-by-hand/</link><guid isPermaLink="true">https://matnoble.me/math/linear-algebra/solve-svd-by-hand/</guid><pubDate>Mon, 16 Mar 2020 00:14:37 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/16/96e77cead9d0d344b14233bc95153b4e.jpg"
title="SVD"
alt="SVD"
width="95%"
>
&lt;span class="caption">◎ SVD&lt;/span>
&lt;/span>
&lt;p>&lt;br />&lt;/p>
&lt;p>之前大多讨论的是理论推导, 这次亲自算一算, 看看计算「奇异值」难不难&lt;/p>
&lt;h2 id="example-1">Example 1&lt;/h2>
&lt;p>设 ${\boldsymbol{A}}=\Biggl[ \begin{smallmatrix} 1 &amp;amp; 0 \\ 0 &amp;amp; 1 \\ 1 &amp;amp; 1 \end{smallmatrix} \Biggr]$, $x \in \mathbb{R}$, 计算 $\boldsymbol{A}$ 的奇异值分解.&lt;/p>
&lt;br>
&lt;p>以下分两步计算:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Step 1&lt;/strong>&lt;br>
计算右奇异矩阵 $\boldsymbol{V}$. 因为 $\boldsymbol{A} = \boldsymbol{U}\boldsymbol{\Sigma}\boldsymbol{V}^\mathsf{T}$, 所以 $\boldsymbol{A}^\mathsf{T}\boldsymbol{A} = \boldsymbol{V}(\boldsymbol{\Sigma}^\mathsf{T}\boldsymbol{\Sigma})\boldsymbol{V}^\mathsf{T}$&lt;br>
$$\boldsymbol{A}^\mathsf{T}\boldsymbol{A} = \begin{bmatrix}
1 &amp;amp; 0 &amp;amp; 1
\\
0 &amp;amp; 1 &amp;amp; 1
\end{bmatrix}
\begin{bmatrix}
1 &amp;amp; 0 \\ 0 &amp;amp; 1 \\ 1 &amp;amp; 1
\end{bmatrix} = \begin{bmatrix}
2 &amp;amp; 1 \\\&lt;br>
1 &amp;amp; 2
\end{bmatrix}
$$
利用 $\det(\boldsymbol{A}^\mathsf{T}\boldsymbol{A}-\lambda\boldsymbol{I})=0$ 计算特征值
$$
\begin{aligned}
\begin{vmatrix}
2-\lambda &amp;amp; 1 \\\&lt;br>
1 &amp;amp; 2-\lambda
\end{vmatrix} &amp;amp; = (2-\lambda)^2 - 1
\\[3pt]
&amp;amp; = \lambda^2 - 4\lambda + 3
\\[3pt]
&amp;amp; = (\lambda - 3) (\lambda-1)
\end{aligned}
$$
所以, 特征值 $\lambda_1 = 3, \lambda_2=1$. 代入 $\Bigl[\begin{smallmatrix}
2-\lambda &amp;amp; 1 \\\&lt;br>
1 &amp;amp; 2-\lambda
\end{smallmatrix}\Bigr]\mathbf{x} = \mathbf{0}$ 计算特征向量&lt;/p>
&lt;ul>
&lt;li>$\lambda_1 = 3$
$$
\begin{bmatrix}
-1 &amp;amp; 1 \\\&lt;br>
1 &amp;amp; -1
\end{bmatrix}\mathbf{x} = \mathbf{0}
$$
易得, $\mathbf{v}_1 = \frac{\mathbf{x}}{\lVert\mathbf{x}\rVert}=\frac{1}{\sqrt{2}}[1, 1]^\mathsf{T}$.&lt;/li>
&lt;li>$\lambda_1 = 1$
$$
\begin{bmatrix}
1 &amp;amp; 1 \\\&lt;br>
1 &amp;amp; 1
\end{bmatrix}\mathbf{x} = \mathbf{0}
$$
易得, $\mathbf{v}_2 = \frac{\mathbf{x}}{\lVert\mathbf{x}\rVert}=\frac{1}{\sqrt{2}}[1, -1]^\mathsf{T}$. 所以, 右奇异值矩阵&lt;sup id="fnref:1">&lt;a href="https://matnoble.me/math/linear-algebra/solve-svd-by-hand/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>
$$
\boldsymbol{V} = \frac{1}{\sqrt{2}}\begin{bmatrix} 1 &amp;amp; 1 \\ 1 &amp;amp; -1 \end{bmatrix}
$$
以及奇异值矩阵
$$
\boldsymbol{\Sigma} = \begin{bmatrix} \sqrt{\lambda_1} &amp;amp; 0 \\\ 0 &amp;amp; \sqrt{\lambda_2} \\\ 0 &amp;amp; 0 \end{bmatrix} = \begin{bmatrix} \sqrt{3} &amp;amp; 0 \\\ 0 &amp;amp; 1 \\\ 0 &amp;amp; 0 \end{bmatrix}
$$&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Step 2&lt;/strong>&lt;br>
计算左奇异矩阵, 利用 $\boldsymbol{A}\boldsymbol{V} = \boldsymbol{U}\boldsymbol{\Sigma} $&lt;br>
$$
\boldsymbol{A}\boldsymbol{V} = \begin{bmatrix}
1 &amp;amp; 0 \\ 0 &amp;amp; 1 \\ 1 &amp;amp; 1
\end{bmatrix} \frac{1}{\sqrt{2}}\begin{bmatrix} 1 &amp;amp; 1 \\ 1 &amp;amp; -1 \end{bmatrix} = \frac{1}{\sqrt{2}} \begin{bmatrix}
1 &amp;amp; 1 \\ 1 &amp;amp; -1 \\ 2 &amp;amp; 0
\end{bmatrix} = \boldsymbol{U} \begin{bmatrix} \sqrt{3} &amp;amp; 0 \\\ 0 &amp;amp; 1 \\\ 0 &amp;amp; 0 \end{bmatrix}
$$
如果记得
&lt;mark>左乘行变换, 右乘列变换&lt;/mark>
, 可以立即..看..出答案&lt;br>
$$
\boldsymbol{U} = \begin{bmatrix} 1/\sqrt{6} &amp;amp; 1/\sqrt{2} &amp;amp; u_{13} \\\&lt;br>
1/\sqrt{6} &amp;amp; -1/\sqrt{2} &amp;amp; u_{23} \\\&lt;br>
2/\sqrt{6} &amp;amp; 0 &amp;amp; u_{33}
\end{bmatrix}
$$
从 &lt;a href="https://matnoble.me/posts/svd/#%E6%AD%A3%E4%BA%A4%E5%9F%BA%E5%BA%95">奇异值分解初探&lt;/a> 中可知, $[u_{13}, u_{23}, u_{33}]^\mathsf{T} \in N(\boldsymbol{A^\mathsf{T}})$ 即
$$
\boldsymbol{A}^\mathsf{T} \begin{bmatrix} u_{13} \\\ u_{23} \\\ u_{33} \end{bmatrix} = \begin{bmatrix}
1 &amp;amp; 0 &amp;amp; 1
\\
0 &amp;amp; 1 &amp;amp; 1
\end{bmatrix} \begin{bmatrix} u_{13} \\\ u_{23} \\\ u_{33} \end{bmatrix} = \boldsymbol{0}
$$
解得 $[u_{13}, u_{23}, u_{33}]^\mathsf{T} = \frac{1}{\sqrt{3}}[1, 1, -1]^\mathsf{T}$, 所以
$$
\boldsymbol{U} = \frac{1}{\sqrt{6}} \begin{bmatrix} 1 &amp;amp; \sqrt{3} &amp;amp; \sqrt{2} \\\&lt;br>
1 &amp;amp; -\sqrt{3} &amp;amp; \sqrt{2} \\\&lt;br>
2 &amp;amp; 0 &amp;amp; -\sqrt{2}
\end{bmatrix}
$$&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>最终得到 $\boldsymbol{A}$ 的奇异值分解为&lt;/p>
&lt;p>$$
\boldsymbol{A} = \begin{bmatrix}
1 &amp;amp; 0 \\ 0 &amp;amp; 1 \\ 1 &amp;amp; 1
\end{bmatrix} = \left( \frac{1}{\sqrt{6}} \begin{bmatrix} 1 &amp;amp; \sqrt{3} &amp;amp; \sqrt{2} \\\&lt;br>
1 &amp;amp; -\sqrt{3} &amp;amp; \sqrt{2} \\\&lt;br>
2 &amp;amp; 0 &amp;amp; -\sqrt{2}
\end{bmatrix} \right) \begin{bmatrix} \sqrt{3} &amp;amp; 0 \\\ 0 &amp;amp; 1 \\\ 0 &amp;amp; 0 \end{bmatrix} \left( \frac{1}{\sqrt{2}}\begin{bmatrix} 1 &amp;amp; 1 \\ 1 &amp;amp; -1 \end{bmatrix} \right)
$$&lt;/p>
&lt;h2 id="矩阵奇异度">矩阵“奇异度”&lt;/h2>
&lt;p>上面矩阵 ${\boldsymbol{A}}=\Biggl[ \begin{smallmatrix} 1 &amp;amp; 0 \\ 0 &amp;amp; 1 \\ 1 &amp;amp; 1 \end{smallmatrix} \Biggr]$ 的秩为 $2$, 奇异值分别是 $\sqrt{3}$ 和 $1$. 如果第 3 行是两个比上面大得多的数呢? 不妨将它们都设为 $x$, 求矩阵的奇异值&lt;/p>
&lt;p>$$
\boldsymbol{A}^\mathsf{T}\boldsymbol{A} = \begin{bmatrix}
1 &amp;amp; 0 &amp;amp; x
\\
0 &amp;amp; 1 &amp;amp; x
\end{bmatrix}
\begin{bmatrix}
1 &amp;amp; 0 \\ 0 &amp;amp; 1 \\ x &amp;amp; x
\end{bmatrix} = \begin{bmatrix}
1+x^2 &amp;amp; x^2 \\\&lt;br>
x^2 &amp;amp; 1+x^2
\end{bmatrix}
$$&lt;/p>
&lt;p>利用 $\det(\boldsymbol{A}^\mathsf{T}\boldsymbol{A}-\lambda\boldsymbol{I})=0$ 计算特征值&lt;/p>
&lt;p>$$
\begin{aligned}
\begin{vmatrix}
1+x^2-\lambda &amp;amp; x^2 \\\&lt;br>
x^2 &amp;amp; 1+x^2-\lambda
\end{vmatrix} &amp;amp; = [(1+x^2)-\lambda]^2 - x^4
\\[3pt]
&amp;amp; = \lambda^2 - 2(1+x^2)\lambda +(1+2x^2)
\\[3pt]
&amp;amp; = [\lambda - (1+2x^2)] \, (\lambda-1)
\end{aligned}
$$&lt;/p>
&lt;p>则特征值以及对应的奇异值为&lt;/p>
&lt;p>$$
\begin{cases}
\lambda_1 = 1+2x^2 \\[3pt]
\lambda_2=1
\end{cases}
\quad
\begin{cases}
\sigma_1 = \sqrt{1+2x^2} \\[3pt]
\sigma_2=1
\end{cases}
$$&lt;/p>
&lt;p>所以, 当 $x$ 足够大时, 矩阵 $\boldsymbol{A}$ 的“头部”所占信息比重更大, 其更“奇异”，更接近于..秩一矩阵..&lt;/p>
&lt;h2 id="example-2">Example 2&lt;/h2>
&lt;p>为展现奇异值分解所表现的“奇异性”, 分别计算 $\boldsymbol{A}=\Biggl[\begin{smallmatrix} 1 &amp;amp; 2 &amp;amp; 3 \\&lt;br>
1 &amp;amp; 2 &amp;amp; 3 \\&lt;br>
1 &amp;amp; 2 &amp;amp; 4
\end{smallmatrix}\Biggr]$ 和 $\boldsymbol{B}=\Biggl[\begin{smallmatrix} 1 &amp;amp; 2 &amp;amp; 3 \\&lt;br>
1 &amp;amp; 2 &amp;amp; 3 \\&lt;br>
4 &amp;amp; 2 &amp;amp; 1
\end{smallmatrix}\Biggr]$ 的奇异值, 这次利用 Matlab 求解&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-matlab" data-lang="matlab">&lt;span class="n">clear&lt;/span>
&lt;span class="n">clc&lt;/span>
&lt;span class="n">A&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="n">B&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="o">~&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sigma1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">~&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">svd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="o">~&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sigma2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">~&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">svd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">A&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">sigma1&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">trace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sigma1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">B&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">sigma2&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">trace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sigma2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nb">disp&lt;/span>&lt;span class="p">(&lt;/span>&amp;#34;&lt;span class="n">A&lt;/span> 的奇异值&amp;#34;&lt;span class="p">)&lt;/span>
&lt;span class="nb">disp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sigma1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nb">disp&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s">&amp;#39;第一奇异值占比：&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">num2str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="s">&amp;#39;%&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="n">fprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#39;\n&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nb">disp&lt;/span>&lt;span class="p">(&lt;/span>&amp;#34;&lt;span class="n">B&lt;/span> 的奇异值&amp;#34;&lt;span class="p">)&lt;/span>
&lt;span class="nb">disp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sigma2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nb">disp&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s">&amp;#39;第一奇异值占比：&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">num2str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="s">&amp;#39;%&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>得到&lt;/p>
&lt;pre>&lt;code>A 的奇异值
6.9853 0 0
0 0.4527 0
0 0 0.0000
第一奇异值占比：
&lt;mark>93.9137%&lt;/mark>
B 的奇异值
6.3597 0 0
0 2.9249 0
0 0 0.0000
第一奇异值占比：
&lt;mark>68.4975%&lt;/mark>
&lt;/code>&lt;/pre>&lt;p>两个矩阵都是秩为 $2$ 的矩阵, 只是第 3 行略有不同, 仔细观察, 我们会感觉到矩阵 $\boldsymbol{A}$ 比矩阵 $\boldsymbol{B}$ 更奇异&lt;sup id="fnref:2">&lt;a href="https://matnoble.me/math/linear-algebra/solve-svd-by-hand/#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>, 而奇异值分解的结果也说明了这一点.&lt;/p>
&lt;hr />
&lt;p>更多..奇异值分解..的内容可以戳 &lt;a href="https://matnoble.me/tags/%E5%A5%87%E5%BC%82%E5%80%BC%E5%88%86%E8%A7%A3/">&lt;strong>这里&lt;/strong>&lt;/a>&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>因为矩阵 $\boldsymbol{V}$ 是 $2\times 2$ 的, 所以可以立即确定. 也就是说 $N(\boldsymbol{A})$ 是空集&lt;br> &lt;a href="https://matnoble.me/posts/svd/#%E6%AD%A3%E4%BA%A4%E5%9F%BA%E5%BA%95">https://matnoble.me/posts/svd/#%E6%AD%A3%E4%BA%A4%E5%9F%BA%E5%BA%95&lt;/a> &lt;a href="https://matnoble.me/math/linear-algebra/solve-svd-by-hand/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>矩阵 $\boldsymbol{A}$ 的前两行和前两列都是完全相同的; 而矩阵 $\boldsymbol{B}$ 的任意两列都是线性无关的 &lt;a href="https://matnoble.me/math/linear-algebra/solve-svd-by-hand/#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description><category domain="https://matnoble.me/math/">math</category><category domain="https://matnoble.me/math/linear-algebra/">Linear-Algebra</category><category domain="https://matnoble.me/series/mla/">线代拾遗</category><category domain="https://matnoble.me/tags/%E5%A5%87%E5%BC%82%E5%80%BC%E5%88%86%E8%A7%A3/">奇异值分解</category></item><item><title>Ubuntu 修改键位 — Ctrl 和 Caps Lock 互换</title><link>https://matnoble.me/tech/ubuntu/ctrl-caps-key-swap/</link><guid isPermaLink="true">https://matnoble.me/tech/ubuntu/ctrl-caps-key-swap/</guid><pubDate>Sun, 15 Mar 2020 00:12:58 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>在 Linux 上，&lt;code>Ctrl&lt;/code> 键明显要比大写锁定键 &lt;code>Caps Lock&lt;/code> 使用得机会多，当使用 &lt;code>Emacs&lt;/code> 时更是如此。但是，&lt;code>Ctrl&lt;/code> 键这个位置实在是有些尴尬，按的时间长了，..小手指..恐怕要罢工，所以我们需要将&lt;u>左 &lt;code>Ctrl&lt;/code> 键&lt;/u>与&lt;u>&lt;code>Caps Lock&lt;/code>&lt;/u>键互换位置。&lt;/p>
&lt;h2 id="命令行">命令行&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">sudo emacs /usr/share/X11/xkb/keycodes/evdev
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>搜索
&lt;mark>&amp;lt;CAPS&amp;gt;&lt;/mark>
和
&lt;mark>&amp;lt;LCTL&amp;gt;&lt;/mark>
，交换等号后面的数字&lt;/p>
&lt;pre>&lt;code>...
&amp;lt;CAPS&amp;gt; = 37;
...
&amp;lt;LCTL&amp;gt; = 66;
&lt;/code>&lt;/pre>&lt;p>重启后即可生效&lt;/p>
&lt;hr />
&lt;h2 id="gnome-tweak-tool-工具">gnome-tweak-tool 工具&lt;/h2>
&lt;p>如果使用「gnome-tweak-tool」来美化桌面，则可以更轻松实现&lt;/p>
&lt;p style="text-align:center">
键盘和鼠标 $\to$ 其他布局选项 $\to$ Ctrl 键位置 $\to$ 勾选
&lt;mark>交换 Ctrl 和大写锁定&lt;/mark>
&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/15/ab5b7641d1e68850336b2d6629c5e4c6.png"
title="gnome-tweak-tool 工具"
alt="gnome-tweak-tool 工具"
width="95%"
>
&lt;span class="caption">◎ gnome-tweak-tool 工具&lt;/span>
&lt;/span></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/ubuntu/">Ubuntu</category><category domain="https://matnoble.me/tags/ubuntu-%E8%A3%85%E6%9C%BA%E4%B8%8E%E4%BC%98%E5%8C%96/">Ubuntu 装机与优化</category><category domain="https://matnoble.me/tags/emacs/">Emacs</category></item><item><title>Chrome 插件实现科学上网</title><link>https://matnoble.me/tech/ubuntu/scientific-internet/</link><guid isPermaLink="true">https://matnoble.me/tech/ubuntu/scientific-internet/</guid><pubDate>Sat, 14 Mar 2020 00:21:30 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/14/7e11f43310ae7fd178efb49982ac58b2.jpg"
title="不作恶"
alt="不作恶"
width="95%"
>
&lt;span class="caption">◎ 不作恶&lt;/span>
&lt;/span>
&lt;br>
&lt;p>近日，感觉「墙」越来越高，导致目前使用的 &lt;a href="https://matnoble.me/posts/ubuntu-ssr/#%E4%B8%8B%E9%9D%A2%E4%BB%8B%E7%BB%8D%E4%B8%80%E4%B8%8B%E6%88%91%E7%94%A8%E7%9A%84%E6%9C%BA%E5%9C%BA">机场&lt;/a> 时不时的抽风，时好时坏，所以在网络不达「墙」外时，临时使用
&lt;mark>Chrome 插件&lt;/mark>
实现科学上网。&lt;/p>
&lt;h2 id="谷歌访问助手破解版">谷歌访问助手(破解版)&lt;/h2>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/09/a4691b8cf97c60a7885127dc94c79aeb.png"
title="谷歌访问助手(破解版)"
alt="谷歌访问助手(破解版)"
width="95%"
>
&lt;span class="caption">◎ 谷歌访问助手(破解版)&lt;/span>
&lt;/span>
&lt;p>由于是破解版，所以无法发布在 Chrome 应用商店。目前，该插件存储在 &lt;a href="https://github.com/haotian-wang/google-access-helper">GitHub 仓库&lt;/a>，所以安装该插件不需要科学上网，其中有详尽的安装说明。安装后，即可访问 Google 系常用网站。当然也就可以自由自在地访问 &lt;a href="https://chrome.google.com/webstore/category/extensions">Chrome 应用商店&lt;/a> 来安装更多的插件。&lt;/p>
&lt;h2 id="集装箱">集装箱&lt;/h2>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/09/5f61f8db8fb453ad8c1bcadfe455355c.png"
title="一个插件, 提供一揽子服务"
alt="一个插件, 提供一揽子服务"
width="95%"
>
&lt;span class="caption">◎ 一个插件, 提供一揽子服务&lt;/span>
&lt;/span>
&lt;br>
&lt;p>&lt;a href="http://one.newday.me/">集装箱&lt;/a> 不仅支持 Chrome，还支持其他的各大主流浏览器&lt;sup id="fnref:1">&lt;a href="https://matnoble.me/tech/ubuntu/scientific-internet/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>。其中 &lt;code>谷歌助手功能&lt;/code> 与前一个插件功能相同。除此之外，还集成了众多实用的小功能，建议安装。&lt;/p>
&lt;blockquote>
&lt;p>一个插件，提供一揽子服务。插件的主要功能有：&lt;br>
[1] 网盘助手：大概是最优雅好用的网盘助手了。 &lt;br>
[2] 优 惠 购 ：以最优惠的价格，把宝贝抱回家。 &lt;br>
[3] 下载卫士：拒绝高(捆)速(绑)下载。&lt;/p>
&lt;footer>
&lt;strong>&lt;/strong>
&lt;cite>
&lt;a href="https://chrome.google.com/webstore/detail/%E9%9B%86%E8%A3%85%E7%AE%B1/kbgigmcnifmaklccibmlepmahpfdhjch" title="https://chrome.google.com/webstore/detail/%E9%9B%86%E8%A3%85%E7%AE%B1/kbgigmcnifmaklccibmlepmahpfdhjch">chrome.google.com/webstore/...&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
&lt;h2 id="veepn">VeePN&lt;/h2>
&lt;p>前面两个上网助手都只能访问部分 Google 系网站，甚至连 YouTube 都不能访问。&lt;a href="http://veepn.com/">VeePN&lt;/a> 则可以自由地访问更多其他网站。&lt;strong>当机场不好使时，我都会用这个。&lt;/strong>　&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/09/91c741e8121222cc89766e1c1ea48863.jpg"
title="VeePN"
alt="VeePN"
width="95%"
>
&lt;span class="caption">◎ VeePN&lt;/span>
&lt;/span>
&lt;blockquote>
&lt;p>Fast, ultra secure, and easy to use VPN service to protect your privacy online. Enjoy Unlimited Traffic and Bandwidth!&lt;/p>
&lt;footer>
&lt;strong>&lt;/strong>
&lt;cite>
&lt;a href="https://chrome.google.com/webstore/detail/veepn-unlimited-free-fast/majdfhpaihoncoakbjgbdhglocklcgno" title="https://chrome.google.com/webstore/detail/veepn-unlimited-free-fast/majdfhpaihoncoakbjgbdhglocklcgno">chrome.google.com/webstore/...&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
&lt;h2 id="小结">小结&lt;/h2>
&lt;p>即使科学上网是不被支持的，但并没有强制禁止，依旧有很多人在用。我们上 Google，但我们..不作恶..&lt;sup id="fnref:2">&lt;a href="https://matnoble.me/tech/ubuntu/scientific-internet/#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;/p>
&lt;p>本博客已舍弃 &lt;a href="https://pages.github.com/">GitHub Pages&lt;/a>, 转投 &lt;a href="https://www.netlify.com/">Netlify&lt;/a>. 不曾想，在国内访问速度依旧感人，墙外访问却很快，所以建议使用「科学上网」访问本站😉&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/14/357f7ad77be5820d5a5dc1e8a552d614.png"
title="desktop"
alt="desktop"
width="95%"
>
&lt;span class="caption">◎ desktop&lt;/span>
&lt;/span>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/14/c20a8283162dc082e91bda5a5a6639a0.png"
title="mobile"
alt="mobile"
width="95%"
>
&lt;span class="caption">◎ mobile&lt;/span>
&lt;/span>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="http://tb.newday.me/doc">http://tb.newday.me/doc&lt;/a> &lt;a href="https://matnoble.me/tech/ubuntu/scientific-internet/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>Google 咱管不了，但我们能保证自己不作恶。&lt;br> &lt;a href="https://en.wikipedia.org/wiki/Don%27t_be_evil">https://en.wikipedia.org/wiki/Don%27t_be_evil&lt;/a> &lt;a href="https://matnoble.me/tech/ubuntu/scientific-internet/#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/ubuntu/">Ubuntu</category><category domain="https://matnoble.me/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/">科学上网</category><category domain="https://matnoble.me/tags/chrome/">Chrome</category></item><item><title>科技文档排版漫谈</title><link>https://matnoble.me/tech/latex/typeset-bbt/</link><guid isPermaLink="true">https://matnoble.me/tech/latex/typeset-bbt/</guid><pubDate>Thu, 12 Mar 2020 00:15:30 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h2 id="word-排版技能提升">Word 排版技能提升&lt;/h2>
&lt;p>在之前很长时间内排版 Word 文档都是：..局部调整..，即看着哪儿不顺眼就调哪儿。直到大三时遇见数据分析老师。当时在机房写完课程报告初稿，兴冲冲地找来老师寻求修改意见，老师首先从排版方面对我进行指导，老师的操作让我改变了多年来对于 Word 排版的认知，大致总结如下：&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>首先利..样式..生成层级式的 headline 并开启导航栏，以在行文过程中，增加对全局的掌握。更快捷地定位想跳转的位置。&lt;/li>
&lt;li>选中一段文字，首先选择中文字体$\to$
&lt;mark>宋体&lt;/mark>
，保持选中文字不动，再次选择英文字体$\to$
&lt;mark>Times New Roman&lt;/mark>
，完成中英文分别选字体。&lt;/li>
&lt;li>按..章..$\to$..节..$\to$..小节..的次序，借助..格式刷..工具校对文档。&lt;/li>
&lt;li>并不是所有公式都需要编序号，只有一些被引用的公式才需要编号，而且需要右对齐。&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>之后的一年中，多次向其他同学介绍相关 Word 排版技巧，并在第二年的数学建模竞赛中得以使用。&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/12/a4d546b34a5923c7e1df2a8c91be9f00.png"
title="现在看来实在是普通"
alt="现在看来实在是普通"
width="95%"
>
&lt;span class="caption">◎ 现在看来实在是普通&lt;/span>
&lt;/span>
&lt;br>
&lt;blockquote>
&lt;p>&lt;em>PS: Windows 对于 Word 的渲染真的差, 下面是同一个模板在 Ubuntu WPS 上的显示效果 (MaC Word 的显示也很好, 只是我没有😭)&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/12/7c74ac12fbd6c6d0f98a5d809a1a14f2.png"
title="Ubuntu 数学建模 Word 模板"
alt="Ubuntu 数学建模 Word 模板"
width="95%"
>
&lt;span class="caption">◎ Ubuntu 数学建模 Word 模板&lt;/span>
&lt;/span>
&lt;br>
&lt;style type="text/css">.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:"Font Awesome 5 Free",FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:'\f071'}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:'\f05a'}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:'\f06a'}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:'\f058'}.notice.tip{background:#e6f9e6}&lt;/style>&lt;div class="notice warning" >
&lt;p class="first notice-title">Ｗarning&lt;/p>&lt;p>&lt;strong>但 Word 排版依旧有问题：&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>公式输入缓慢，且不够美观，尤其是行内公式(容易造成行间距不一致)&lt;/li>
&lt;li>公式，图表等交叉引用困难&lt;/li>
&lt;li>文章中插图尺寸大小不易控制&lt;/li>
&lt;li>表格排版困难，且不美观&lt;/li>
&lt;li>参考文献一旦修改，有可能不是修改一处(牵一发而动全身)&lt;/li>
&lt;li>跨设备间兼容性问题&lt;/li>
&lt;li>后期排版校对困难，耗时耗力&lt;/li>
&lt;li>...&lt;/li>
&lt;/ol>&lt;/div>
&lt;blockquote>
&lt;p>&lt;em>学了 $\LaTeX$ 之后，会发现以上这些都不是事儿&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;h2 id="latex-学习历史">LaTeX 学习历史&lt;/h2>
&lt;h3 id="初体验">初体验&lt;/h3>
&lt;p>第一次接触 $\LaTeX{}$ 是也是大三春节寒假期间，当时还是在 Windows 系统上，装的是 CTeX 中文套装 + WinEdt 编辑器。当时，完全摸不到头脑，只是看了一些年代久远的视频。&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/12/d9db55b1cb35079b53deb17b6c4c1b72.png"
title="竟然还存在我的百度网盘里"
alt="竟然还存在我的百度网盘里"
width="95%"
>
&lt;span class="caption">◎ 竟然还存在我的百度网盘里&lt;/span>
&lt;/span>
&lt;p>9 个视频看下来，因为不熟悉以及操作复杂(较 Word)，所以并没有感受到 $\LaTeX{}$ 的优势。大三下学期和大四上学期准备考研，就没有继续研究了。&lt;/p>
&lt;h3 id="入门">入门&lt;/h3>
&lt;h4 id="排版毕设">排版毕设&lt;/h4>
&lt;p>考研顺利上岸后，开始准备本科的最后一课 --- ..毕业设计..&lt;/p>
&lt;p>18 年 3 月复试后，经过一个月左右的时间，将毕业设计的主要思路、初步算法实践编程完成。4 月份开始一边继续毕设内容，一边钻研 $\LaTeX{}$ 排版&lt;sup id="fnref:1">&lt;a href="https://matnoble.me/tech/latex/typeset-bbt/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>。&lt;/p>
&lt;p>当时，了解到了 &lt;a href="https://www.latexstudio.net/">LaTeX 工作室&lt;/a>这个网站，里面有很多很多精美实用的模板。而且还了解到 CTeX 中文套装已于 2012 年停止更新，建议安装 TeX Live 发行版。后来，我又选择使用 TeXstudio 作为 $\TeX$ 编辑器&lt;sup id="fnref:2">&lt;a href="https://matnoble.me/tech/latex/typeset-bbt/#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;/p>
&lt;p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/12/30a0bec64fbbed40443777c0d59169ed.png"
title="TeXstudio 编辑器"
alt="TeXstudio 编辑器"
width="95%"
>
&lt;span class="caption">◎ TeXstudio 编辑器&lt;/span>
&lt;/span>
&lt;sup id="fnref:3">&lt;a href="https://matnoble.me/tech/latex/typeset-bbt/#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>&lt;/p>
&lt;p>最大的问题是: &lt;u>我本科学校没有 $\LaTeX$ 版的毕业论文模板&lt;sup id="fnref:4">&lt;a href="https://matnoble.me/tech/latex/typeset-bbt/#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>&lt;/u>，但最后还是决定用 $\LaTeX$ 来排版&lt;sup id="fnref:5">&lt;a href="https://matnoble.me/tech/latex/typeset-bbt/#fn:5" class="footnote-ref" role="doc-noteref">5&lt;/a>&lt;/sup>&lt;/p>
&lt;p>由于当时几乎没有知识储备，所以决定在 &lt;a href="https://www.latexstudio.net/">LaTeX 工作室&lt;/a> 里选择与本科学校毕业设计要求相近的模板，然后稍作修改。说来也是巧合，挑选再三之后，选择了&lt;a href="https://www.latexstudio.net/archives/11575.html">华中科技大学的本科毕业设计模板&lt;/a>&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/12/fda513bd726c2c2b9cb7cb867bab63ab.png"
title="华中科技大学毕业论文 LaTeX 模板 2017"
alt="华中科技大学毕业论文 LaTeX 模板 2017"
width="95%"
>
&lt;span class="caption">◎ 华中科技大学毕业论文 LaTeX 模板 2017&lt;/span>
&lt;/span>
&lt;br>
&lt;div class="row" style="position: relative; width: 100%; padding-bottom: 100%; padding-top: 0px; height: 0; overflow: hidden;">
&lt;embed src="https://matnoble.me/files/pdf/bisheyaoqiu.pdf" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" type="application/pdf">
&lt;/div>
&lt;br>
&lt;p>参考本科学校的排版要求，一步步、一点点修改。那段时间，几乎每天早出晚归，搞得跟考研似的。最终还是完成了任务，自认为完成的还不错😁&lt;/p>
&lt;div class="row" style="position: relative; width: 100%; padding-bottom: 100%; padding-top: 0px; height: 0; overflow: hidden;">
&lt;embed src="https://matnoble.me/files/pdf/bishelunwen.pdf" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" type="application/pdf">
&lt;/div>
&lt;br>
&lt;p>然后，又顺手写了一个答辩用的 Beamer&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://matnoble.me/files/beamer.svg"
title="毕业答辩 Beamer"
alt="毕业答辩 Beamer"
width="95%"
>
&lt;span class="caption">◎ 毕业答辩 Beamer&lt;/span>
&lt;/span>
&lt;p>至此，第一次用 $\LaTeX{}$ 排版就结束了。期间遇到了各式各样的问题，当时还不懂得科学上网，所以遇到问题，百度搜寻答案是真的难😫&lt;/p>
&lt;div class="notice tip" >
&lt;p class="first notice-title">Tips&lt;/p>&lt;p>从此，算是入了 $\LaTeX$ 的门了。所以要学习一项技能还是要去..实践..，&lt;strong>主动去遇到各种困难，然后去解决困难&lt;/strong>&lt;/p>&lt;/div>
&lt;h4 id="axmath-是公式编辑器神器">AxMath 是公式编辑器神器？&lt;/h4>
&lt;p>公式排版是 $\LaTeX{}$ 的强项，但是对于初学者，简单的还行，稍复杂些的公式符号就不那么好记了，总是去 Google，时间成本太高。而 AxMath 对 $\LaTeX$ 初学者是友好的，它&lt;strong>支持 MathType 式的输入，还支持输出 $\TeX$ 代码，重要的是: 界面更美观、操作更高效、而且价钱比 MathType 便宜得多。&lt;/strong>&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/12/8e04531c233f5c66a8034bf0a97238af.png"
title="AxMath 公式编辑器"
alt="AxMath 公式编辑器"
width="95%"
>
&lt;span class="caption">◎ AxMath 公式编辑器&lt;/span>
&lt;/span>
&lt;blockquote>
&lt;p>&lt;p>&lt;strong>AxMath 功能与特色&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>图形化的排版布局设定，排版更方便；&lt;/li>
&lt;li>支持点取输入、快捷键、脚本输入，输入更快；&lt;/li>
&lt;li>支持AMS/LaTeX数学符号标准；&lt;/li>
&lt;li>支持自定义数学符号；&lt;/li>
&lt;li>支持快速矩阵模板、自动填充及分块；&lt;/li>
&lt;li>支持字符串查找与替换；&lt;/li>
&lt;li>支持笔记（多帧剪贴板）、磁贴与公式库；&lt;/li>
&lt;li>支持多底色符号面板，支持符号面板重映射；&lt;/li>
&lt;li>支持单色和彩色，可自定义颜色偏好；&lt;/li>
&lt;li>编辑辅助功能，可自动识别预设字段并校正其文字格式；&lt;/li>
&lt;li>支持手写输入；&lt;/li>
&lt;/ul>
&lt;/p>
&lt;footer>
&lt;strong>&lt;/strong>
&lt;cite>
&lt;a href="http://amyxun.com/" title="http://amyxun.com/">amyxun.com/&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
&lt;p>说到“公式神器”，&lt;a href="https://mathpix.com/">&lt;strong>Mathpix Snip tool&lt;/strong>&lt;/a> 应该算是一个神器了吧，
&lt;mark>它不生产公式，只做公式的搬运工&lt;/mark>
&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/13/aef707bc3a6d7424aea535feef4c8976.gif"
title="Mathpix Snip tool"
alt="Mathpix Snip tool"
width="95%"
>
&lt;span class="caption">◎ Mathpix Snip tool&lt;/span>
&lt;/span>
&lt;p>无论是文档，还是网页，甚至是手写的公式，一般都能搞定，效率比输入高。只可现在惜官网限制免费用户，每月只有 $50$ 次的免费扫描机会。&lt;/p>
&lt;h3 id="再突破开源项目">再突破(开源项目)&lt;/h3>
&lt;p>排版完本科毕业设计入门之后, 看了众多他人的模板后，我也萌生了“创作” $\LaTeX{}$ 模板的冲动。&lt;/p>
&lt;h4 id="答辩-beamer-模板">答辩 Beamer 模板&lt;/h4>
&lt;p>毕业设计中也用到了 Beamer，但那是“拿来主义”，意犹未尽。所以找了一个简单的模板，自定义了一些内容。&lt;/p>
&lt;div class="row" style="position: relative; width: 100%; padding-bottom: 100%; padding-top: 0px; height: 0; overflow: hidden;">
&lt;embed src="https://matnoble.me/files/pdf/hustbeamer.pdf" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" type="application/pdf">
&lt;/div>
&lt;blockquote>
&lt;p>华中科技大学 Beamer 模板，仓库地址👇&lt;/p>
&lt;footer>
&lt;strong>数学小兵儿&lt;/strong>
&lt;cite>
&lt;a href="https://github.com/MatNoble/HUSTMatNobleBeamer" title="https://github.com/MatNoble/HUSTMatNobleBeamer">github.com/MatNoble/...&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
&lt;p>&lt;em>由于是第一个半自定义模板，所以现在看来简直是“粗制滥造”，必须把新版 Beamer 模板提上日程&lt;/em>&lt;/p>
&lt;h4 id="document-笔记模板">Document 笔记模板&lt;/h4>
&lt;p>研一下学期，导师从美国归来，开始真正跟从导师学习知识。一天，导师给了我一份他的 $\TeX$ 文件，我对其中的..简洁规整..感到惊讶，对比之下，之前我写的 $\TeX$ 代码是何等的..冗余混乱..，于是写了一份 &lt;a href="https://github.com/MatNoble/LaTeX-Document">&lt;strong>适用于作学习笔记的中英文文档模板&lt;/strong>&lt;/a>&lt;/p>
&lt;div class="row" style="position: relative; width: 100%; padding-bottom: 100%; padding-top: 0px; height: 0; overflow: hidden;">
&lt;embed src="https://matnoble.me/files/pdf/Document-EN.pdf" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" type="application/pdf">
&lt;/div>
&lt;br>
&lt;p>再者，受导师影响，“迷”上了 Emacs。渐渐熟悉并可以熟练地使用 Emacs 作 $\LaTeX$ 的编辑器。&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/12/9aa2a22b65d587a51d2e275fc57b00d7.png"
title="Use Emacs as LaTeX Editor"
alt="Use Emacs as LaTeX Editor"
width="95%"
>
&lt;span class="caption">◎ Use Emacs as LaTeX Editor&lt;/span>
&lt;/span>
&lt;p>Emacs 做编辑器的好处是：
&lt;mark>结合 Emacs 的各种..快捷键..实现快速输入、查找替换、整理 $\TeX$ 代码&lt;/mark>
。比如我之前演示的👇&lt;/p>
&lt;blockquote>
&lt;p>使用 Emacs 制作 $\LaTeX$ 表格&lt;/p>
&lt;footer>
&lt;strong>数学小兵儿&lt;/strong>
&lt;cite>
&lt;a href="https://matnoble.me/posts/using-emacs-to-make-latex-table/" title="https://matnoble.me/posts/using-emacs-to-make-latex-table/">matnoble.me/posts/...&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
&lt;p>Emacs 对 $\TeX$ 代码有补全功能，如此输入公式会快很多.&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/12/0b9921d64000c492b0fc0fc31e3591a6.gif"
title="Emacs 快速输入数学公式"
alt="Emacs 快速输入数学公式"
width="95%"
>
&lt;span class="caption">◎ Emacs 快速输入数学公式&lt;/span>
&lt;/span>
&lt;br>
&lt;p>虽然我依旧是初学者，但是我已经不用 AxMath 来输入数学公式了，原因有二&lt;/p>
&lt;ul>
&lt;li>AxMath 不支持 Ubuntu 系统&lt;/li>
&lt;li>熟能生巧，即使对于复杂的数学公式代码记不清，利用 Emacs 的补全功能也能快速正确的输入 $\TeX$ 数学公式代码&lt;/li>
&lt;/ul>
&lt;h3 id="记录知识">记录知识&lt;/h3>
&lt;p>虽然有了一定的排版基础，但依旧有许多排版知识是不知道的，或者之前用的一些代码是不正确的，比如微分算子的使用&lt;sup id="fnref:6">&lt;a href="https://matnoble.me/tech/latex/typeset-bbt/#fn:6" class="footnote-ref" role="doc-noteref">6&lt;/a>&lt;/sup>。&lt;/p>
&lt;p>因此，我就想把已有的知识和新获得的知识集中记录下来。于是我在&lt;a href="https://matnoble.me/images/wechat.svg">
&lt;abbr title="数系家园">微信公众号&lt;/abbr>
&lt;/a>和本博客都设立了专栏 --- &lt;a href="https://matnoble.me/series/latex/">$\LaTeX$ 排版「冷」知识&lt;/a>。&lt;/p>
&lt;p>希望能方便自己查阅遇到过却又忘记的知识，能够帮助到他人就更好了。&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/13/2e5d2b0b75e78a34a308a892f9323995.png"
title="sharing is happy"
alt="sharing is happy"
width="95%"
>
&lt;span class="caption">◎ sharing is happy&lt;/span>
&lt;/span>
&lt;h2 id="结语">结语&lt;/h2>
&lt;p>回应文章头部的 Word 排版，我并不认为 $\LaTeX$ 比 Word “高级”&lt;sup id="fnref:7">&lt;a href="https://matnoble.me/tech/latex/typeset-bbt/#fn:7" class="footnote-ref" role="doc-noteref">7&lt;/a>&lt;/sup>，在很多小的场景(无公式的非科技文档)，我还是愿意使用 Word 来排版。二者是..功能用途..不完全对等的软件。&lt;/p>
&lt;p>从 18 年 4 月份正式开始学习 $\LaTeX{}$ 排版至今马上两年了，算是有了一些排版知识和经验，以此文来纪念我学习 $\LaTeX$ 的两年吧🤘&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>当时，就想着在对论文内容没有太大压力的前提下，用 $\LaTeX{}$ 排版论文应该可以提升我的 $\LaTeX{}$ 排版技能，为之后所谓的科研生活作准备。 &lt;a href="https://matnoble.me/tech/latex/typeset-bbt/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>TeXLive 安装教程 &lt;br> &lt;a href="https://matnoble.me/posts/install-texlive/#windows-%E7%B3%BB%E7%BB%9F">https://matnoble.me/posts/install-texlive/#windows-%E7%B3%BB%E7%BB%9F&lt;/a> &lt;a href="https://matnoble.me/tech/latex/typeset-bbt/#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>原谅我没有毕设的 tex 截图了 &lt;a href="https://matnoble.me/tech/latex/typeset-bbt/#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4" role="doc-endnote">
&lt;p>据我了解，官方和非官方都没有 &lt;a href="https://matnoble.me/tech/latex/typeset-bbt/#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:5" role="doc-endnote">
&lt;p>现在想想当时这个决定还真是有些大胆，万一不能搞定不久 gg 了 &lt;a href="https://matnoble.me/tech/latex/typeset-bbt/#fnref:5" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:6" role="doc-endnote">
&lt;p>&lt;code>\mathop{}\!\mathrm{d}&lt;/code> 比 &lt;code>\mathrm{d}&lt;/code> 要更“地道”一些 &lt;br> &lt;a href="https://matnoble.me/posts/latex-differential-operator/">https://matnoble.me/posts/latex-differential-operator/&lt;/a> &lt;a href="https://matnoble.me/tech/latex/typeset-bbt/#fnref:6" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:7" role="doc-endnote">
&lt;p>实际上 Word 比 $\TeX$ 产生的要晚，用户群也更大一些 &lt;a href="https://matnoble.me/tech/latex/typeset-bbt/#fnref:7" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/latex/">latex</category><category domain="https://matnoble.me/tags/latex/">LaTeX</category></item><item><title>在 LaTeX 里更改字体大小</title><link>https://matnoble.me/tech/latex/change-fontsize-in-latex/</link><guid isPermaLink="true">https://matnoble.me/tech/latex/change-fontsize-in-latex/</guid><pubDate>Tue, 10 Mar 2020 00:18:32 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/4e7ca500-bdca-42dc-9444-bffa8af84fc5.png" width="95%" />&lt;/p>
&lt;div align="center">&lt;a href="https://matnoble.me/series/latex">◎ 你过来啊 🤞&lt;/a>&lt;/div>
&lt;p>在 $\LaTeX$ 里改变字体大小分为两个层级, 一是整个文档统一调整, 一是设置文档中某个部分的字体大小.&lt;/p>
&lt;ul>
&lt;li>全局调整:&lt;br>
会..影响..所有字体的大小, 注意并不是将所有字都设置成一样大, 正文部分, 标题, 注脚相应地变大或缩小.&lt;/li>
&lt;li>局部设置: &lt;br>
一个字, 几行字, 表格内的字等等都可以被单独设置修改．&lt;/li>
&lt;/ul>
&lt;h2 id="全局调整">全局调整&lt;/h2>
&lt;p>在标准的文档类, 如 &lt;code>article&lt;/code>, &lt;code>report&lt;/code> 以及 &lt;code>book&lt;/code> 默认支持 3 种不同的字体大小 &lt;code>10pt(默认), 11pt, 12pt&lt;/code>. 通过一下命令进行全局修改&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\documentclass&lt;/span>&lt;span class="na">[12pt]&lt;/span>&lt;span class="nb">{&lt;/span>article&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果, 你需要使用更多的字体大小, 可以使用&lt;a href="https://mirror.bjtu.edu.cn/ctan/macros/latex/contrib/extsizes/extsizes.pdf">extsizes 包&lt;/a>. 它提供了更多的可选择项: &lt;code>8pt, 9pt, 10pt, 11pt, 12pt, 14pt, 17pt, 20pt&lt;/code>. 具体地&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="c">%Article
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\documentclass&lt;/span>&lt;span class="na">[9pt]&lt;/span>&lt;span class="nb">{&lt;/span>extarticle&lt;span class="nb">}&lt;/span>
&lt;span class="c">%Report
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\documentclass&lt;/span>&lt;span class="na">[14pt]&lt;/span>&lt;span class="nb">{&lt;/span>extreport&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="局部调整">局部调整&lt;/h2>
&lt;p>$\LaTeX$ 提供了以下局部修改字体大小的命令:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\Huge&lt;/span>
&lt;span class="k">\huge&lt;/span>
&lt;span class="k">\LARGE&lt;/span>
&lt;span class="k">\Large&lt;/span>
&lt;span class="k">\large&lt;/span>
&lt;span class="k">\normalsize&lt;/span> (default)
&lt;span class="k">\small&lt;/span>
&lt;span class="k">\footnotesize&lt;/span>
&lt;span class="k">\scriptsize&lt;/span>
&lt;span class="k">\tiny&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>显示效果如下:&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/10/2269ec427e14c1747ace0b0b244764ca.png"
title="LaTeX 局部调整字体"
alt="LaTeX 局部调整字体"
width="95%"
>
&lt;span class="caption">◎ LaTeX 局部调整字体&lt;/span>
&lt;/span>
&lt;style type="text/css">.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:"Font Awesome 5 Free",FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:'\f071'}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:'\f05a'}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:'\f06a'}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:'\f058'}.notice.tip{background:#e6f9e6}&lt;/style>&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;ul>
&lt;li>在一份文档中, 不要使用太多不同字体.&lt;/li>
&lt;li>尽量不要使用太大太小的字体.&lt;/li>
&lt;/ul>&lt;/div>
&lt;p>有两种方式来使用这种命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="c">% inline
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="nb">{&lt;/span>&lt;span class="k">\Large&lt;/span> This is some large text&lt;span class="nb">}&lt;/span>
&lt;span class="c">% environment
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>footnotesize&lt;span class="nb">}&lt;/span>
This is some large text
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>footnotesize&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr />
&lt;p>参考自 &lt;a href="https://texblog.org/2012/08/29/changing-the-font-size-in-latex/">Changing the font size in LaTeX&lt;/a>&lt;/p></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/latex/">latex</category><category domain="https://matnoble.me/series/latex/">LaTeX 排版「冷」知识</category><category domain="https://matnoble.me/tags/">标签云</category></item><item><title>Chromium 和 Chrome 的安装与卸载</title><link>https://matnoble.me/tech/ubuntu/install-chromium-browser-ubuntu/</link><guid isPermaLink="true">https://matnoble.me/tech/ubuntu/install-chromium-browser-ubuntu/</guid><pubDate>Sun, 08 Mar 2020 00:09:10 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/08/3558b8170bbc25adfdbd312c5a729944.png"
title="浏览器嘛, 用着舒服就行"
alt="浏览器嘛, 用着舒服就行"
width="95%"
>
&lt;span class="caption">◎ 浏览器嘛, 用着舒服就行&lt;/span>
&lt;/span>
&lt;h2 id="chromium">Chromium&lt;/h2>
&lt;h3 id="安装">安装&lt;/h3>
&lt;p>安装很简单, 只需在 Terminal 输入一行安装命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">sudo apt install chromium-browser
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>
&lt;a href="apt:chromium-browser" target="blank">
&lt;span>或者直接点我下载👈&lt;/span>
&lt;/a>
&lt;/p>
&lt;h3 id="卸载并移除相关配置">卸载并移除相关配置&lt;/h3>
&lt;p>此时需要以下四行命令以完全清除 Chromium&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">sudo apt purge chromium-browser
rm -rf ~/.config/chromium
rm -rf ~/.cache/chromium
sudo rm -rf /etc/chromium
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="chrome">Chrome&lt;/h2>
&lt;h3 id="安装-1">安装&lt;/h3>
&lt;p>此时, 不能 &lt;code>apt install&lt;/code>, 需要通过 &lt;code>wget&lt;/code> 下载最新的 Google Chrome &lt;code>.deb&lt;/code> 安装包&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后安装&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">sudo dpkg -i google-chrome-stable_current_amd64.deb
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="卸载并移除相关配置-1">卸载并移除相关配置&lt;/h3>
&lt;p>卸载与 Chromium 类似&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">sudo apt purge google-chrome-stable
rm -rf ~/.config/google-chrome
rm -rf ~/.cache/google-chrome
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/ubuntu/">Ubuntu</category><category domain="https://matnoble.me/tags/%E5%AE%89%E8%A3%85/">安装</category><category domain="https://matnoble.me/tags/ubuntu-%E8%A3%85%E6%9C%BA%E4%B8%8E%E4%BC%98%E5%8C%96/">Ubuntu 装机与优化</category></item><item><title>高等代数习题集及资料分享</title><link>https://matnoble.me/math/linear-algebra/linear-algebra-problem-set/</link><guid isPermaLink="true">https://matnoble.me/math/linear-algebra/linear-algebra-problem-set/</guid><pubDate>Fri, 06 Mar 2020 00:17:38 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>研一时, 利用业余时间写了一份
&lt;mark>高等代数习题集&lt;/mark>
, 包含考研时做的一些经典例题及一些方法论. 提纲如下图所示, 共有 6 章, 可惜的是由于时间原因, 最后两章并没有完成. 目前只完成了前 4 章中的大部分, 如果需要的话, 可从下方下载 PDF 版!&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/06/e503745fc92728f920414482f03f61ce.png"
title="篇章结构"
alt="篇章结构"
width="95%"
>
&lt;span class="caption">◎ 篇章结构&lt;/span>
&lt;/span>
&lt;h3>多项式&lt;/h3>
&lt;div class="row" style="position: relative; width: 100%; padding-bottom: 100%; padding-top: 0px; height: 0; overflow: hidden;">
&lt;embed src="https://matnoble.me/files/pdf/duoxiangshi.pdf" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" type="application/pdf">
&lt;/div>
&lt;h3>行列式&lt;/h3>
&lt;div class="row" style="position: relative; width: 100%; padding-bottom: 100%; padding-top: 0px; height: 0; overflow: hidden;">
&lt;embed src="https://matnoble.me/files/pdf/hls.pdf" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" type="application/pdf">
&lt;/div>
&lt;h3>线性方程组(线性系统)&lt;/h3>
&lt;div class="row" style="position: relative; width: 100%; padding-bottom: 100%; padding-top: 0px; height: 0; overflow: hidden;">
&lt;embed src="https://matnoble.me/files/pdf/les.pdf" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" type="application/pdf">
&lt;/div>
&lt;h3>矩阵&lt;/h3>
&lt;div class="row" style="position: relative; width: 100%; padding-bottom: 100%; padding-top: 0px; height: 0; overflow: hidden;">
&lt;embed src="https://matnoble.me/files/pdf/matrix.pdf" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" type="application/pdf">
&lt;/div>
&lt;hr />
&lt;p>除了我自己的总结, 他山之石也是要借鉴学习的, 我上传到了&lt;a href="https://474b.com/dir/24879366-37697679-9deced">城通网盘&lt;/a>&lt;br>
&lt;em>&lt;code>密码&lt;/code>请到公众号&lt;code>数系家园&lt;/code>, 回复&lt;code>高代习题2020&lt;/code>获取&lt;/em> &lt;br>&lt;/p>
&lt;p>&lt;img src="https://ttfou.com/images/2020/03/06/7aeb74f40a7aa01c37ad4ba2d4ed3774.png" width="95%" />&lt;/p>
&lt;blockquote>
&lt;p>申明: 以上资料仅供个人学习使用, 版权属于原作者&lt;/p>
&lt;/blockquote></description><category domain="https://matnoble.me/math/">math</category><category domain="https://matnoble.me/math/linear-algebra/">Linear-Algebra</category><category domain="https://matnoble.me/tags/%E8%B5%84%E6%96%99%E5%88%86%E4%BA%AB/">资料分享</category><category domain="https://matnoble.me/tags/%E8%80%83%E7%A0%94/">考研</category></item><item><title>Matlab 保存高质量矢量图片</title><link>https://matnoble.me/tech/programming/matlab-save-hd-picture/</link><guid isPermaLink="true">https://matnoble.me/tech/programming/matlab-save-hd-picture/</guid><pubDate>Thu, 05 Mar 2020 00:21:32 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>以下代码生成一个不含白边的三维图示&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-matlab" data-lang="matlab">&lt;span class="n">surf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">peaks&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="c">% 去掉多余白边&lt;/span>
&lt;span class="n">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gca&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#39;looseInset&amp;#39;&lt;/span>&lt;span class="p">,[&lt;/span>&lt;span class="mi">0&lt;/span> &lt;span class="mf">0.01&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="mf">0.01&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/05/24f913d93409cf680857da32f93019ee.png"
title="Matlab 绘图窗口"
alt="Matlab 绘图窗口"
width="85%"
>
&lt;span class="caption">◎ Matlab 绘图窗口&lt;/span>
&lt;/span>
&lt;blockquote>
&lt;p>&lt;strong>具体步骤&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>&lt;code>文件&lt;/code> $\to$ &lt;code>导出设置&lt;/code>&lt;/li>
&lt;li>&lt;code>渲染&lt;/code> $\to$ &lt;code>勾选自定义渲染器&lt;/code> 并选择 &lt;code>painters(向量格式) &lt;/code>&lt;/li>
&lt;li>选择&lt;code>分辨率(dpi)&lt;/code>: 300 / 600&lt;/li>
&lt;li>&lt;code>导出&lt;/code> 不同格式(eps, svg, pdf...)&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>&lt;img src="https://ttfou.com/images/2020/03/05/c630e39fc0f2a3a0eb9ff23e46711330.gif" width=85% />&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/023cb316-772e-46ed-a8bb-260875968fe2.svg"
title="svg 示例图"
alt="svg 示例图"
width="85%"
>
&lt;span class="caption">◎ svg 示例图&lt;/span>
&lt;/span>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/cda49a4e-a267-4a92-a2cf-98e47068085f.png"
title="放大后依旧清晰"
alt="放大后依旧清晰"
width="85%"
>
&lt;span class="caption">◎ 放大后依旧清晰&lt;/span>
&lt;/span></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/programming/">programming</category><category domain="https://matnoble.me/tags/matlab/">Matlab</category></item><item><title>LaTeX 排版「句号」or「句点」</title><link>https://matnoble.me/tech/latex/latex-period/</link><guid isPermaLink="true">https://matnoble.me/tech/latex/latex-period/</guid><pubDate>Thu, 05 Mar 2020 00:13:54 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/4e7ca500-bdca-42dc-9444-bffa8af84fc5.png" width="95%" />&lt;/p>
&lt;div align="center">&lt;a href="https://matnoble.me/series/latex">◎ 你过来啊 🤞&lt;/a>&lt;/div>
&lt;h2 id="句号-or-句点">句号 or 句点&lt;/h2>
&lt;blockquote>
&lt;p>由于中文空心句号是一个小圈，容易与作为下标的数字 &lt;code>0&lt;/code> 或字母 &lt;code>o&lt;/code> 混淆。因此，在专业数学书籍、论文排版中，最好是使用实心句点 &lt;code>．&lt;/code> 来代替中文空心句号&lt;code>。&lt;/code>&lt;/p>
&lt;footer>
&lt;strong>始终&lt;/strong>
&lt;cite>
&lt;a href="https://liam.page/2016/05/12/the-hidden-skill-of-the-xeCJK-package-Mapping/" title="https://liam.page/2016/05/12/the-hidden-skill-of-the-xeCJK-package-Mapping/">liam.page/2016/05/12/...&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
&lt;p>以上所说的使用实心句点是指..全篇使用.., 文章前后不宜出现不同的符号. 从本科毕业设计就坚持使用用句点, 但是, 之前两次数学建模的过程中, 非数学学院的队友感到诧异, 理科和工科还是有差距的吧.&lt;/p>
&lt;p>但有时写中文文章, 敲空心句号&lt;code>。&lt;/code>已成习惯, 所以需要一个省时省力的方法. 以上链接中, 也给了相应解决方案, 就是使用 &lt;code>xeCJK&lt;/code> 宏包提供的 &lt;code>Mapping&lt;/code> 选项&lt;sup id="fnref:1">&lt;a href="https://matnoble.me/tech/latex/latex-period/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. 之前本站也介绍过使用 &lt;code>xeCJK&lt;/code> 宏包实现&lt;a href="https://matnoble.me/posts/latex-support-chinese/#xecjk-%E5%AE%9E%E7%8E%B0%E4%B8%AD%E8%8B%B1%E6%B7%B7%E6%8E%92">中英混合排版&lt;/a>, 直接上代码&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="c">% 该文件使用 xelatex 命令可以编译通过
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\documentclass&lt;/span>&lt;span class="na">[12pt, a4paper]&lt;/span>&lt;span class="nb">{&lt;/span>article&lt;span class="nb">}&lt;/span>
&lt;span class="k">\usepackage&lt;/span>&lt;span class="nb">{&lt;/span>fontspec&lt;span class="nb">}&lt;/span>
&lt;span class="k">\usepackage&lt;/span>&lt;span class="na">[slantfont, boldfont]&lt;/span>&lt;span class="nb">{&lt;/span>xeCJK&lt;span class="nb">}&lt;/span>
&lt;span class="k">\setCJKmainfont&lt;/span>&lt;span class="na">[Mapping = fullwidth-stop]&lt;/span>&lt;span class="nb">{&lt;/span>Source Han Serif SC&lt;span class="nb">}&lt;/span> &lt;span class="c">% 使用开源的思源宋体
&lt;/span>&lt;span class="c">&lt;/span>
&lt;span class="c">% 行距
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\RequirePackage&lt;/span>&lt;span class="nb">{&lt;/span>setspace&lt;span class="nb">}&lt;/span>
&lt;span class="k">\setstretch&lt;/span>&lt;span class="nb">{&lt;/span>1.38&lt;span class="nb">}&lt;/span>
&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>document&lt;span class="nb">}&lt;/span>
说书唱戏劝人方，
三条大路走中央。
善恶到头终有报，
人间正道是沧桑。
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>document&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>使用 &lt;code>xelatex&lt;/code> 编译&lt;/p>
&lt;p>&lt;img src="https://ttfou.com/images/2020/03/05/fb84414100b1b24e93e569ab1ac72213.png" width=75% />&lt;/p>
&lt;style type="text/css">.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:"Font Awesome 5 Free",FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:'\f071'}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:'\f05a'}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:'\f06a'}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:'\f058'}.notice.tip{background:#e6f9e6}&lt;/style>&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>&lt;strong>Mapping 选项&lt;/strong> 总共有两组&lt;/p>
&lt;ul>
&lt;li>&lt;code>Mapping = fullwidth-stop&lt;/code>: 将正常句号“。”转换成全角实心句号“．” &lt;br>
&lt;code>Mapping = full-stop&lt;/code>: 作用相反&lt;/li>
&lt;li>&lt;code>Mapping = han-trad&lt;/code>: 于将简体中文转换成繁体中文&lt;br>
&lt;code>Mapping = han-simp&lt;/code>: 作用相反&lt;/li>
&lt;/ul>&lt;/div>
&lt;p>简体 $\to$ 繁体, 修改上方 $\TeX$ 代码&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="c">% \setCJKmainfont[Mapping = fullwidth-stop]{Source Han Serif SC} % 使用开源的思源宋体
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\setCJKmainfont&lt;/span>&lt;span class="na">[Mapping = han-trad]&lt;/span>&lt;span class="nb">{&lt;/span>Source Han Serif SC&lt;span class="nb">}&lt;/span> &lt;span class="c">% 使用开源的思源宋体
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>显示效果如下:&lt;/p>
&lt;p>&lt;img src="https://ttfou.com/images/2020/03/05/cd04f43de508e58e0e9d318f37ff3083.png" width=70% />&lt;/p>
&lt;p>若没有使用 &lt;code>xeCJK&lt;/code> 宏包, 也可以在导言区中加入以下代码&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="c">% 中文句号改为英文句点
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\catcode&lt;/span>`&lt;span class="k">\。&lt;/span>=&lt;span class="k">\active&lt;/span>
&lt;span class="k">\newcommand&lt;/span>&lt;span class="nb">{&lt;/span>。&lt;span class="nb">}{&lt;/span>&lt;span class="k">\ifmmode\text&lt;/span>&lt;span class="nb">{&lt;/span>．&lt;span class="nb">}&lt;/span>&lt;span class="k">\else&lt;/span> ．&lt;span class="k">\fi&lt;/span>&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;em>.tex 文件属于纯文本文件, 利用熟悉的编辑器的&lt;strong>查找替换&lt;/strong>也能解决此问题&lt;/em>&lt;/p>
&lt;h2 id="句点的正确使用方法">句点的正确使用方法&lt;/h2>
&lt;p>上面建议在数学类中英混排文档中使用实心句点 &lt;code>．&lt;/code> 来代替中文空心句号&lt;code>。&lt;/code>&lt;/p>
&lt;p>其实, 在纯英文排版中, 句点也是有使用规范的&lt;sup id="fnref:2">&lt;a href="https://matnoble.me/tech/latex/latex-period/#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;/p>
&lt;ul>
&lt;li>英文排版时 $\TeX$ 通常默认句号 &lt;code>.&lt;/code> 表示一句话的结束, 因此在处理句号时会留出稍宽一点的水平间距. 但是有些情况下, 句号并不代表句子的结尾, 比如「i.e. a word」和「e.g. a word」. 按照 $\TeX$ 默认规则, 这里的宽度会比正常句中单词之间的间隔稍大一些, 因此我们需要使用 &lt;code>\&lt;/code> (即一个反斜杠 + 一个空格)来消除这个过大的间距: &lt;code>i.e.\ a word&lt;/code> 以及 &lt;code>e.g.\ a word&lt;/code>.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">Two people i.e. you and me...
Two people i.e.&lt;span class="k">\ &lt;/span>you and me...
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://ttfou.com/images/2020/03/05/0b2ab3c6633944ee98645eb34601dda9.png" title="latex 句点" alt="latex 句点" />&lt;/p>
&lt;ul>
&lt;li>另一种特殊情况下, $\TeX$ 并不会认为句号表示句子的结尾, 那就是&lt;strong>句号跟在一个大写字母的后面&lt;/strong>. 此时 $\TeX$ 会认为这个句号表示人名缩写的间隔符, 因此仍然按照正常间距来排版, 比如「A. Einstein」. 然而这个看似贴心的规则在一些情况下会适得其反, 比如一句话明明以缩略语结尾, $\TeX$ 反而认为这并不是一句话的结尾: 「…… in NBA. He…」. 此时, 排版出的「He」之前的空格会小于正常的句间间距. 这种情况下, 需要使用 &lt;code>\@.&lt;/code>(反斜杠 + @ + 句号 + 空格)来取代原先的句号, 即 &lt;code>... in NBA\@. He...&lt;/code> &lt;code>\@ &lt;/code> 用来强制告诉 $\TeX$ 这里的的确确是一个句子的结尾.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">... played in NBA. He was ...
... played in NBA&lt;span class="k">\@&lt;/span>. He was ...
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://ttfou.com/images/2020/03/05/12f04a5977cc3af44b4d12edbbf8c67a.png" title="latex 句点" alt="latex 句点" />&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="http://mirrors.ibiblio.org/CTAN/macros/xetex/latex/xecjk/xeCJK.pdf">http://mirrors.ibiblio.org/CTAN/macros/xetex/latex/xecjk/xeCJK.pdf&lt;/a> &lt;a href="https://matnoble.me/tech/latex/latex-period/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>&lt;a href="https://ridiqulous.com/latex-notes-details/">https://ridiqulous.com/latex-notes-details/&lt;/a> &lt;a href="https://matnoble.me/tech/latex/latex-period/#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/latex/">latex</category><category domain="https://matnoble.me/series/latex/">LaTeX 排版「冷」知识</category><category domain="https://matnoble.me/tags/">标签云</category></item><item><title>LaTeX 给普通文本和数学环境加粗</title><link>https://matnoble.me/tech/latex/latex-bold/</link><guid isPermaLink="true">https://matnoble.me/tech/latex/latex-bold/</guid><pubDate>Wed, 04 Mar 2020 00:10:25 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>在 $\LaTeX{}$ 里, 给文本加粗有两种: 一种是普通文字, 一种是数学环境&lt;/p>
&lt;h2 id="普通文本">普通文本&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">数系家园
&lt;span class="k">\textbf&lt;/span>&lt;span class="nb">{&lt;/span>数系家园&lt;span class="nb">}&lt;/span>
&lt;span class="nb">{&lt;/span>&lt;span class="k">\bfseries&lt;/span> 数系家园&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;center>
数系家园&lt;br>
$\textbf{数系家园}$&lt;br>
$\textbf{数系家园}$
&lt;/center>
&lt;blockquote>
&lt;p>&lt;code>\bfseries&lt;/code>与&lt;code>\textbf&lt;/code>显示效果并没有显著不同, 但建议采用前者&lt;sup id="fnref:1">&lt;a href="https://matnoble.me/tech/latex/latex-bold/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;/blockquote>
&lt;h2 id="数学环境">数学环境&lt;/h2>
&lt;h3 id="向量">向量&lt;/h3>
&lt;p>可以选择带有向量箭头&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="s">$&lt;/span>&lt;span class="nb"> &lt;/span>&lt;span class="nv">\vec&lt;/span>&lt;span class="nb"> a &lt;/span>&lt;span class="s">$&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$ \vec a $$&lt;/p>
&lt;p>任意长度的箭头&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="s">$&lt;/span>&lt;span class="nb"> &lt;/span>&lt;span class="nv">\overrightarrow&lt;/span>&lt;span class="nb">{AB} &lt;/span>&lt;span class="s">$&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$ \overrightarrow{AB} $$&lt;/p>
&lt;p>要想加粗向量, 建议载入&lt;code>bm&lt;/code>包&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\usepackage&lt;/span>&lt;span class="nb">{&lt;/span>bm&lt;span class="nb">}&lt;/span>
&lt;span class="s">$&lt;/span>&lt;span class="nv">\bm&lt;/span>&lt;span class="nb">{a}&lt;/span>&lt;span class="s">$&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$\boldsymbol{a}$$&lt;/p>
&lt;h3 id="矩阵">矩阵&lt;/h3>
&lt;p>矩阵粗体可以有两种&lt;/p>
&lt;ul>
&lt;li>直体&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="s">$&lt;/span>&lt;span class="nv">\mathbf&lt;/span>&lt;span class="nb">{ABC}&lt;/span>&lt;span class="s">$&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$\mathbf{ABC}$$&lt;/p>
&lt;ul>
&lt;li>斜体&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="s">$&lt;/span>&lt;span class="nv">\boldsymbol&lt;/span>&lt;span class="nb">{ABC}&lt;/span>&lt;span class="s">$&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$\boldsymbol{ABC}$$&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="https://tex.stackexchange.com/questions/131180/bfseries-bolds-more-than-intended">https://tex.stackexchange.com/questions/131180/bfseries-bolds-more-than-intended&lt;/a> &lt;a href="https://matnoble.me/tech/latex/latex-bold/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/latex/">latex</category><category domain="https://matnoble.me/series/latex/">LaTeX 排版「冷」知识</category><category domain="https://matnoble.me/tags/">标签云</category></item><item><title>SVD 于解线性方程组之应用</title><link>https://matnoble.me/math/linear-algebra/svd-apply-to-linear-system/</link><guid isPermaLink="true">https://matnoble.me/math/linear-algebra/svd-apply-to-linear-system/</guid><pubDate>Tue, 03 Mar 2020 06:21:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h2 id="释题">释题&lt;/h2>
&lt;p>奇异值分解(Singular Value Decomposition, 简称:SVD)实际上是一种&lt;a href="https://matnoble.me/posts/svd1/">矩阵分解&lt;/a>, 记得数值分析老师说过:&lt;/p>
&lt;blockquote>
&lt;p>每一种「矩阵分解」都对应一种「解线性方程组」的算法, 例如 LU 分解, QR 分解和 Cholesky 分解等.&lt;/p>
&lt;/blockquote>
&lt;p>那么 SVD 分解也应对应一种求解线性方程组的算法.&lt;/p>
&lt;h2 id="准备工作">准备工作&lt;/h2>
&lt;p>为推导该算法, 应有以下知识储备&lt;/p>
&lt;h3 id="线性方程组">线性方程组&lt;/h3>
&lt;p>假设 $\boldsymbol{A}$ 是一个 $m\times n$ 阶实矩阵, ${\rm rank} \boldsymbol{A} =r, \mathbf{b}\in \mathbb{R}^m$, 求解 $\mathbf{x}\in \mathbb{R}^n$ 满足&lt;/p>
&lt;p>$$
\begin{equation}
\boldsymbol{A}\mathbf{x = b}
\label{eq:1}
\end{equation}
$$&lt;/p>
&lt;ul>
&lt;li>${\rm rank} \boldsymbol{A} = {\rm rank} \bigl[\boldsymbol{A}, \mathbf{b}\bigr] \Longrightarrow$ 方程组有解
&lt;ul>
&lt;li>若 $n=r$ (列满秩) $\Longrightarrow$ 存在唯一解&lt;/li>
&lt;li>若 $n&amp;gt;r \Longrightarrow$ 有无穷多解&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>${\rm rank} \boldsymbol{A} + 1 = {\rm rank} [\boldsymbol{A}, \mathbf{b}] \Longrightarrow$ 方程组无解&lt;/li>
&lt;/ul>
&lt;p>进一步地, 当方程组无解时, 我们可以找到其
&lt;mark>「最小二乘解」&lt;/mark>
&lt;sup id="fnref:1">&lt;a href="https://matnoble.me/math/linear-algebra/svd-apply-to-linear-system/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/390fed52-66a6-4c8f-80b1-366e381e2724.png"
title="最小二乘解三维示意图"
alt="最小二乘解三维示意图"
width="85%"
>
&lt;span class="caption">◎ 最小二乘解三维示意图&lt;/span>
&lt;/span>
&lt;p>设 $\mathbf{p}$ 为 $\mathbf{b}$ 在 $C(\boldsymbol{A})$ 超平面的投影&lt;/p>
&lt;p>$$
\begin{equation}
\boldsymbol{A}\check{\mathbf x} = {\mathbf p}
\label{eq:least}
\end{equation}
$$&lt;/p>
&lt;p>$\check{\mathbf x}$ 即为最小二乘解. 类似地,&lt;/p>
&lt;ul>
&lt;li>若 $n=r$ (列满秩) $\Longrightarrow$ 存在唯一最小二乘解&lt;/li>
&lt;li>若 $n&amp;gt;r \Longrightarrow$ 有无穷多最小二乘解&lt;/li>
&lt;/ul>
&lt;p>对于无穷解情况, 用空间的角度解释为: 零空间 $N(\boldsymbol{A})$ 非空. 其一般解的结构为:&lt;/p>
&lt;p style="text-align: center">
一般解 = 特殊解 + 其次解
&lt;/p>
&lt;blockquote>
&lt;p>..线性方程组.. 和 ..最小二乘法.. 都是线性代数中所研究的核心问题.&lt;/p>
&lt;/blockquote>
&lt;h3 id="奇异值分解">奇异值分解&lt;/h3>
&lt;p>我们已经知道&lt;sup id="fnref:1">&lt;a href="https://matnoble.me/math/linear-algebra/svd-apply-to-linear-system/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>, 对于上述实矩阵 $\boldsymbol{A}$ 满足&lt;/p>
&lt;p>$$
\begin{cases}
\boldsymbol{A}\mathbf{v}_i =\sigma_i\mathbf{u}_i, &amp;amp; i=1, \cdots, r
\\[3pt]
\boldsymbol{A}\mathbf{v}_i =0, &amp;amp;i=r+1, \cdots, n
\\[3pt]
\boldsymbol{A}^{\mathsf T}\mathbf{u}_j=\sigma_j\mathbf{v}_j, &amp;amp;j=1, \cdots, r
\\[3pt]
\boldsymbol{A}^{\mathsf T}\mathbf{u}_j=0, &amp;amp;j=r+1, \cdots, m
\end{cases}
$$&lt;/p>
&lt;ul>
&lt;li>$\{ \mathbf{v}_{1}, \cdots, \mathbf{v}_r \}$ 是行空间 $C(\boldsymbol{A}^{\mathsf T})$ 的正交基底;&lt;/li>
&lt;li>$\{ \mathbf{v}_{r+1}, \cdots, \mathbf{v}_n \}$ 是零空间 $N(\boldsymbol{A})$ 的正交基底;&lt;/li>
&lt;li>$\{ \mathbf{u}_1, \cdots \mathbf{u}_r \}$ 是列空间 $C(\boldsymbol{A})$ 的正交基底;&lt;/li>
&lt;li>$\{ \mathbf{u}_{r+1}, \cdots \mathbf{u}_m \}$ 是左零空间 $N(\boldsymbol{A}^{\mathsf T})$ 的正交基底.&lt;/li>
&lt;/ul>
&lt;p>其中, $\sigma$ 称为..奇异值.. . 写成矩阵的形式:&lt;/p>
&lt;p>$$
\begin{equation}
\begin{aligned}
\boldsymbol{A} &amp;amp; = [{\mathbf u}_1, \cdots, {\mathbf u}_r, {\mathbf u}_{r+1}, \cdots, {\mathbf u}_m]
\\[3pt]
&amp;amp; \quad \left[
\begin{array}{ccc|c}
\sigma_1&amp;amp;&amp;amp; &amp;amp;\\&lt;br>
&amp;amp;\ddots&amp;amp;&amp;amp; \boldsymbol{Z}_{r, n-r}\\&lt;br>
&amp;amp;&amp;amp;\sigma_r &amp;amp;\\&lt;br>
\hline &amp;amp; \boldsymbol{Z}_{m-r, r}&amp;amp; &amp;amp; \boldsymbol{Z}_{m-r, n-r}
\end{array} \right]
\begin{bmatrix}
{\mathbf v}_1^{\mathsf T} \\&lt;br>
\vdots \\&lt;br>
{\mathbf v}_r^{\mathsf T} \\&lt;br>
{\mathbf v}_{r+1}^{\mathsf T} \\&lt;br>
\vdots \\&lt;br>
{\mathbf v}_n^{\mathsf T}
\end{bmatrix}
\\[3pt]
&amp;amp; = \boldsymbol{U} \boldsymbol{\Sigma} \boldsymbol{V}^{\mathsf T}
\end{aligned}
\label{eq:svd}
\end{equation}
$$&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/56a744fd-42a5-4b93-a264-a96729d6c73f.png"
title="四个正交基底"
alt="四个正交基底"
width="85%"
>
&lt;span class="caption">◎ 四个正交基底&lt;/span>
&lt;/span>
&lt;h2 id="算法推导">算法推导&lt;/h2>
&lt;p>将式 (\ref{eq:1}) 中的系数矩阵 $\boldsymbol{A}$ 写成式 (\ref{eq:svd}) 的形式&lt;/p>
&lt;p>$$
\boldsymbol{U} \boldsymbol{\Sigma} \boldsymbol{V}^{\mathsf T}{\mathbf x = b}
$$&lt;/p>
&lt;p>左右同乘 $\boldsymbol{U}^{\mathsf T}$&lt;/p>
&lt;p>$$
\begin{equation}
\boldsymbol{\Sigma} \boldsymbol{V}^{\mathsf T}{\mathbf x} = \boldsymbol{U}^{\mathsf T}{\mathbf b}
\label{eq:4}
\end{equation}
$$&lt;/p>
&lt;p>记 $\hat{\mathbf x} = \boldsymbol{V}^{\mathsf T}{\mathbf x}$ 及 $\hat{\mathbf b} = \boldsymbol{U}^{\mathsf T}{\mathbf b}$, 则式 (4) 改写为&lt;/p>
&lt;p>$$
\begin{equation}
\boldsymbol{\Sigma} \hat{\mathbf x} = \hat{\mathbf b}
\label{eq:5}
\end{equation}
$$&lt;/p>
&lt;p>这里需要注意的是: &lt;strong>$\boldsymbol{\Sigma}$ 是对角矩阵&lt;/strong>. 对线性方程组 (\ref{eq:5}) 可分行和列来讨论:&lt;/p>
&lt;ul>
&lt;li>$m&amp;gt;r$ 即 $\boldsymbol{\Sigma}$ 的 $r+1$ 行至 $m$ 行全部为 $0$. &lt;br>&lt;/li>
&lt;/ul>
&lt;p>所以, 式 (\ref{eq:5}) 有解, 当且仅当满足式 (\ref{eq:6})&lt;/p>
&lt;p>$$
\begin{equation}
\hat{\mathbf b}_k = {\mathbf u}_k^{\mathsf T}{\mathbf b} = 0,\ k=r+1, \cdots, n
\label{eq:6}
\end{equation}
$$&lt;/p>
&lt;p>进而得到,&lt;/p>
&lt;p>$$
\hat{\mathbf x} = \boldsymbol{V}^{\mathsf T}{\mathbf x} = \Biggl[ \frac{{\mathbf u}_1^{\mathsf T}{\mathbf b}}{\sigma_1}\ \cdots\ \frac{{\mathbf u}_r^{\mathsf T}{\mathbf b}}{\sigma_r} \ 0\ \cdots\ 0 \Biggr]^{\mathsf T}
$$&lt;/p>
&lt;p>接着,&lt;/p>
&lt;p>$$
\begin{equation}
\begin{aligned}
{\mathbf x} &amp;amp; = \boldsymbol{V}\hat{\mathbf x} = [{\mathbf v}_1, \cdots, {\mathbf v}_r, {\mathbf v}_{r+1}, \cdots, {\mathbf v}_n]
\begin{bmatrix}
\frac{{\mathbf u}_1^{\mathsf T}{\mathbf b}}{\sigma_1}
\\&lt;br>
\vdots
\\&lt;br>
\frac{{\mathbf u}_r^{\mathsf T}{\mathbf b}}{\sigma_r}
\\&lt;br>
0
\\&lt;br>
\vdots
\\&lt;br>
0
\end{bmatrix}
\\[3pt]
&amp;amp; = \sum_{i=1}^r \frac{{\mathbf u}_i^{\mathsf T}{\mathbf b}}{\sigma_i} {\mathbf v}_i
\end{aligned}
\label{eq:8}
\end{equation}
$$&lt;/p>
&lt;p>若不满足式 (\ref{eq:6}), 则存在最小二乘解, 参考式 (\ref{eq:least}), &lt;strong>结合 $\boldsymbol{\Sigma}$ 的对角性&lt;/strong>, 投影向量 ${\mathbf p}$ 为舍去后 $m-r$ 个元的向量 $\hat{\mathbf b}$, 即此时最小二乘解有与式 (\ref{eq:8}) ..形式相同..&lt;/p>
&lt;ul>
&lt;li>$n&amp;gt;r$ 即 $\boldsymbol{\Sigma}$ 列不满秩, 零空间 $N({\boldsymbol{A}})$ 非空. 此时, 存在不唯一解或不唯一的最小二乘解.&lt;/li>
&lt;/ul>
&lt;p>考虑 $j&amp;gt;r$&lt;/p>
&lt;p>$$
\boldsymbol{A}{\mathbf v_j} = \boldsymbol{U} \boldsymbol{\Sigma} \boldsymbol{V}^{\mathsf T}{\mathbf v_j} = \boldsymbol{U} \boldsymbol{\Sigma}{\mathbf e_j} = \boldsymbol{0}
$$&lt;/p>
&lt;p>其中, ${\mathbf e_j}$ 为第 $j$ 元素为 $1$, 其它元素为 $0$ 的 $n$ 维向量. 上式表示 $\{ {\mathbf v}_{r+1} \cdots \mathbf{v}_n \}$ 为零空间 $N(\boldsymbol{A})$ 的基底. 所以, 一般解 $=$ 特解 $+$ 齐次解:&lt;/p>
&lt;p>$$
{\mathbf x} = \sum_{i=1}^r \frac{{\mathbf u}_i^{\mathsf T}{\mathbf b}}{\sigma_i}{\mathbf v}_i + \sum_{i=r+1}^n c_i{\mathbf v}_i
$$&lt;/p>
&lt;p>其中, $c_i$ 为任意数. 若 $n=r$, 就只剩下第一项, 即有唯一解或唯一最小二乘解.&lt;/p>
&lt;p>因为 $\{ \mathbf{v}_i \}$ 是一组单位正交基, 所以&lt;/p>
&lt;p>$$
\lVert \mathbf{x} \rVert^2 = \mathbf{x}^{\mathsf T}\mathbf{x} = \sum_{i=1}^r (\frac{{\mathbf u}_i^{\mathsf T}{\mathbf b}}{\sigma_i})^2 + \sum_{i=r+1}^n c_i^2
$$&lt;/p>
&lt;p>也就是说, 当方程组有解时, 存在唯一解 $\bar{\mathbf{x}}$ 长度最小, 且 $\bar{\mathbf{x}}\in C(\boldsymbol{A}^{\mathsf T})$, 写成矩阵形式:&lt;/p>
&lt;p>$$
\begin{aligned}
\bar{\mathbf x} &amp;amp; = \begin{bmatrix}
\mathbf{v}_1&amp;amp;\cdots&amp;amp;\mathbf{v}_r
\end{bmatrix}
\begin{bmatrix}
1/\sigma_1 &amp;amp; &amp;amp; \\
&amp;amp; \ddots &amp;amp; \\&lt;br>
&amp;amp; &amp;amp; 1/\sigma_r
\end{bmatrix}
\begin{bmatrix} \mathbf{u}_1^{\mathsf T} \\ \vdots \\ \mathbf{u}_r^{\mathsf T}
\end{bmatrix}
\mathbf{b}
\\[3pt]
&amp;amp; = \bar{\boldsymbol{V}}\bar{\boldsymbol{\Sigma}} \bar{\boldsymbol{U}}^{\mathsf T}
\mathbf{b}
\end{aligned}
$$&lt;/p>
&lt;p>对于任意矩阵 $\boldsymbol{A}$ 都可以计算&lt;/p>
&lt;p>$$
\check{\boldsymbol{A}} = \bar{\boldsymbol{V}}\bar{\boldsymbol{\Sigma}} \bar{\boldsymbol{U}}^{\mathsf T}
$$&lt;/p>
&lt;p>从而有解或最小二乘解&lt;/p>
&lt;p>$$
\check{\mathbf x} = \check{\boldsymbol{A}}\mathbf{b}
$$&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;ul>
&lt;li>$m=n=r$&lt;/li>
&lt;/ul>
&lt;p>方程组有唯一解: $ \mathbf{x} = \boldsymbol{A}^{-1} \mathbf{b} $&lt;/p>
&lt;ul>
&lt;li>$ m&amp;gt;r, n=r $&lt;/li>
&lt;/ul>
&lt;p>方程组有唯一解或唯一最小二乘解, 形式相同:&lt;/p>
&lt;p>$$
\check{\mathbf{x}} = \sum_{i=1}^r \frac{{\mathbf u}_i^{\mathsf T}{\mathbf b}}{\sigma_i} {\mathbf v}_i = (\boldsymbol{A}^{\mathsf T}\boldsymbol{A})^{-1}\boldsymbol{A}^{\mathsf T}{\mathbf{b}}
$$&lt;/p>
&lt;p>后一个等号参照&lt;sup id="fnref:2">&lt;a href="https://matnoble.me/math/linear-algebra/svd-apply-to-linear-system/#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;/p>
&lt;ul>
&lt;li>$m=r, n&amp;gt;r$&lt;/li>
&lt;/ul>
&lt;p>方程组有无穷多解, 一般解为:&lt;/p>
&lt;p>$$
{\mathbf x} = \sum_{i=1}^r \frac{{\mathbf u}_i^{\mathsf T}{\mathbf b}}{\sigma_i}{\mathbf v}_i + \sum_{i=r+1}^n c_i{\mathbf v}_i
$$&lt;/p>
&lt;p>前一项属于行空间 $C(\boldsymbol{A}^\mathsf{T})$.&lt;/p>
&lt;ul>
&lt;li>$m&amp;gt;r, n&amp;gt;r$&lt;/li>
&lt;/ul>
&lt;p>方程组可能有无穷多解或有无穷多最小二乘解.&lt;/p>
&lt;p>$$
\check{{\mathbf x}} = \sum_{i=1}^r \frac{{\mathbf u}_i^{\mathsf T}{\mathbf b}}{\sigma_i}{\mathbf v}_i + \sum_{i=r+1}^n c_i{\mathbf v}_i
$$&lt;/p>
&lt;p>前一项属于行空间 $C(\boldsymbol{A}^\mathsf{T})$.&lt;/p>
&lt;hr />
&lt;p>更多..奇异值分解..的内容可以戳 &lt;a href="https://matnoble.me/tags/%E5%A5%87%E5%BC%82%E5%80%BC%E5%88%86%E8%A7%A3/">&lt;strong>这里&lt;/strong>&lt;/a>&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="https://matnoble.me/posts/matrixleastsquares/#%E6%9C%80%E5%B0%8F%E4%BA%8C%E4%B9%98%E8%A7%A3">https://matnoble.me/posts/matrixleastsquares/#%E6%9C%80%E5%B0%8F%E4%BA%8C%E4%B9%98%E8%A7%A3&lt;/a> &lt;a href="https://matnoble.me/math/linear-algebra/svd-apply-to-linear-system/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>&lt;a href="https://matnoble.me/posts/matrixleastsquares/#%E5%88%97%E6%BB%A1%E7%A7%A9">https://matnoble.me/posts/matrixleastsquares/#%E5%88%97%E6%BB%A1%E7%A7%A9&lt;/a> &lt;a href="https://matnoble.me/math/linear-algebra/svd-apply-to-linear-system/#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description><category domain="https://matnoble.me/math/">math</category><category domain="https://matnoble.me/math/linear-algebra/">Linear-Algebra</category><category domain="https://matnoble.me/series/mla/">线代拾遗</category><category domain="https://matnoble.me/tags/%E6%9C%80%E5%B0%8F%E4%BA%8C%E4%B9%98%E6%B3%95/">最小二乘法</category><category domain="https://matnoble.me/tags/%E5%A5%87%E5%BC%82%E5%80%BC%E5%88%86%E8%A7%A3/">奇异值分解</category></item><item><title>如何在 LaTeX 中「排版中文」?</title><link>https://matnoble.me/tech/latex/latex-support-chinese/</link><guid isPermaLink="true">https://matnoble.me/tech/latex/latex-support-chinese/</guid><pubDate>Sun, 01 Mar 2020 00:13:54 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/4e7ca500-bdca-42dc-9444-bffa8af84fc5.png" width="95%" />&lt;/p>
&lt;div align="center">&lt;a href="https://matnoble.me/series/latex">◎ 你过来啊 🤞&lt;/a>&lt;/div>
&lt;br>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>$\LaTeX{}$ 原生不支持中文(毕竟是外国人发明的), 但优秀的国人们, 使用了很多方法使 $\LaTeX{}$ 支持中文, 本文详细介绍使用 CTeX 宏集和 xeCJK 宏包实现中文排版的方法.&lt;/p>
&lt;h2 id="ctex-宏集">CTeX 宏集&lt;/h2>
&lt;p>$$
C\TeX \text{宏集} \neq C\TeX \text{套装}
$$&lt;/p>
&lt;blockquote>
&lt;p>CTeX 宏基是面向中文排版的通用 $\LaTeX$ 排版框架, 为中文 $\LaTeX$ 文档提供了汉字输出支持, 标点压缩, 字体字号命令, 标题文字汉化, 中文版式调整, 数字日期转换等支持功能, 可适应论文, 报告, 书籍, 幻灯片等不同类型的中文文档.&lt;/p>
&lt;footer>
&lt;strong>&lt;/strong>
&lt;cite>
&lt;a href="http://mirrors.ibiblio.org/CTAN/language/chinese/ctex/ctex.pdf" title="http://mirrors.ibiblio.org/CTAN/language/chinese/ctex/ctex.pdf">CTeX 宏集&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
&lt;blockquote>
&lt;p>CTeX 中文套装是基于 Windows 下的 MiKTeX 系统，集成了编辑器 WinEdt 和 PostScript 处理软件 Ghostscript 和 GSview 等主要工具。 CTeX 中文套装在 MiKTeX 的基础上增加了对中文的完整支持。 CTeX 中文套装支持 CJK, xeCJK, CCT, TY 等多种中文 TeX 处理方式。&lt;/p>
&lt;footer>
&lt;strong>&lt;/strong>
&lt;cite>
&lt;a href="http://www.ctex.org/CTeX" title="http://www.ctex.org/CTeX">CTeX 套装&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
&lt;p>由于 CTeX 中文套装&lt;sup id="fnref:1">&lt;a href="https://matnoble.me/tech/latex/latex-support-chinese/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>已停止更新(上一次更新是 2012 年), 所以强烈建议&lt;a href="https://matnoble.me/posts/install-texlive/"> Linux 和 Windows 用户安装 TeXLive&lt;/a>, Mac OSX 用户安装 &lt;a href="http://www.tug.org/mactex/">MacTeX&lt;/a>.　&lt;/p>
&lt;p>&lt;br />&lt;/p>
&lt;p>如果你的文章主要由中文构成，你可以考虑使用 CTeX 宏集排版中文. 在 X⁠eTeX 或 LuaTeX 引擎下使用时, CTeX 宏集底层将依赖 &lt;code>fontspec&lt;/code> 宏包&lt;sup id="fnref:2">&lt;a href="https://matnoble.me/tech/latex/latex-support-chinese/#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>.&lt;/p>
&lt;h3 id="ctexart-文档类">ctexart 文档类&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\documentclass&lt;/span>&lt;span class="na">[a4paper, 12pt, UTF8]&lt;/span>&lt;span class="nb">{&lt;/span>ctexart&lt;span class="nb">}&lt;/span>
&lt;span class="k">\usepackage&lt;/span>&lt;span class="na">[T1]&lt;/span>&lt;span class="nb">{&lt;/span>fontenc&lt;span class="nb">}&lt;/span>
&lt;span class="c">% 西文字体
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\setmainfont&lt;/span>&lt;span class="nb">{&lt;/span>Times New Roman&lt;span class="nb">}&lt;/span> &lt;span class="c">% 西文默认衬线字体(serif)
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\setsansfont&lt;/span>&lt;span class="nb">{&lt;/span>Helvetica&lt;span class="nb">}&lt;/span> &lt;span class="c">% 西文默认无衬线字体(sans serif), Windows 下可使用类似的 Arial 字体,
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\setmonofont&lt;/span>&lt;span class="nb">{&lt;/span>Courier New&lt;span class="nb">}&lt;/span> &lt;span class="c">% 西文默认的等宽字体
&lt;/span>&lt;span class="c">% 中文字体
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\setCJKmainfont&lt;/span>&lt;span class="nb">{&lt;/span>Source Han Serif SC&lt;span class="nb">}&lt;/span>
&lt;span class="k">\setCJKsansfont&lt;/span>&lt;span class="nb">{&lt;/span>Source Han Sans SC&lt;span class="nb">}&lt;/span>
&lt;span class="k">\setCJKmonofont&lt;/span>&lt;span class="nb">{&lt;/span>Source Han Sans SC&lt;span class="nb">}&lt;/span>
&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>document&lt;span class="nb">}&lt;/span>
&lt;span class="nb">{&lt;/span> &lt;span class="k">\centering&lt;/span>
说书唱戏劝人方，&lt;span class="k">\par&lt;/span>
三条大路走中央。&lt;span class="k">\par&lt;/span>
善恶到头终有报，&lt;span class="k">\par&lt;/span>
人间正道是沧桑。&lt;span class="k">\par&lt;/span>
&lt;span class="nb">}&lt;/span>
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>document&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>建议使用 &lt;code>\usepackage[T1]{fontenc}&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>&lt;p>If you don't use \usepackage[T1]{fontenc},&lt;/p>
&lt;ul>
&lt;li>Words containing accented characters cannot be automatically hyphenated,&lt;/li>
&lt;li>You cannot properly copy-and-paste such words from the output (DVI/PS/PDF),&lt;/li>
&lt;li>Characters like the pipe sign, less than and greater sign give unexpected results in text.&lt;/li>
&lt;/ul>
&lt;/p>
&lt;footer>
&lt;strong>ShreevatsaR&lt;/strong>
&lt;cite>
&lt;a href="https://tex.stackexchange.com/questions/664/why-should-i-use-usepackaget1fontenc" title="https://tex.stackexchange.com/questions/664/why-should-i-use-usepackaget1fontenc">tex.stackexchange.com/questions/...&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
&lt;h3 id="ctex-宏包">ctex 宏包&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\documentclass&lt;/span>&lt;span class="na">[a4paper, 12pt]&lt;/span>&lt;span class="nb">{&lt;/span>article&lt;span class="nb">}&lt;/span>
&lt;span class="k">\usepackage&lt;/span>&lt;span class="na">[UTF8]&lt;/span>&lt;span class="nb">{&lt;/span>ctex&lt;span class="nb">}&lt;/span>
&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>document&lt;span class="nb">}&lt;/span>
&lt;span class="nb">{&lt;/span> &lt;span class="k">\centering&lt;/span>
说书唱戏劝人方，&lt;span class="k">\par&lt;/span>
三条大路走中央。&lt;span class="k">\par&lt;/span>
善恶到头终有报，&lt;span class="k">\par&lt;/span>
人间正道是沧桑。&lt;span class="k">\par&lt;/span>
&lt;span class="nb">}&lt;/span>
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>document&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>推荐使用 xelatex 命令编译源文件.&lt;/p>
&lt;p>以上两种方法效果类似&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/01/ea5b0f158fabaead708b707fda33b992.jpg"
title=" ctexart 文档类 / ctex 宏包"
alt=" ctexart 文档类 / ctex 宏包"
width="55%"
>
&lt;span class="caption">◎ ctexart 文档类 / ctex 宏包&lt;/span>
&lt;/span>
&lt;hr />
&lt;h2 id="xecjk-实现中英混排5">xeCJK 实现中英混排&lt;sup id="fnref:3">&lt;a href="https://matnoble.me/tech/latex/latex-support-chinese/#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>&lt;/h2>
&lt;p>xeCJK 是一个 XeLaTeX 宏包&lt;sup id="fnref:4">&lt;a href="https://matnoble.me/tech/latex/latex-support-chinese/#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>, 用于排版 CJK 文字, 包括字体选择和标点控制等.&lt;/p>
&lt;p>下面示例利用 xeCJK 宏包实现中英混排:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="c">% 该文件使用 xelatex 命令可以编译通过
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\documentclass&lt;/span>&lt;span class="na">[12pt, a4paper]&lt;/span>&lt;span class="nb">{&lt;/span>article&lt;span class="nb">}&lt;/span>
&lt;span class="k">\usepackage&lt;/span>&lt;span class="nb">{&lt;/span>fontspec&lt;span class="nb">}&lt;/span>
&lt;span class="k">\usepackage&lt;/span>&lt;span class="na">[slantfont, boldfont]&lt;/span>&lt;span class="nb">{&lt;/span>xeCJK&lt;span class="nb">}&lt;/span>
&lt;span class="c">%================================== 设置中文字体 ===========================%
&lt;/span>&lt;span class="c">% 将系统字体名映射为逻辑字体名称, 主要是为了维护的方便
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\newcommand\fontnamehei&lt;/span>&lt;span class="nb">{&lt;/span>Source Han Sans SC&lt;span class="nb">}&lt;/span>
&lt;span class="k">\newcommand\fontnamesong&lt;/span>&lt;span class="nb">{&lt;/span>Source Han Serif SC&lt;span class="nb">}&lt;/span>
&lt;span class="k">\newcommand\fontnamekai&lt;/span>&lt;span class="nb">{&lt;/span>KaiTi&lt;span class="nb">}&lt;/span>
&lt;span class="k">\newcommand\fontnamemono&lt;/span>&lt;span class="nb">{&lt;/span>Source Han Sans SC&lt;span class="nb">}&lt;/span>
&lt;span class="k">\setCJKmainfont&lt;/span>&lt;span class="na">[BoldFont=\fontnamehei]&lt;/span>&lt;span class="nb">{&lt;/span>&lt;span class="k">\fontnamesong&lt;/span>&lt;span class="nb">}&lt;/span> &lt;span class="c">% 设置 CJK 主字体
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\setCJKsansfont&lt;/span>&lt;span class="na">[BoldFont=\fontnamehei]&lt;/span>&lt;span class="nb">{&lt;/span>&lt;span class="k">\fontnamekai&lt;/span>&lt;span class="nb">}&lt;/span> &lt;span class="c">% 设置 CJK 无衬线的字体
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\setCJKmonofont&lt;/span>&lt;span class="nb">{&lt;/span>&lt;span class="k">\fontnamemono&lt;/span>&lt;span class="nb">}&lt;/span> &lt;span class="c">% 设置 CJK 的等宽字体
&lt;/span>&lt;span class="c">%================================== 设置中文字体 ===========================%
&lt;/span>&lt;span class="c">&lt;/span>
&lt;span class="c">% ================================= 设置英文字体 ===========================%
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\setmainfont&lt;/span>&lt;span class="na">[Mapping=tex-text]&lt;/span>&lt;span class="nb">{&lt;/span>Times New Roman&lt;span class="nb">}&lt;/span> &lt;span class="c">% 西文默认衬线字体(serif)
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\setsansfont&lt;/span>&lt;span class="na">[Mapping=tex-text]&lt;/span>&lt;span class="nb">{&lt;/span>Arial&lt;span class="nb">}&lt;/span> &lt;span class="c">% 西文默认无衬线字体(sans serif)
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\setmonofont&lt;/span>&lt;span class="nb">{&lt;/span>Source Code Pro&lt;span class="nb">}&lt;/span> &lt;span class="c">% 西文默认的等宽字体
&lt;/span>&lt;span class="c">% ================================= 设置英文字体 ===========================%
&lt;/span>&lt;span class="c">&lt;/span>
&lt;span class="c">% 开明式 标点
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\punctstyle&lt;/span>&lt;span class="nb">{&lt;/span>kaiming&lt;span class="nb">}&lt;/span>
&lt;span class="c">% 行距
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\RequirePackage&lt;/span>&lt;span class="nb">{&lt;/span>setspace&lt;span class="nb">}&lt;/span>
&lt;span class="k">\setstretch&lt;/span>&lt;span class="nb">{&lt;/span>1.38&lt;span class="nb">}&lt;/span>
&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>document&lt;span class="nb">}&lt;/span>
说书唱戏劝人方，&lt;span class="k">\par&lt;/span>
三条大路走中央。&lt;span class="k">\par&lt;/span>
善恶到头终有报，&lt;span class="k">\par&lt;/span>
人间正道是沧桑。&lt;span class="k">\par&lt;/span>
&lt;span class="k">\texttt&lt;/span>&lt;span class="nb">{&lt;/span>数系家园　数学小兵儿　等宽字体&lt;span class="nb">}&lt;/span>
&lt;span class="k">\textsf&lt;/span>&lt;span class="nb">{&lt;/span>数系家园　数学小兵儿　sansfont　无衬线的字体&lt;span class="nb">}&lt;/span>
&lt;span class="k">\textrm&lt;/span>&lt;span class="nb">{&lt;/span>数系家园　数学小兵儿　mainfont　正文字体&lt;span class="nb">}&lt;/span> &lt;span class="k">\\&lt;/span>
&lt;span class="k">\texttt&lt;/span>&lt;span class="nb">{&lt;/span>MatNoble Ross&lt;span class="nb">}&lt;/span>
&lt;span class="k">\textsf&lt;/span>&lt;span class="nb">{&lt;/span>MatNoble Ross&lt;span class="nb">}&lt;/span>
&lt;span class="k">\textrm&lt;/span>&lt;span class="nb">{&lt;/span>MatNoble Ross&lt;span class="nb">}&lt;/span>
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>document&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/01/770bd56bce8072504addf47ddcab3c0d.jpg"
title="xeCJK 效果图"
alt="xeCJK 效果图"
width="95%"
>
&lt;span class="caption">◎ xeCJK 效果图&lt;/span>
&lt;/span>
&lt;p>&lt;br />&lt;/p>
&lt;p>xeCJK 宏包有 4 个选项&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\usepackage&lt;/span>&lt;span class="na">[Options]&lt;/span>&lt;span class="nb">{&lt;/span>xeCJK&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>Options&lt;/p>
&lt;ul>
&lt;li>BlodFont:　　　启用 CJK &lt;strong>粗体字&lt;/strong>&lt;/li>
&lt;li>SlantFont:　　　启用 &lt;em>斜体字&lt;/em>&lt;/li>
&lt;li>CJKnumber:　　调用 CJKnumb 宏包&lt;/li>
&lt;li>CJKchecksingle:　避免单个汉字独占一行&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;br />&lt;/p>
&lt;p>对于中文字体配置:&lt;/p>
&lt;ul>
&lt;li>&lt;code>\setCJKmainfont{fontname}&lt;/code> 命令用来设置正文使用的中文字体, 同时也是 &lt;code>\textrm{}&lt;/code> 命令使用的字体.&lt;/li>
&lt;li>&lt;code>\setCJKmonofont{fontname}&lt;/code> 用来设置 &lt;code>\texttt{}&lt;/code> 命令中的中文使用的字体.&lt;/li>
&lt;li>&lt;code>\setCJKsansfont{fontname}&lt;/code> 用来设置 &lt;code>\textsf{}&lt;/code> 命令中的中文使用的字体.&lt;/li>
&lt;/ul>
&lt;p>&lt;br />&lt;/p>
&lt;p>而以上 &lt;code>fontname&lt;/code> 应填写本机已安装的字体名称, 在 Terminal 中输入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">fc-list :lang&lt;span class="o">=&lt;/span>zh
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/01/2ef784aa429a93f588f80d21642e4a9b.png"
title="texlive 查看中文字体"
alt="texlive 查看中文字体"
width="95%"
>
&lt;span class="caption">◎ texlive 查看中文字体&lt;/span>
&lt;/span>
&lt;p>&lt;br />&lt;/p>
&lt;p>本文部分内容借鉴: 全面总结如何在 LaTeX 中使用中文 (2020 最新版)&lt;sup id="fnref:5">&lt;a href="https://matnoble.me/tech/latex/latex-support-chinese/#fn:5" class="footnote-ref" role="doc-noteref">5&lt;/a>&lt;/sup>, 现表示感谢🍻&lt;/p>
&lt;img src="https://ttfou.com/images/2020/02/27/d45f84b14ca268ddd2e483c11638e892.gif">
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="http://www.ctex.org/CTeXReleaseNotes">http://www.ctex.org/CTeXReleaseNotes&lt;/a> &lt;a href="https://matnoble.me/tech/latex/latex-support-chinese/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>&lt;a href="https://stone-zeng.github.io/2018-08-08-use-opentype-fonts/#%E5%9F%BA%E7%A1%80%E7%AF%87ii%E4%B8%AD%E8%A5%BF%E6%96%87%E6%B7%B7%E6%8E%92">https://stone-zeng.github.io/2018-08-08-use-opentype-fonts/#%E5%9F%BA%E7%A1%80%E7%AF%87ii%E4%B8%AD%E8%A5%BF%E6%96%87%E6%B7%B7%E6%8E%92&lt;/a> &lt;a href="https://matnoble.me/tech/latex/latex-support-chinese/#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>当文档以英文为主体, 出现少数中文时, 建议使用 xeCJK 宏包. CTeX 宏集设置中文字体与下文类似. &lt;a href="https://matnoble.me/tech/latex/latex-support-chinese/#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4" role="doc-endnote">
&lt;p>&lt;a href="https://www.sys.kth.se/docs/texlive/texmf-dist/doc/xelatex/xecjk/xeCJK.pdf">https://www.sys.kth.se/docs/texlive/texmf-dist/doc/xelatex/xecjk/xeCJK.pdf&lt;/a> &lt;a href="https://matnoble.me/tech/latex/latex-support-chinese/#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:5" role="doc-endnote">
&lt;p>&lt;a href="https://jdhao.github.io/2018/03/29/latex-chinese.zh/">https://jdhao.github.io/2018/03/29/latex-chinese.zh/&lt;/a> &lt;a href="https://matnoble.me/tech/latex/latex-support-chinese/#fnref:5" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/latex/">latex</category><category domain="https://matnoble.me/series/latex/">LaTeX 排版「冷」知识</category><category domain="https://matnoble.me/tags/">标签云</category></item><item><title>Surface go 最便宜的田字牌怎么样?</title><link>https://matnoble.me/tech/reviews/surfacego/</link><guid isPermaLink="true">https://matnoble.me/tech/reviews/surfacego/</guid><pubDate>Fri, 28 Feb 2020 00:00:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>本文是本人首发在知乎上, 搬运至此. 截止至博文修改时间, 购机近 10 个月, 结合使用感受, 对部分内容做了些许修改!&lt;/p>
&lt;h2 id="买-surface-go-还是-ipad-2018-">买 Surface go 还是 ipad 2018 ?&lt;/h2>
&lt;p>我是一名数学系研一学生(现在研二了), 不玩游戏, 大部分时间使用 Ubuntu 系统, 偶尔在 Windows 上 ps 编辑图片. 另外, Windows 下载大文件(配合IDM)也更方便一些, 所以平日总是在双系统间切换.&lt;/p>
&lt;p>想购入 Surface 或者 Ipad 的原因是: 我要看论文, 看 pdf 电子书, 纸质版虽然可以免费打印, 但也还是太多了, 不太方便. 用大笔记本看 pdf 又总是感觉不太爽.&lt;/p>
&lt;p>我最终选择了 Surface go 的原因是:&lt;/p>
&lt;style type="text/css">.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:"Font Awesome 5 Free",FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:'\f071'}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:'\f05a'}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:'\f06a'}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:'\f058'}.notice.tip{background:#e6f9e6}&lt;/style>&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;ol>
&lt;li>ipad 太娱乐化了, 我不玩游戏, 不太适合我 &lt;br>&lt;/li>
&lt;li>Surface 相比之下, 更有生产力(一些些), 比我之前的笔记本更便捷, 可以写代码, 写 LaTeX 文档, 更好的编辑 office 文档 &lt;br>&lt;/li>
&lt;li>有触控板(鼠标支持) &lt;br>&lt;/li>
&lt;li>我没有其他苹果设备, 我已经是 Google 和 Windows 产品系列忠实用户, 不再适合重新开发我的 Apple 生态.&lt;/li>
&lt;/ol>&lt;/div>
&lt;h2 id="购买详情">购买详情&lt;/h2>
&lt;p>配置: 8G + 128G 高配版&lt;/p>
&lt;p>教育账号 + 官网翻新, 最终价格: 3133 RMB&lt;/p>
&lt;p>键盘 + 触控笔在某宝购买, 合计不到 4000 RMB&lt;/p>
&lt;p>&lt;em>资金充足的话, 还是官网购买吧, 键盘还可以, 笔就有些差了.&lt;/em>&lt;/p>
&lt;h2 id="surface-go-图鉴">Surface go 图鉴&lt;/h2>
&lt;p>趁着我的苏菲狗还没有太多使用痕迹, 拍照留念下&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://pic2.zhimg.com/80/v2-eb960ad171d7cf8dddefe03b9e434a40_720w.jpg"
title="田字信仰"
alt="田字信仰"
width="95%"
>
&lt;span class="caption">◎ 田字信仰&lt;/span>
&lt;/span>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://pic2.zhimg.com/80/v2-decc73f107883a57484539cceffaa97c_720w.jpg"
title="Microsoft 给人以正版的感觉"
alt="Microsoft 给人以正版的感觉"
width="95%"
>
&lt;span class="caption">◎ Microsoft 给人以正版的感觉&lt;/span>
&lt;/span>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://pic4.zhimg.com/80/v2-eb3aa0e750baa92cb9c3389afd5a682b_720w.jpg"
title="跟我的笔记本一边儿大"
alt="跟我的笔记本一边儿大"
width="95%"
>
&lt;span class="caption">◎ 跟我的笔记本一边儿大&lt;/span>
&lt;/span>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://pic2.zhimg.com/80/v2-c373b18d3ad8e7295d78463916221172_720w.jpg"
title="只有三个孔: 磁吸式充电, 多功能 Type-C, 3.5 mm 耳机插孔"
alt="只有三个孔: 磁吸式充电, 多功能 Type-C, 3.5 mm 耳机插孔"
width="95%"
>
&lt;span class="caption">◎ 只有三个孔: 磁吸式充电, 多功能 Type-C, 3.5 mm 耳机插孔&lt;/span>
&lt;/span>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://pic3.zhimg.com/80/v2-f1fd0eed5289e15503f7192da6ffdbd5_720w.jpg"
title="笔记本模式"
alt="笔记本模式"
width="95%"
>
&lt;span class="caption">◎ 笔记本模式&lt;/span>
&lt;/span>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://pic4.zhimg.com/80/v2-86188e2c431eec998d3227b4769b886a_720w.jpg"
title="平板模式"
alt="平板模式"
width="95%"
>
&lt;span class="caption">◎ 平板模式&lt;/span>
&lt;/span>
&lt;blockquote>
&lt;p>平板模式并没有那么不堪&lt;/p>
&lt;/blockquote>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://pic2.zhimg.com/80/v2-29eb113aa28c04a9a5a442f2fe6ee0d4_720w.jpg"
title="左滑最近任务"
alt="左滑最近任务"
width="95%"
>
&lt;span class="caption">◎ 左滑最近任务&lt;/span>
&lt;/span>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://pic1.zhimg.com/80/v2-82f4b5d2902723f83a797a83cc6d69a8_720w.jpg"
title="右滑状态栏"
alt="右滑状态栏"
width="95%"
>
&lt;span class="caption">◎ 右滑状态栏&lt;/span>
&lt;/span>
&lt;h2 id="suface-go-日常体验">Suface go 日常体验&lt;/h2>
&lt;ul>
&lt;li>平板模式&lt;/li>
&lt;/ul>
&lt;p>拆掉键盘, 拔掉电源, 鼠标&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://pic4.zhimg.com/80/v2-c9c498821f9ce47db7cef207c54ca65f_720w.jpg"
title="平板模式"
alt="平板模式"
width="95%"
>
&lt;span class="caption">◎ 平板模式&lt;/span>
&lt;/span>
&lt;p>对于我只有三个功能: 看视频 + 浏览微博、知乎 + 看论文, 感觉都不错. 尤其是看 PDF 论文, 加上一支手写笔, 简直是不能再舒服了!&lt;/p>
&lt;div class="notice info" >
&lt;p class="first notice-title">Info&lt;/p>&lt;p>10 个月的使用体验告诉我, 只停留在平板模式操作是行不通的, 尤其是视频时, 只能用笔记本模式来视频 😳&lt;/p>&lt;/div>
&lt;ul>
&lt;li>便携本模式&lt;/li>
&lt;/ul>
&lt;p>加上键盘、鼠标就成为了——便携式笔记本, 上课或者图书馆自习都十分轻巧方便. 记笔记, &lt;del>写文档, 写程序&lt;/del> 都不在话下.&lt;/p>
&lt;p>屏幕方面, 并不算优秀, 但勉强也算高清屏, 也算是不错吧.&lt;/p>
&lt;div class="notice warning" >
&lt;p class="first notice-title">Ｗarning&lt;/p>&lt;p>写 $\LaTeX$ 文档和 程序已放弃, 屏幕太小了, 不适合. 偶尔会用 Office 来填个表格.&lt;/p>&lt;/div>
&lt;ul>
&lt;li>结合笔, 手绘还不错&lt;/li>
&lt;/ul>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/02/28/1e1541a1359db57995d7c84b735bb763.png"
title="手绘狗"
alt="手绘狗"
width="55%"
>
&lt;span class="caption">◎ 手绘狗&lt;/span>
&lt;/span>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/02/28/7650f5528669d8f7ad4b6465606baa90.png"
title="手绘头像"
alt="手绘头像"
width="45%"
>
&lt;span class="caption">◎ 手绘头像&lt;/span>
&lt;/span>
&lt;h2 id="工作情况">工作情况&lt;/h2>
&lt;ul>
&lt;li>自带正常 office 套装, 加上触控高清屏, 体验还是相当不错的.&lt;/li>
&lt;li>Chrome 浏览器&lt;br>
看电影, 看油管视频, 很安逸! 但一定要记得即使关闭不需要的标签页, 因为太耗内存了.&lt;/li>
&lt;li>其他软件&lt;br>
&lt;del>由于我装了Tex Live, Anaconda, photoshop等较大型软件, 所以就忍痛割爱, 没装 matlab. 不过, MathWorks 公司推出了在线版 matlab, 所以就勉强能用啦！&lt;/del> &lt;br>
至于这其他软件, 以上所说的,　除了 photoshop 都以弃用, 反而装回了 matlab, 用来在无主力机时, 写写程序. 还用 Adobe Acrobat Reader DC 来剪切 PDF, 是 Ubuntu 所不具备的功能.&lt;/li>
&lt;/ul>
&lt;h2 id="分屏多任务">分屏多任务&lt;/h2>
&lt;p>平板模式下, 屏幕上方左(右)下滑实现&lt;/p>
&lt;p>个人感觉不会很小, 单个人目前很少用分屏, “Alt + Tap”或者“三指滑动触摸板”足够好用.&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://pic4.zhimg.com/80/v2-1318c14a1af932b813448fcc53aab7f4_720w.jpg"
title="浏览网页 &amp;#43; OneNote"
alt="浏览网页 &amp;#43; OneNote"
width="95%"
>
&lt;span class="caption">◎ 浏览网页 &amp;#43; OneNote&lt;/span>
&lt;/span>
&lt;p>Windows 家的 OneNote 太好用了, 搭配手写笔, 记课堂笔记, 记录一些想法创意, 可同步到多平台.&lt;/p>
&lt;h2 id="surface-go-到底值不值得买">Surface Go 到底值不值得买？&lt;/h2>
&lt;p>看需求和预算！！！&lt;/p>
&lt;p>首先，如果有大型计算需求，性能需求，只能当二奶机用。&lt;/p>
&lt;p>便携和价格是相对 pro 的优势，因为大多数人都把它当作二奶机，所以性能不是最重要的，pro 也会跟主机机差不多大，携带不是特别方便。&lt;/p>
&lt;p>surface go 10寸大小，性能不高但也足以应付学生的轻度使用！&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://upload.wikimedia.org/wikipedia/en/timeline/ea49fb8cb09b8b2b4a9ef42577fdc9f1.png"
title="Surface 发布时间"
alt="Surface 发布时间"
width="95%"
>
&lt;span class="caption">◎ Surface 发布时间&lt;/span>
&lt;/span>
&lt;p>&lt;br />&lt;/p>
&lt;p class="note-success" style="text-align:left">
Surface Go 距我更新此文已经发布一年半的时间了, 不知道好友多少同学对它感兴趣.&lt;br>
它最大的优点就是: 是一台携带便捷 Windows 电脑. 最大的缺点就是性能鸡肋.&lt;br>
我不了解其他产品, 我目前的想法是: 如果我用一台类似联想 pro 13 便携且性能强悍的机器, 绝对不会考虑 Surface Go, 但是, 我目前有一台性能还凑和, 但体积庞大的笔记本时, 我就会考虑 Surface Go 🤘
&lt;/p></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/reviews/">Reviews</category><category domain="https://matnoble.me/tags/%E5%80%BC%E4%B8%8D%E5%80%BC%E5%BE%97%E4%B9%B0/">值不值得买</category></item><item><title>一行代码为 LaTeX 修改数学公式字体</title><link>https://matnoble.me/tech/latex/latex-math-font/</link><guid isPermaLink="true">https://matnoble.me/tech/latex/latex-math-font/</guid><pubDate>Thu, 27 Feb 2020 00:19:35 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/4e7ca500-bdca-42dc-9444-bffa8af84fc5.png" width="95%" />&lt;/p>
&lt;div align="center">&lt;a href="https://matnoble.me/series/latex">◎ 你过来啊 🤞&lt;/a>&lt;/div>
&lt;p>排版公式是 $\LaTeX$ 的强项, 但同一个字体看的次数多了, 也难免审美疲劳．所以, 今天用简单的几行命令改变一下公式的字体&lt;/p>
&lt;ul>
&lt;li>首先导入美国数学学会字体包&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\usepackage&lt;/span>&lt;span class="nb">{&lt;/span>amsmath,amsthm,amsfonts,amssymb,bm&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后尝试不同字体:&lt;/p>
&lt;ul>
&lt;li>Times New Roman&lt;/li>
&lt;/ul>
&lt;p>最常用的新罗马字体&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\usepackage&lt;/span>&lt;span class="nb">{&lt;/span>newtxtext,newtxmath&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/543ebd89-f925-4b75-9159-42eb20f9bf63.svg" alt="Times New Roman">&lt;/p>
&lt;ul>
&lt;li>Times&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\usepackage&lt;/span>&lt;span class="nb">{&lt;/span>mathptmx&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/4c702f82-0956-4b85-a7e0-f1451ea3f4b1.svg" alt="mathptmx">&lt;/p>
&lt;ul>
&lt;li>Charter&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\usepackage&lt;/span>&lt;span class="nb">{&lt;/span>charter&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/16ca65ab-36f5-431f-9c53-428c226d232e.svg" alt="charter">&lt;/p>
&lt;ul>
&lt;li>Fourier&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\usepackage&lt;/span>&lt;span class="nb">{&lt;/span>fourier&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/77b326e4-187c-4548-b846-fb184504336c.svg" alt="fourier">&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/21455db0-72b2-454f-8f12-6e0ef5eda714.png" alt="">&lt;/p>
&lt;p>上面几个字体效果图, 仔细看还是能看起来出区别来的. 喜欢哪个, 就拿去用吧!&lt;/p></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/latex/">latex</category><category domain="https://matnoble.me/series/latex/">LaTeX 排版「冷」知识</category><category domain="https://matnoble.me/tags/">标签云</category></item><item><title>Ubuntu 上使用 ssr 实现科学上网</title><link>https://matnoble.me/tech/ubuntu/ubuntu-ssr/</link><guid isPermaLink="true">https://matnoble.me/tech/ubuntu/ubuntu-ssr/</guid><pubDate>Wed, 26 Feb 2020 00:21:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>作为研究生, 很多时候都需要看一些英语文献, 在 Google 上找明显比在百度上靠谱一些．此外, 许多知名大学都有大量的 MOOC 学习资源．所以, 学习并合理运用科学上网, 至关重要.&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/02/26/aaf9ef21ab9b33b737d44d73c643be88.jpg"
title="我是一只小小鸟"
alt="我是一只小小鸟"
width="95%"
>
&lt;span class="caption">◎ 我是一只小小鸟&lt;/span>
&lt;/span>
&lt;h3 id="electron-ssr">electron-ssr&lt;/h3>
&lt;p>在 Windows 和 Android 设备上都可以相对轻松地找到 ssr 管理器(ShadowsocksR 之类的), 但是, 在 Linux 系统上, 该类软件并不多见. &lt;a href="https://github.com/erguotou520">erguotou&lt;/a> 曾开发了一个图形用户界面 &lt;code>electron-ssr&lt;/code>, 后来不知什么原因, 该项目被他遗弃. 还好当时保存了安装包, &lt;a href="https://mega.nz/#!dWRnCYDI!Oa0dF52v96qBD9drTaA6wNnUQg1HgpQnjVd-1KMqDGQ">MEGA 网盘获取&lt;/a>.&lt;/p>
&lt;p>下载后, 调出 Terminal 安装&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">sudo dpkg -i electron-ssr.deb
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>安装之后, 就可以像在其他平台一样操作了&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/02/26/f1f31e76ebf963e6cb428488df8769fb.png"
title="添加订阅地址"
alt="添加订阅地址"
width="95%"
>
&lt;span class="caption">◎ 添加订阅地址&lt;/span>
&lt;/span>
&lt;p>系统代理模式、更新 PAC、添加服务器、扫描二维码和开机自启等都有，如果想要在终端中使用代理，那么在配置中选中 http 代理:&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/02/26/ac657983d85f788b4c6b9e61f6a0605f.png"
title="http 代理"
alt="http 代理"
width="95%"
>
&lt;span class="caption">◎ http 代理&lt;/span>
&lt;/span>
&lt;p>然后在终端中执行下面命令即可，其中的端口就是上图中的端口：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="nb">export&lt;/span> &lt;span class="nv">http_proxy&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;http://127.0.0.1:12333&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后可以使用 &lt;code>curl www.google.com&lt;/code> 来测试是否成功使用代理.&lt;/p>
&lt;hr />
&lt;h3 id="下面介绍一下我用的机场">下面介绍一下我用的机场&lt;/h3>
&lt;p>最开始使用过 &lt;code>搬瓦工 VPS&lt;/code> 自己搭建 ssr, 用了多半年, 被强了, 就再没试过搬瓦工了.&lt;/p>
&lt;p>后来, 薅 Google 羊毛, 利用 GCP 自建 ssr, 稳定性都不够好．改搭建 V2ray, 速度又得不到保障.&lt;/p>
&lt;p>&lt;del>绝望之际, 在 YouTube 上看到了 &lt;a href="http://a.foxss.me/">阿狸云&lt;/a>, 提供免费节点, 适用之后, 感觉还可以, 于是去年双十一搞活动买了半年的.&lt;/del>&lt;/p>
&lt;p>如果不想花钱, 其实有很多电报群里有免费的公共节点, 不嫌麻烦或者对翻墙需求不大时, 可以去找一招.&lt;/p>
&lt;p>最新机场推荐: &lt;a href="https://matnoble.me/tech/tofreeworld/#%E6%9C%BA%E5%9C%BA%E6%8E%A8%E8%8D%90">科学上网终极版--机场推荐&lt;/a>&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/02/26/cdedf395c7831842ac59403aa0cc2f6f.jpg"
title="科学上网 不作恶"
alt="科学上网 不作恶"
width="95%"
>
&lt;span class="caption">◎ 科学上网 不作恶&lt;/span>
&lt;/span></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/ubuntu/">Ubuntu</category><category domain="https://matnoble.me/tags/%E5%AE%89%E8%A3%85/">安装</category><category domain="https://matnoble.me/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/">科学上网</category><category domain="https://matnoble.me/tags/ubuntu-%E8%A3%85%E6%9C%BA%E4%B8%8E%E4%BC%98%E5%8C%96/">Ubuntu 装机与优化</category></item><item><title>Windows + Ubuntu 安装配置更新卸载 TeXLive 指南</title><link>https://matnoble.me/tech/ubuntu/install-texlive/</link><guid isPermaLink="true">https://matnoble.me/tech/ubuntu/install-texlive/</guid><pubDate>Wed, 26 Feb 2020 00:12:50 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>之前, 嫌麻烦, 装 TeXLive 只用一条语句&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">sudo apt install texlive-full
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>平时用着挺正常的, 但是, 昨日忽然收到更新提示, 2000M+. 于是用 &lt;code>apt-fast&lt;/code> 多线程更新, 但是总共速度不到 100k, 也许是因为家里网络原因吧, 所以, 决定重新装 😭&lt;/p>
&lt;p>照着之前写的博客, &lt;code>下载, 安装, 设置环境变量, 更新包&lt;/code>又来了一遍, 很顺利, 包括下载镜像文件, 30分钟内搞定.&lt;/p>
&lt;p>由于更新到了 2020, 所以 Ubuntu 版的安装指南更新了一下~&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/464616d6-967b-4b3d-8890-f12b41df64fe.png"
title="victory"
alt="victory"
width="95%"
>
&lt;span class="caption">◎ victory&lt;/span>
&lt;/span>
&lt;h2 id="ubuntu-系统">Ubuntu 系统&lt;/h2>
&lt;h3 id="安装视频">安装视频&lt;/h3>
&lt;ul>
&lt;li>YouTube&lt;/li>
&lt;/ul>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/bMQMWpWJNj0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;ul>
&lt;li>bilibili&lt;/li>
&lt;/ul>
&lt;div style="position: relative; width: 100%; padding-bottom: 70%; padding-top: 5px; height: 0; overflow: hidden;">
&lt;iframe src="https://matnoble.me//player.bilibili.com/player.html?aid=840230896&amp;cid=177419032&amp;page=1" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> &lt;/iframe>
&lt;/div>
&lt;h3 id="安装">安装&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>使用上面相同的链接, 到&amp;quot;距&amp;quot;你最近的仓库下载镜像 &lt;a href="http://mirror.ctan.org/systems/texlive/Images/">$\TeX$ Live&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>加载镜像文件&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">sudo mount -o loop texlive.iso /mnt
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>启动安装程序&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="nb">cd&lt;/span> /mnt
sudo ./install-tl
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/02/26/70ddb30269af8af9bea1c9150e1c1e0a.png"
title="安装界面"
alt="安装界面"
width="95%"
>
&lt;span class="caption">◎ 安装界面&lt;/span>
&lt;/span>
&lt;p>出现选项后，输入 &lt;code>I&lt;/code> 直接安装(也可以更改选项). 数分钟后即可安装完成.&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/02/26/f68b08cd72d0ba2271def73b72a4b561.png"
title="欢迎进入 $\TeX$ Live 的世界！"
alt="欢迎进入 $\TeX$ Live 的世界！"
width="95%"
>
&lt;span class="caption">◎ 欢迎进入 $\TeX$ Live 的世界！&lt;/span>
&lt;/span>
&lt;ol start="4">
&lt;li>卸载镜像文件&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="nb">cd&lt;/span> /
sudo umount /mnt
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="配置">配置&lt;/h3>
&lt;ol>
&lt;li>设置环境变量&lt;/li>
&lt;/ol>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/02/29/305b02d7acbcdc99288b5c954768a5bd.png"
title="设置环境变量之前"
alt="设置环境变量之前"
width="95%"
>
&lt;span class="caption">◎ 设置环境变量之前&lt;/span>
&lt;/span>
&lt;p>编辑 &lt;code>/.bashrc&lt;/code>，在最后添加(路径以实际为准)&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">export&lt;/span> &lt;span class="nv">PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$PATH&lt;/span>:/usr/local/texlive/2020/bin/x86_64-linux
&lt;span class="nb">export&lt;/span> &lt;span class="nv">MANPATH&lt;/span>&lt;span class="o">=&lt;/span>/usr/local/texlive/2020/texmf-dist/doc/man
&lt;span class="nb">export&lt;/span> &lt;span class="nv">INFOPATH&lt;/span>&lt;span class="o">=&lt;/span>/usr/local/texlive/2020/texmf-dist/doc/info
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后 &lt;code>source /.bashrc&lt;/code> 即可.&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/02/29/bd011383b3c6035cea2882cfefe0560e.png"
title="设置环境变量之后"
alt="设置环境变量之后"
width="95%"
>
&lt;span class="caption">◎ 设置环境变量之后&lt;/span>
&lt;/span>
&lt;ol start="2">
&lt;li>安装 &lt;code>perl&lt;/code> 的 &lt;code>tk&lt;/code> 组件(用于升级包)&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">sudo apt install perl-tk
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>字体设置(路径以实际为准)&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">sudo cp /usr/local/texlive/2020/texmf-var/fonts/conf/texlive-fontconfig.conf /etc/fonts/conf.d/09-texlive.conf
sudo fc-cache -fv
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>&lt;strong>Linux 安装字体&lt;/strong>&lt;sup id="fnref:1">&lt;a href="https://matnoble.me/tech/ubuntu/install-texlive/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;ol>
&lt;li>在根目录建立 .fonts 文件夹&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">mkdir .fonts
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>将要安装的字体复制到 .fonts 文件夹，执行&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">sudo fc-cache -fv
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/blockquote>
&lt;h3 id="更新">更新&lt;/h3>
&lt;ol>
&lt;li>更改为国内的源(以清华为例)&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">sudo tlmgr option repository https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/tlnet
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;style type="text/css">.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:"Font Awesome 5 Free",FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:'\f071'}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:'\f05a'}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:'\f06a'}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:'\f058'}.notice.tip{background:#e6f9e6}&lt;/style>&lt;div class="notice warning" >
&lt;p class="first notice-title">Ｗarning&lt;/p>&lt;p>若显示 &lt;code>sudo does not find tlmgr&lt;/code>, 则需要在 Terminal: &lt;code>sudo visudo&lt;/code> &lt;br>
将 &lt;code>/usr/local/texlive/2020/bin/x86_64-linux:&lt;/code> 加入 &lt;code>secure_path&lt;/code>&lt;/p>&lt;/div>
&lt;ol start="2">
&lt;li>包及包管理器更新&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">sudo tlmgr update --list
% sudo tlmgr update --self --all
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="编辑器选择">编辑器选择&lt;/h3>
&lt;p>在 Ubuntu 上同样可以选择适合大多数人的 TeXstudio, 同样可在官网&lt;a href="https://texstudio.org/">TeXstudio&lt;/a>下载.&lt;/p>
&lt;p>本人使用自由软件 &lt;code>Emacs&lt;/code> 编辑 .tex 文件, Emacs 在众多好用的快捷键的基础上, 编辑 .tex 文件有很多优势, 比如我之前做的:&lt;a href="https://matnoble.me/posts/using-emacs-to-make-latex-table/">使用 Emacs 制作 LaTeX 表格&lt;/a>&lt;/p>
&lt;h3 id="卸载">卸载&lt;/h3>
&lt;blockquote>
&lt;p>安装容易, 卸载并不那么容易, 卸载干净更难!&lt;/p>
&lt;/blockquote>
&lt;p>在安装 &lt;code>TeXLive&lt;/code> 之前, 要确保机器没有之前安装的残留. 所以要依次执行以下代码:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo apt purge texlive*
sudo rm -rf /usr/local/texlive/* and rm -rf ~/.texlive*
sudo rm -rf /usr/local/share/texmf
sudo rm -rf /var/lib/texmf
sudo rm -rf /etc/texmf
sudo apt remove tex-common --purge
rm -rf ~/.texlive
find -L /usr/local/bin/ -lname /usr/local/texlive/*/bin/* &lt;span class="p">|&lt;/span> sudo xargs rm
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr />
&lt;h2 id="windows-系统">Windows 系统&lt;/h2>
&lt;h3 id="安装-1">安装&lt;/h3>
&lt;ol>
&lt;li>下载镜像文件&lt;/li>
&lt;/ol>
&lt;p>最新版 &lt;a href="http://mirror.ctan.org/systems/texlive/Images/">$\TeX$ Live&lt;/a> (该链接可达&amp;quot;距&amp;quot;你最近的镜像仓库), 用校园网下载非常快!&lt;/p>
&lt;ol start="2">
&lt;li>安装&lt;/li>
&lt;/ol>
&lt;p>将 .iso 镜像加载至虚拟驱动, 双击 &lt;code>install-tl-advanced.bat&lt;/code> 或 &lt;code>install-tl-windows.bat&lt;/code> 进入安装界面, 按照下图配置, 不要安装到系统盘!&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/02/1feea99dfaf14406e5f17235d348f020.png"
title="安装界面"
alt="安装界面"
width="95%"
>
&lt;span class="caption">◎ 安装界面&lt;/span>
&lt;/span>
&lt;h3 id="配置-1">配置&lt;/h3>
&lt;p>漫长的等待后, 关闭提示已经安装成功的安装界面, 开始配置环境变量. 进入安装目录, 将 &lt;code>D:\texlive\bin\win32&lt;/code> 写入到系统环境变量 &lt;code>PATH&lt;/code> 目录下. &lt;code>WIN + R&lt;/code> 输入 &lt;code>cmd&lt;/code>, 键入&lt;code>xelatex -v&lt;/code>, 若结果如下, 则表示安装成功!&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/02/24a758fd576f838754a7f9d51f2e62db.png"
title="安装成功"
alt="安装成功"
width="95%"
>
&lt;span class="caption">◎ 安装成功&lt;/span>
&lt;/span>
&lt;h3 id="更新-1">更新&lt;/h3>
&lt;p>进入安装目录, 双击&lt;code>tl-tray-menu.exe&lt;/code>, 右下角右击TEX图标, 点击&lt;code>Package Manager&lt;/code>, 选择一个源(我选的是清华的源), 进行更新包.&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/02/9c7de273be59b72b70b15e4fff952d71.png"
title="更新包"
alt="更新包"
width="95%"
>
&lt;span class="caption">◎ 更新包&lt;/span>
&lt;/span>
&lt;h3 id="安装编辑器">安装编辑器&lt;/h3>
&lt;p>写$ \TeX $文档的编辑器有很多, 在 Windows 端我选择的是&lt;a href="https://texstudio.org/">TeXstudio&lt;/a> (适合大多数人).&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/02/26/617b457f81554c78e76ecbeaa5697b74.png"
title="TeXstudio"
alt="TeXstudio"
width="95%"
>
&lt;span class="caption">◎ TeXstudio&lt;/span>
&lt;/span>
&lt;p>安装之后, 可以打开 &lt;code>选项&lt;/code> 设置默认编辑器(我设置为xelatex), 编辑器字体推荐设置为等宽型字体.&lt;/p>
&lt;p>接下来, 就可以快(折)乐(腾)的使用 $\LaTeX$ 了! 😝&lt;/p>
&lt;p>&lt;em>以上为 ＴeXLive 2018为例, 其他版本大同小异&lt;/em>&lt;/p>
&lt;p>&lt;img src="https://ttfou.com/images/2020/02/27/024e38b99b47e9f56463cbfecd9d7c1e.gif" />&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>LaTeX 更换字体 &lt;br> &lt;a href="https://matnoble.me/tech/latex/latex-support-chinese/#xecjk-%E5%AE%9E%E7%8E%B0%E4%B8%AD%E8%8B%B1%E6%B7%B7%E6%8E%925">https://matnoble.me/tech/latex/latex-support-chinese/#xecjk-%E5%AE%9E%E7%8E%B0%E4%B8%AD%E8%8B%B1%E6%B7%B7%E6%8E%925&lt;/a> &lt;a href="https://matnoble.me/tech/ubuntu/install-texlive/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/ubuntu/">Ubuntu</category><category domain="https://matnoble.me/tags/%E5%AE%89%E8%A3%85/">安装</category><category domain="https://matnoble.me/tags/latex/">LaTeX</category></item><item><title>奇异值分解再探</title><link>https://matnoble.me/math/linear-algebra/svd-mathematical-basis-b/</link><guid isPermaLink="true">https://matnoble.me/math/linear-algebra/svd-mathematical-basis-b/</guid><pubDate>Tue, 25 Feb 2020 00:19:44 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h2 id="知识回顾">知识回顾&lt;/h2>
&lt;p>假设有 $m\times n$ 阶实矩阵 $\boldsymbol{A}$,&lt;/p>
&lt;p>$$
{\rm rank}(\boldsymbol{A}) = r \leq \max\{m, n \}
$$&lt;/p>
&lt;p>则&lt;/p>
&lt;ul>
&lt;li>列向量 Gram 矩阵可正交对角化(包括单位化)&lt;/li>
&lt;/ul>
&lt;p>$$
\boldsymbol{A}^{\mathsf T}\boldsymbol{A} = V^{\mathsf T}\begin{bmatrix} \sigma_1^2 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 0 \\&lt;br>
0 &amp;amp; \sigma_2^2 &amp;amp; \cdots &amp;amp; 0 \\&lt;br>
\vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\&lt;br>
0 &amp;amp; 0 &amp;amp; \vdots &amp;amp; \sigma_n^2
\end{bmatrix}V
$$&lt;/p>
&lt;ul>
&lt;li>行向量 Gram 矩阵可正交对角化(包括单位化)&lt;/li>
&lt;/ul>
&lt;p>$$
\boldsymbol{A}\boldsymbol{A}^{\mathsf T}= U^{\mathsf T}\begin{bmatrix} \sigma_1^2 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 0 \\&lt;br>
0 &amp;amp; \sigma_2^2 &amp;amp; \cdots &amp;amp; 0 \\&lt;br>
\vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\&lt;br>
0 &amp;amp; 0 &amp;amp; \vdots &amp;amp; \sigma_m^2
\end{bmatrix}U
$$&lt;/p>
&lt;p>其中, 不妨假设&lt;/p>
&lt;p>$$\sigma_1 \geq \sigma_2 \geq \cdots \sigma_r &amp;gt; 0$$&lt;/p>
&lt;p>并且,&lt;/p>
&lt;p>$$\sigma_{r+1} = \cdots = \sigma_k = 0 $$&lt;/p>
&lt;p>其中, $k = \max\{m , n\}$&lt;/p>
&lt;p>&lt;br />&lt;/p>
&lt;p>另外, 实矩阵 $\boldsymbol{A}$ 还满足:&lt;/p>
&lt;p>$$
\begin{cases}
\boldsymbol{A}\mathbf{v}_i =\sigma_i\mathbf{u}_i, &amp;amp; i=1, \cdots, r
\\[3pt]
\boldsymbol{A}\mathbf{v}_i =0, &amp;amp;i=r+1, \cdots, n
\\[3pt]
\boldsymbol{A}^{\mathsf T}\mathbf{u}_j=\sigma_j\mathbf{v}_j, &amp;amp;j=1, \cdots, r
\\[3pt]
\boldsymbol{A}^{\mathsf T}\mathbf{u}_j=0, &amp;amp;j=r+1, \cdots, m
\end{cases}
$$&lt;/p>
&lt;ul>
&lt;li>$\{ \mathbf{v}_{1}, \cdots, \mathbf{v}_r \}$ 是行空间 $C(\boldsymbol{A}^{\mathsf T})$ 的正交基底;&lt;/li>
&lt;li>$\{ \mathbf{v}_{r+1}, \cdots, \mathbf{v}_n \}$ 是零空间 $N(\boldsymbol{A})$ 的正交基底;&lt;/li>
&lt;li>$\{ \mathbf{u}_1, \cdots \mathbf{u}_r \}$ 是列空间 $C(\boldsymbol{A})$ 的正交基底;&lt;/li>
&lt;li>$\{ \mathbf{u}_{r+1}, \cdots \mathbf{u}_m \}$ 是左零空间 $N(\boldsymbol{A}^{\mathsf T})$ 的正交基底.&lt;/li>
&lt;/ul>
&lt;p>&lt;br />&lt;/p>
&lt;p>&lt;strong>接下来的任务是证明:&lt;/strong>&lt;/p>
&lt;p>$$
\boldsymbol{A} = U\Sigma V^{\mathsf T}
$$&lt;/p>
&lt;p>其中, $U$ 和 $V$ 分别是 $m$ 阶和 $n$ 阶的&lt;code>正交矩阵&lt;/code>, $\Sigma$ 是 $m\times n$ 阶的&lt;code>对角矩阵&lt;/code>.&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/56a744fd-42a5-4b93-a264-a96729d6c73f.png"
title="正交基底"
alt="正交基底"
width="95%"
>
&lt;span class="caption">◎ 正交基底&lt;/span>
&lt;/span>
&lt;h2 id="证明">证明&lt;/h2>
&lt;p>首先, $\Sigma$ 是 $m\times n$ 阶的&lt;code>对角矩阵&lt;/code>?&lt;/p>
&lt;blockquote>
&lt;p>问题来了: 对角矩阵不是方阵吗?&lt;/p>
&lt;/blockquote>
&lt;p>$$
\Sigma = \left[
\begin{array}{ccc|c}
\sigma_1&amp;amp;&amp;amp; &amp;amp;\\
&amp;amp;\ddots&amp;amp;&amp;amp; Z_{r, n-r}\\
&amp;amp;&amp;amp;\sigma_r &amp;amp;\\&lt;br>
\hline &amp;amp;Z_{m-r, r}&amp;amp; &amp;amp; Z_{m-r, n-r}
\end{array}
\right]
$$&lt;/p>
&lt;p>其中, $Z$ 表示零矩阵(Zero matrix).&lt;/p>
&lt;p>利用分块矩阵:&lt;/p>
&lt;p>$$
\begin{aligned}
\boldsymbol{A}V &amp;amp;= \boldsymbol{A}[\mathbf{v}_1, \cdots, \mathbf{v}_r, \mathbf{v}_{r+1}, \cdots, \mathbf{v}_n] \\[3pt]
&amp;amp; = [\boldsymbol{A}\mathbf{v}_1, \cdots, \boldsymbol{A}\mathbf{v}_r, \boldsymbol{A}\mathbf{v}_{r+1}, \cdots, \boldsymbol{A}\mathbf{v}_n] \\[3pt]
&amp;amp; = [\sigma_1\mathbf{u}_1, \cdots, \sigma_r\mathbf{u}_r, 0, \cdots, 0] \\[3pt]
&amp;amp; = [\mathbf{u}_1, \cdots, \mathbf{u}_m] \left[
\begin{array}{ccc|c}
\sigma_1&amp;amp;&amp;amp; &amp;amp;\\
&amp;amp;\ddots&amp;amp;&amp;amp; Z_{r, n-r}\\
&amp;amp;&amp;amp;\sigma_r &amp;amp;\\&lt;br>
\hline &amp;amp;Z_{m-r, r}&amp;amp; &amp;amp; Z_{m-r, n-r}
\end{array}
\right] \\[3pt]
&amp;amp; = U \Sigma
\end{aligned}
$$&lt;/p>
&lt;p>因为 $V$ 是正交矩阵, 所以&lt;/p>
&lt;p>$$
\boldsymbol{A} = U\Sigma V^{-1} = U\Sigma V^{\mathsf T}
$$&lt;/p>
&lt;h2 id="验证">验证&lt;/h2>
&lt;ul>
&lt;li>列向量 Gram 矩阵&lt;/li>
&lt;/ul>
&lt;p>$$
\begin{aligned}
\boldsymbol{A}^{\mathsf T}\boldsymbol{A} &amp;amp;= (U\Sigma V^{\mathsf T})^{\mathsf T}U\Sigma V^{\mathsf T} \\[3pt]
&amp;amp; = V\Sigma^{\mathsf T} (U^{\mathsf T}U) \Sigma V^{\mathsf T} \\[3pt]
&amp;amp; = V(\Sigma^{\mathsf T}\Sigma) V^{\mathsf T}
\end{aligned}
$$&lt;/p>
&lt;ul>
&lt;li>行向量 Gram 矩阵&lt;/li>
&lt;/ul>
&lt;p>$$
\begin{aligned}
\boldsymbol{A}\boldsymbol{A}^{\mathsf T} &amp;amp;= U\Sigma V^{\mathsf T}(U\Sigma V^{\mathsf T})^{\mathsf T} \\[3pt]
&amp;amp; = U\Sigma (V^{\mathsf T}V)\Sigma^{\mathsf T}U^{\mathsf T} \\[3pt]
&amp;amp; = U(\Sigma^{\mathsf T}\Sigma) U^{\mathsf T}
\end{aligned}
$$&lt;/p>
&lt;p>与上述结果一致.&lt;/p>
&lt;h2 id="化简">化简&lt;/h2>
&lt;p>通常把 $U$ 写成列向量的形式, 把 $V$ 写成行向量的形式, 即&lt;/p>
&lt;p>$$
\begin{aligned}
\boldsymbol{A} &amp;amp; = [u_1, \cdots, u_r, u_{r+1}, \cdots, u_m]
\\[3pt]
&amp;amp; \quad \left[
\begin{array}{ccc|c}
\sigma_1&amp;amp;&amp;amp; &amp;amp;\\
&amp;amp;\ddots&amp;amp;&amp;amp; Z_{r, n-r}\\
&amp;amp;&amp;amp;\sigma_r &amp;amp;\\&lt;br>
\hline &amp;amp;Z_{m-r, r}&amp;amp; &amp;amp; Z_{m-r, n-r}
\end{array} \right]
\begin{bmatrix}
v_1^{\mathsf T} \\&lt;br>
\vdots \\&lt;br>
v_r^{\mathsf T} \\&lt;br>
v_{r+1}^{\mathsf T} \\&lt;br>
\vdots \\&lt;br>
v_n^{\mathsf T}
\end{bmatrix}
\end{aligned}
$$&lt;/p>
&lt;p>分块运算得:&lt;/p>
&lt;p>$$
\boldsymbol{A} = [u_1, \cdots, u_r]
\begin{bmatrix} \sigma_1 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 0 \\&lt;br>
0 &amp;amp; \sigma_2 &amp;amp; \cdots &amp;amp; 0 \\&lt;br>
\vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\&lt;br>
0 &amp;amp; 0 &amp;amp; \vdots &amp;amp; \sigma_r
\end{bmatrix}
\begin{bmatrix}
v_1^{\mathsf T} \\&lt;br>
\vdots \\&lt;br>
v_r^{\mathsf T}
\end{bmatrix}
$$&lt;/p>
&lt;p>也就是说: 任意秩为 $r$ 的矩阵 $\boldsymbol{A}$ 都可以写成 $r$ 个&lt;code>秩一矩阵&lt;/code>的和&lt;/p>
&lt;p>$$
\boldsymbol{A} = u_1\sigma_1 v_1^{\mathsf T} + \cdots u_r\sigma_r v_r^{\mathsf T}
$$&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/47030408-b51a-4190-8b43-6182f041ddef.jpeg"
title="SVD"
alt="SVD"
width="95%"
>
&lt;span class="caption">◎ SVD&lt;/span>
&lt;/span>
&lt;h2 id="复盘">复盘&lt;/h2>
&lt;p>上面所能进行下去的关键在于:&lt;/p>
&lt;p>$$
\boldsymbol{A}v_i = \sigma_i u_i, \quad i = 1, \cdots, r
$$&lt;/p>
&lt;blockquote>
&lt;p>矩阵(变换) $\boldsymbol{A}$ 将行空间 $C(\boldsymbol{A}^{\mathsf T})$ 的正交基底映至列空间 $C(\boldsymbol{A})$ 的正交基底, $\sigma_i$ 称为..奇异值..&lt;/p>
&lt;/blockquote>
&lt;p>不是所有矩阵都可以对角化, 但所有矩阵都可以进行&lt;code>奇异值分解&lt;/code>&lt;/p>
&lt;h2 id="几何意义">几何意义&lt;/h2>
&lt;p>这个 &lt;a href="https://zhuanlan.zhihu.com/p/57803955">知乎回答&lt;/a> 给出了如下解释, 我也比较满意&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/f3070f87-ddd7-430b-bbb5-83172534d3f0.png" alt="">&lt;/p>
&lt;h2 id="应用">应用&lt;/h2>
&lt;p>&lt;a href="http://www.ams.org/publicoutreach/feature-column/fcarc-svd" title="We Recommend a Singular Value Decomposition (David Austin)">We Recommend a Singular Value Decomposition Austin)&lt;/a> 中介绍了如下几个应用:&lt;/p>
&lt;ul>
&lt;li>Data compression(数据压缩)&lt;/li>
&lt;li>Noise reduction (去噪)&lt;/li>
&lt;li>Data analysis(数据分析)&lt;/li>
&lt;/ul>
&lt;p>数据分析中, 我们知道的&lt;code>主成分分析(PCA)&lt;/code>的数学原理即为&lt;code>奇异值分解(SVD)&lt;/code>.&lt;/p>
&lt;hr />
&lt;p>以上所有部分就是奇异值分解(singular value decomposition), 简称 SVD. 实际上, 之前做的几篇都是为这一篇做准备:&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://matnoble.me/posts/rank-nullity/">秩-零化度定理(Rank-Nullity Theorem)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://matnoble.me/posts/matrix4basicth/">矩阵的四个基本空间, 不了解下吗?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://matnoble.me/posts/basicspacebase/">矩阵的四个基本空间的基底&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://matnoble.me/posts/gram/">Gram 矩阵&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://matnoble.me/posts/rotationandmirroring/">正交矩阵之旋转与镜射&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://matnoble.me/posts/svd/">奇异值分解初步&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>接下来, 奇异值分解专题并没有结束, 我将以我的思考阐述 SVD 的几何意义以及一些实际应用.&lt;/p>
&lt;hr />
&lt;p>更多..奇异值分解..的内容可以戳 &lt;a href="https://matnoble.me/tags/%E5%A5%87%E5%BC%82%E5%80%BC%E5%88%86%E8%A7%A3/">&lt;strong>这里&lt;/strong>&lt;/a>&lt;/p></description><category domain="https://matnoble.me/math/">math</category><category domain="https://matnoble.me/math/linear-algebra/">Linear-Algebra</category><category domain="https://matnoble.me/series/mla/">线代拾遗</category><category domain="https://matnoble.me/tags/%E7%9F%A9%E9%98%B5%E5%88%86%E8%A7%A3/">矩阵分解</category><category domain="https://matnoble.me/tags/%E5%A5%87%E5%BC%82%E5%80%BC%E5%88%86%E8%A7%A3/">奇异值分解</category></item><item><title>LaTeX 省略号 dots</title><link>https://matnoble.me/tech/latex/latex-dots/</link><guid isPermaLink="true">https://matnoble.me/tech/latex/latex-dots/</guid><pubDate>Mon, 24 Feb 2020 00:13:54 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/4e7ca500-bdca-42dc-9444-bffa8af84fc5.png" width="95%" />&lt;/p>
&lt;div align="center">&lt;a href="https://matnoble.me/series/latex">◎ 你过来啊 🤞&lt;/a>&lt;/div>
&lt;p>&lt;img src="https://ttfou.com/images/2020/02/29/555f32a4761b6a9108af40e97eb07d04.png" width=95% />&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">&lt;/th>
&lt;th style="text-align:center">&lt;/th>
&lt;th style="text-align:center">&lt;/th>
&lt;th style="text-align:center">&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">a \dots b&lt;/td>
&lt;td style="text-align:center">a \cdots b&lt;/td>
&lt;td style="text-align:center">\vdots&lt;/td>
&lt;td style="text-align:center">\ddots&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$a \dots b$&lt;/td>
&lt;td style="text-align:center">$a \cdots b$&lt;/td>
&lt;td style="text-align:center">$\vdots$&lt;/td>
&lt;td style="text-align:center">$\ddots$&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/latex/">latex</category><category domain="https://matnoble.me/series/latex/">LaTeX 排版「冷」知识</category><category domain="https://matnoble.me/tags/">标签云</category></item><item><title>奇异值分解初探</title><link>https://matnoble.me/math/linear-algebra/svd-mathematical-basis-a/</link><guid isPermaLink="true">https://matnoble.me/math/linear-algebra/svd-mathematical-basis-a/</guid><pubDate>Mon, 24 Feb 2020 00:13:44 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h2 id="知识回顾">知识回顾&lt;/h2>
&lt;p>在 &lt;a href="https://matnoble.me/posts/matrix4basicth/">矩阵的四个基本空间, 不了解下吗?&lt;/a> 中, 介绍了实矩阵的四个基本空间的&lt;code>正交关系&lt;/code>&lt;/p>
&lt;p>$$
\begin{cases}
C(A^{\mathsf T}) = N(A)^{\perp} \\[3pt]
C(A) = N(A^{\mathsf T})^{\perp}
\end{cases}
$$&lt;/p>
&lt;p>即&lt;/p>
&lt;ul>
&lt;li>行空间是零空间的正交补;&lt;/li>
&lt;li>列空间是左零空间的正交补.&lt;/li>
&lt;/ul>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/19de04a9-9b75-4ac4-b4a1-4d53f59747bd.png"
title="正交关系"
alt="正交关系"
width="95%"
>
&lt;span class="caption">◎ 正交关系&lt;/span>
&lt;/span>
&lt;p>在四个基本空间中, 通过 &lt;code>初等行变换&lt;/code> 得到了它们的普通基底, 这一次首先讨论其&lt;code>正交基底&lt;/code>.&lt;/p>
&lt;hr />
&lt;h2 id="正交基底">正交基底&lt;/h2>
&lt;p>假设有 $m\times n$ 阶实矩阵 $A$&lt;/p>
&lt;p>$$
{\rm rank}(A) = r \leq \max\{m, n \}
$$&lt;/p>
&lt;p>考虑列向量 Gram 矩阵 $A^{\mathsf T}A$, 由于其是对称矩阵, 所以可以&lt;code>正交单位对角化&lt;/code>&lt;/p>
&lt;p>$$
A^{\mathsf T}A = V^{\mathsf T}\begin{bmatrix} \sigma_1^2 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 0 \\&lt;br>
0 &amp;amp; \sigma_2^2 &amp;amp; \cdots &amp;amp; 0 \\&lt;br>
\vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\&lt;br>
0 &amp;amp; 0 &amp;amp; \vdots &amp;amp; \sigma_n^2
\end{bmatrix}V
$$&lt;/p>
&lt;p>不妨设 $\sigma_i \geq 0$, $V=[v_1, v_2, \cdots, v_n]$&lt;/p>
&lt;p>$$
\begin{equation}
A^{\mathsf T}A v_i = \sigma_i^2 v_i \quad i = 1, 2, \cdots, n
\label{eq:eq1}
\end{equation}
$$&lt;/p>
&lt;p>其中, $\sigma_i^2$ 是列向量 Gram 矩阵 $A^{\mathsf T}A$ 的特征值, $v_i$ 是 $A^{\mathsf T}A$ 对应于 $\sigma_i^2$ 的单位特征向量, 即 &lt;strong>$V$ 的列向量是 $\mathbb{R}^n$ 的一组标准正交基&lt;/strong>, 因此&lt;/p>
&lt;p>$$
\lVert Av_i \rVert = v_i^{\mathsf T} A^{\mathsf T} A v_i = \sigma_i^2 v_i^{\mathsf T} v_i = \sigma_i^2
$$&lt;/p>
&lt;p>&lt;br />&lt;/p>
&lt;p>又因为 ${\rm rank}(A^{\mathsf T}A) = {\rm rank}(A) = r$, 不妨设&lt;/p>
&lt;p>$$\sigma_1 \geq \sigma_2 \geq \cdots \sigma_r &amp;gt; 0$$&lt;/p>
&lt;p>并且,&lt;/p>
&lt;p>$$\sigma_{r+1} = \cdots = \sigma_n = 0 $$&lt;/p>
&lt;p>所以,&lt;/p>
&lt;p>$$
\lVert Av_i \rVert = \sigma_i^2 = 0 \quad i = r+1, \cdots , n
$$&lt;/p>
&lt;p>即 $Av_i = 0, i = r+1, \cdots , n$&lt;/p>
&lt;p>$$\{ v_{r+1}, \cdots, v_n \} \subset N(A) = N(A^{\mathsf T}A)$$&lt;/p>
&lt;p>又因为 $\dim N(A) = n-r$, 所以 $\{ v_{r+1}, \cdots, v_n \}$ 是 $N(A)$ 的一组标准正交基,&lt;/p>
&lt;p>又因为$C(A^{\mathsf T}) = N(A)^{\perp}$, 所以 $\{ v_{1}, \cdots, v_r \}$ 是 $C(A^{\mathsf T})$ 的一组标准正交基.&lt;/p>
&lt;p>&lt;br />&lt;/p>
&lt;p>对式(\ref{eq:eq1})左右同乘 $A$&lt;/p>
&lt;p>$$
AA^{\mathsf T}A v_i = \sigma_i^2 Av_i \quad i = 1, 2, \cdots, n
$$&lt;/p>
&lt;p>其中, $\sigma_i^2, i=1, \cdots, r$ 是行向量Gram 矩阵 $AA^{\mathsf T}$ 的非零特征值, $Av_i$ 是 $AA^{\mathsf T}$ 相应于 $\sigma_i$ 的特征向量.&lt;/p>
&lt;p>令 $u_i = \frac{Av_i}{\sigma_i}, i = 1, \cdots, r$, 则&lt;/p>
&lt;p>$$
\begin{aligned}
u_i^{\mathsf T}u_j &amp;amp; = \left(\frac{Av_i}{\sigma_i} \right)^{\mathsf T} \frac{Av_j}{\sigma_j} = \frac{ v_i^{\mathsf T} A^{\mathsf T} A v_j }{\sigma_i \sigma_j} \\[3pt]
&amp;amp; = \frac{ \sigma_i \sigma_j v_i^{\mathsf T} v_j }{\sigma_i \sigma_j} = \begin{cases}
1 \quad i=j
\\[3pt]
0 \quad i \neq j
\end{cases}
\end{aligned}
$$&lt;/p>
&lt;p>所以, $\{ u_1, \cdots u_r \}$ 是单位正交向量组, 继而是 $C(A)$ 的一组标准正交基.&lt;/p>
&lt;p>接下来, 扩充单位正交向量 $\{ u_{r+1}, \cdots u_m \}$, 使得 $\{ u_1, \cdots u_r, u_{r+1}, \cdots, u_m \}$ 成为 $\mathbb{R}^m$ 的标准正交基. 因为 $C(A) = N(A^{\mathsf T})^{\perp}$, 所以, $\{ u_{r+1}, \cdots u_m \}$ 是 $N(A^{\mathsf T})$ 的一组标准正交基.&lt;/p>
&lt;p>&lt;br />&lt;/p>
&lt;p>综上, 理论上得到了实矩阵 $A$ 的四个基本空间各自的正交基.&lt;/p>
&lt;ul>
&lt;li>$\{ v_{1}, \cdots, v_r \}$ 是行空间 $C(A^{\mathsf T})$ 的正交基底;&lt;/li>
&lt;li>$\{ v_{r+1}, \cdots, v_n \}$ 是零空间 $N(A)$ 的正交基底;&lt;/li>
&lt;li>$\{ u_1, \cdots u_r \}$ 是列空间 $C(A)$ 的正交基底;&lt;/li>
&lt;li>$\{ u_{r+1}, \cdots u_m \}$ 是左零空间 $N(A^{\mathsf T})$ 的正交基底.&lt;/li>
&lt;/ul>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/56a744fd-42a5-4b93-a264-a96729d6c73f.png"
title="正交基底"
alt="正交基底"
width="95%"
>
&lt;span class="caption">◎ 正交基底&lt;/span>
&lt;/span>
&lt;hr />
&lt;p>以上运用了一些前几次证明过的结论:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>秩
$$
\begin{aligned}
r &amp;amp;= \hbox{rank}A=\hbox{rank}A^{\mathsf T} \\[3pt]
&amp;amp;=\hbox{rank}(A^{\mathsf T}A)=\hbox{rank}(AA^{\mathsf T})
\end{aligned}
$$&lt;/p>
&lt;/li>
&lt;li>
&lt;p>列空间
$$
\begin{cases}
C(A^{\mathsf T})=C(A^{\mathsf T}A)
\\[3pt]
C(A)=C(AA^{\mathsf T})
\end{cases}
$$&lt;/p>
&lt;/li>
&lt;li>
&lt;p>零空间
$$
\begin{cases}
N(A)=N(A^{\mathsf T}A)
\\[3pt]
N(A^{\mathsf T})=N(AA^{\mathsf T})
\end{cases}
$$&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>以及一些结论:&lt;/p>
&lt;ul>
&lt;li>$A^{\mathsf T}A$ 的特征值为 $\sigma_1^2,\cdots,\sigma_n^2$, 对应单位正交的特征向量 $v_1, \cdots, v_n$&lt;/li>
&lt;li>$AA^{\mathsf T}$ 的特征值为 $\sigma_1^2,\cdots,\sigma_m^2$，对应单位正交的特征向量 $u_1, \cdots, u_m$&lt;/li>
&lt;li>$Av_i=\sigma_iu_i, \sigma_i&amp;gt;0, i=1, \cdots, r$, 且 $Av_i=0, i=r+1, \cdots, n$&lt;/li>
&lt;li>$A^{\mathsf T}u_j=\sigma_jv_j, \sigma_j&amp;gt;0, j=1, \cdots, r$, 且 $A^{\mathsf T}u_j=0, j=r+1, \cdots, m$&lt;/li>
&lt;/ul>
&lt;hr />
&lt;h2 id="特征值分解简介">特征值分解简介&lt;/h2>
&lt;p>经过以上过程, 可以将任意 $m\times n$ 阶矩阵 $A$ 分解为 $\{ u_i\}, \{ v_i\}, \{\sigma_i\}$ 构成的三个矩阵的乘积&lt;/p>
&lt;p>$$
A = U\Sigma V^{\mathsf T}
$$&lt;/p>
&lt;p>这就是奇异值分解(singular value decomposition), 简称 SVD.&lt;/p>
&lt;hr />
&lt;p>更多..奇异值分解..的内容可以戳 &lt;a href="https://matnoble.me/tags/%E5%A5%87%E5%BC%82%E5%80%BC%E5%88%86%E8%A7%A3/">&lt;strong>这里&lt;/strong>&lt;/a>&lt;/p></description><category domain="https://matnoble.me/math/">math</category><category domain="https://matnoble.me/math/linear-algebra/">Linear-Algebra</category><category domain="https://matnoble.me/series/mla/">线代拾遗</category><category domain="https://matnoble.me/tags/%E7%9F%A9%E9%98%B5%E5%88%86%E8%A7%A3/">矩阵分解</category><category domain="https://matnoble.me/tags/%E5%A5%87%E5%BC%82%E5%80%BC%E5%88%86%E8%A7%A3/">奇异值分解</category></item><item><title>神的编辑器 Emacs 快捷键汇总</title><link>https://matnoble.me/tech/hot-key/hotkey-emacs/</link><guid isPermaLink="true">https://matnoble.me/tech/hot-key/hotkey-emacs/</guid><pubDate>Sun, 23 Feb 2020 00:11:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/02/23/d60323294875a79718b9d6a6bca01f80.jpg"
title="神器 Emacs"
alt="神器 Emacs"
width="95%"
>
&lt;span class="caption">◎ 神器 Emacs&lt;/span>
&lt;/span>
&lt;h2 id="基础">基础&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>组合按键&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>C-* &lt;/code> : 表示按住 &lt;code>Ctrl&lt;/code> 键不松开, 再去按 &lt;code>*&lt;/code> 键;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>M-*&lt;/code> 表示按住&lt;code>Alt&lt;/code>键不松开, 再去按 &lt;code>*&lt;/code> 键.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>退出 Emacs&lt;/p>
&lt;p>&lt;code>C-x&lt;/code> 然后 &lt;code>C-c&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>官方学习文档&lt;/p>
&lt;p>&lt;code>C-h t&lt;/code> : 表示按住 &lt;code>Ctrl&lt;/code> 键不松开, 再按住 &lt;code>h&lt;/code> 键, 然后按 &lt;code>t&lt;/code> 键. 试一试, &lt;code>C-h t&lt;/code> 可以打开 Emacs 官方文档.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/e6c8c7e8-af72-45db-b1fd-a43936d96719.png"
title="Emacs 官方帮助文档"
alt="Emacs 官方帮助文档"
width="95%"
>
&lt;span class="caption">◎ Emacs 官方帮助文档&lt;/span>
&lt;/span>
&lt;ul>
&lt;li>
&lt;p>移屏&lt;/p>
&lt;p>查看下一屏: &lt;code>C-v&lt;/code>&lt;/p>
&lt;p>查看上一屏: &lt;code>M-v&lt;/code>&lt;/p>
&lt;p>将光标位置的文本行移动到屏幕中央: &lt;code>C-l&lt;/code> (实际上, 是顶部, 中部和底部的循环)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>上下左右&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/7e9d0777-73c0-41b4-b66d-c1636326bd4c.png"
title="Emacs 键盘操作"
alt="Emacs 键盘操作"
width="75%"
>
&lt;span class="caption">◎ Emacs 键盘操作&lt;/span>
&lt;/span>
&lt;p>&lt;code>C-f&lt;/code> 和 &lt;code>C-b&lt;/code> 分别表示向前和向后移动&lt;strong>一个字符&lt;/strong>, &lt;code>M-f&lt;/code> 和&lt;code>M-b&lt;/code> 则可以相应的移动的更多.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>* 首 * 尾&lt;/p>
&lt;ul>
&lt;li>
&lt;p>文章开头: &lt;code>M-Shift-&amp;lt;&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>文章结尾: &lt;code>M-Shift-&amp;gt;&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>行首: &lt;code>C-a&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>行尾: &lt;code>C-e&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>句首: &lt;code>M-a&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>句尾: &lt;code>M-e&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>终止命令&lt;/p>
&lt;p>当输入命令有误时, &lt;code>C-g&lt;/code> 能帮到你.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">Emacs 快捷键&lt;/th>
&lt;th style="text-align:left">操作/动作&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">C-x + 3&lt;/td>
&lt;td style="text-align:left">纵向分割画面&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">C-x + 2&lt;/td>
&lt;td style="text-align:left">横向分割画面&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">C-x + o&lt;/td>
&lt;td style="text-align:left">窗口间切换&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">C-x + C-c&lt;/td>
&lt;td style="text-align:left">退出 Emacs&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">C-a&lt;/td>
&lt;td style="text-align:left">光标移植行首&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">C-e&lt;/td>
&lt;td style="text-align:left">光标移植行尾&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">C-s&lt;/td>
&lt;td style="text-align:left">查找&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">M-w&lt;/td>
&lt;td style="text-align:left">复制&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">C-w&lt;/td>
&lt;td style="text-align:left">剪切&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">C-y&lt;/td>
&lt;td style="text-align:left">粘贴&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/hot-key/">hot-key</category><category domain="https://matnoble.me/tags/emacs/">Emacs</category><category domain="https://matnoble.me/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/">快捷键</category></item><item><title>Ubuntu 快捷键汇总</title><link>https://matnoble.me/tech/hot-key/hotkey-ubuntu/</link><guid isPermaLink="true">https://matnoble.me/tech/hot-key/hotkey-ubuntu/</guid><pubDate>Sat, 22 Feb 2020 00:17:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/02/22/91b7d7f9b4e6f2cf43048d716b48ea2f.jpg"
title="Ubuntu 乌班图"
alt="Ubuntu 乌班图"
width="95%"
>
&lt;span class="caption">◎ Ubuntu 乌班图&lt;/span>
&lt;/span>
&lt;p>Ubuntu 是最流行的 Linux 系统之一, 开源免费, 拥有一定的用户群体(跟 Windows 没法比), 算是一个入门级别的 Linux. 相信在大学生中应该有一定的用户群, 尤其是计算机类, 数学类.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">Ubuntu 快捷键&lt;/th>
&lt;th style="text-align:left">操作/动作&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">Super&lt;/td>
&lt;td style="text-align:left">搜索应用程序; 查看正在运行的程序; 查看并使用工作区&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Super + L&lt;/td>
&lt;td style="text-align:left">锁屏&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Super + D&lt;/td>
&lt;td style="text-align:left">显示桌面&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Super + M(V)&lt;/td>
&lt;td style="text-align:left">查看通知栏&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Alt + F2&lt;/td>
&lt;td style="text-align:left">运行控制台&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Ctrl + Q&lt;/td>
&lt;td style="text-align:left">关闭应用窗口&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Ctrl + Alt + T&lt;/td>
&lt;td style="text-align:left">开启终端&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Ctrl + Alt + Del&lt;/td>
&lt;td style="text-align:left">注销&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Super + 向上光标&lt;/td>
&lt;td style="text-align:left">最大化窗口&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Super + 向下光标&lt;/td>
&lt;td style="text-align:left">取消最大化窗口 　&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Super + 向左光标&lt;/td>
&lt;td style="text-align:left">左侧占据 50% 的屏幕　　　&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Super + 向右光标&lt;/td>
&lt;td style="text-align:left">右侧占据 50% 的屏幕　　　　&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Super + A&lt;/td>
&lt;td style="text-align:left">所有应用程序 　&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Super + Home&lt;/td>
&lt;td style="text-align:left">第一个工作区&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Super + End&lt;/td>
&lt;td style="text-align:left">最后一个工作区&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Super + PgUp&lt;/td>
&lt;td style="text-align:left">上一个工作区&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Super + PgDn&lt;/td>
&lt;td style="text-align:left">下一个工作区&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;em>注: Super 即为 Windows 里的 Win 键(田字信仰键)&lt;/em>&lt;/p>
&lt;p>除了以上默认的快捷键, 我们还可以转到&lt;code>设置&lt;/code>$\to$&lt;code>设备&lt;/code>$\to$&lt;code>键盘&lt;/code>..自定义..快捷键. 我自定义:&lt;/p>
&lt;ul>
&lt;li>F3 打开 Emacs;&lt;/li>
&lt;li>Ctrl + Alt + A 截屏;&lt;/li>
&lt;li>...&lt;/li>
&lt;/ul>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/7f211609-26b4-4ea3-8c50-bd343c0e1ef5.webp"
title="我的乌班图"
alt="我的乌班图"
width="95%"
>
&lt;span class="caption">◎ 我的乌班图&lt;/span>
&lt;/span></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/hot-key/">hot-key</category><category domain="https://matnoble.me/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/">快捷键</category></item><item><title>Chrome 浏览器快捷键汇总</title><link>https://matnoble.me/tech/hot-key/hotkey-chrome/</link><guid isPermaLink="true">https://matnoble.me/tech/hot-key/hotkey-chrome/</guid><pubDate>Fri, 21 Feb 2020 00:17:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/02/21/6c8a1795c8956cf5a6436cada6b219e9.jpg"
title="Chrome 最好用的浏览器"
alt="Chrome 最好用的浏览器"
width="95%"
>
&lt;span class="caption">◎ Chrome 最好用的浏览器&lt;/span>
&lt;/span>
&lt;p>Chrome 是我用过的最好用的浏览器, 快速, Google 生态, 最重要的是有众多好用的插件, 简直是爱不释手啊~ 下面介绍一些常用的快捷键, 解放鼠标, 解放生产力 💪&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">Chrome 快捷键&lt;/th>
&lt;th style="text-align:left">操作/动作&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">Ctrl + T&lt;/td>
&lt;td style="text-align:left">打开一个新标签页&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Ctrl + N&lt;/td>
&lt;td style="text-align:left">打开一个新窗口&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Ctrl + Shift + N&lt;/td>
&lt;td style="text-align:left">打开无痕模式窗口&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Ctrl + W&lt;/td>
&lt;td style="text-align:left">关闭当前标签页&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Ctrl + Shift + T&lt;/td>
&lt;td style="text-align:left">重新打开上次关闭的标签页　　　　&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Ctrl + F 或 F3&lt;/td>
&lt;td style="text-align:left">搜索页面关键词&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Ctrl + Shift + Tab 或 Ctrl + PgUp&lt;/td>
&lt;td style="text-align:left">切换到左侧标签页&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Ctrl + Tab 或 Ctrl PgDn&lt;/td>
&lt;td style="text-align:left">切换到右侧标签页&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Ctrl + L&lt;/td>
&lt;td style="text-align:left">转到搜索/地址栏&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Ctrl + D&lt;/td>
&lt;td style="text-align:left">将当前页面添加到书签&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Ctrl + H&lt;/td>
&lt;td style="text-align:left">浏览历史记录&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Ctrl + J&lt;/td>
&lt;td style="text-align:left">浏览下载内容&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Ctrl + +&lt;/td>
&lt;td style="text-align:left">放大&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Ctrl + －&lt;/td>
&lt;td style="text-align:left">缩小 　　　　　　　&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Ctrl + 0&lt;/td>
&lt;td style="text-align:left">恢复默认大小&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Alt + ←&lt;/td>
&lt;td style="text-align:left">返回&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Alt + →&lt;/td>
&lt;td style="text-align:left">前进&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">F11&lt;/td>
&lt;td style="text-align:left">全屏&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">F12&lt;/td>
&lt;td style="text-align:left">开发者工具&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Home&lt;/td>
&lt;td style="text-align:left">网页顶部&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">End&lt;/td>
&lt;td style="text-align:left">网页底部&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">PgUp&lt;/td>
&lt;td style="text-align:left">向上滚动&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">PgDn&lt;/td>
&lt;td style="text-align:left">向下滚动&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/hot-key/">hot-key</category><category domain="https://matnoble.me/tags/chrome/">Chrome</category><category domain="https://matnoble.me/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/">快捷键</category></item><item><title>在 Linux 上解决 Matlab 适应高分屏问题(字体过小)</title><link>https://matnoble.me/tech/programming/matlab-support-high-dpi-screens-on-linux/</link><guid isPermaLink="true">https://matnoble.me/tech/programming/matlab-support-high-dpi-screens-on-linux/</guid><pubDate>Wed, 19 Feb 2020 00:17:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/28/7db8ce4228cac49255a7248d8bf9cc0a.png"
title="设置之前，Matlab 字体小得看不清"
alt="设置之前，Matlab 字体小得看不清"
width="95%"
>
&lt;span class="caption">◎ 设置之前，Matlab 字体小得看不清&lt;/span>
&lt;/span>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/03/28/0806f0ae12ce5bf2892c3817d4f3484c.png"
title="Matlab 又恢复了原来的样子"
alt="Matlab 又恢复了原来的样子"
width="95%"
>
&lt;span class="caption">◎ Matlab 又恢复了原来的样子&lt;/span>
&lt;/span>
&lt;p>&lt;br />&lt;/p>
&lt;p>在 Linux 上装过 Matlab 的同学都可能遇到过这样的情况: 无论将桌面电脑字体调多大, Matlab 的字体总是那么小, 一通 Google 后, 找到如下解答:&lt;/p>
&lt;blockquote>
&lt;p>&lt;p>MATLAB supports High DPI screens on Linux starting from R2017b.
Tuning a high-DPI Linux system requires two steps:&lt;/p>
&lt;ol>
&lt;li>Setting the MATLAB scale factor&lt;/li>
&lt;li>Calibrating the system's DPI
The MATLAB scale factor affects MATLAB desktop and the size/position of windows.
The system DPI determines the scale and font size of axes and labels.&lt;/li>
&lt;/ol>
&lt;p>The two tuning steps are described below:&lt;/p>
&lt;ol>
&lt;li>To set the MATLAB scale factor, please execute the following commands in the MATLAB Command Window: (Here the scale factor has been set to 1.5.)&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-matlab" data-lang="matlab">&lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">s&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">settings&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">matlab&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">desktop&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">DisplayScaleFactor&lt;/span>
&lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">matlab&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">desktop&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">DisplayScaleFactor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">PersonalValue&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mf">1.5&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>To calibrate the system's DPI to match the scale factor, please use the following terminal commands:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-matlab" data-lang="matlab">$ &lt;span class="n">xdpyinfo&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">grep&lt;/span> &lt;span class="n">resolution&lt;/span>
&lt;span class="n">resolution&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">96&lt;/span>&lt;span class="n">x96&lt;/span> &lt;span class="n">dots&lt;/span> &lt;span class="n">per&lt;/span> &lt;span class="n">inch&lt;/span>
$ &lt;span class="n">xrandr&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">dpi&lt;/span> &lt;span class="mf">182.4&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The DPI value chosen should be the resolution found with &amp;quot;xdpyinfo&amp;quot; multiplied by the MATLAB scale factor that was set. In the example, 96 × 1.5 = 144.
MATLAB must be restarted after Step 2.&lt;/p>
&lt;p>&lt;strong>Note:&lt;/strong>&lt;/p>
&lt;p>In earlier releases than R2017b, high DPI screens on Linux is not supported.
The possible workarounds mentioned below may help improve the visual appearance:&lt;/p>
&lt;ul>
&lt;li>You can increase font sizes of text in the different windows. However, the icon or font size of the toolbar cannot be changed.&lt;/li>
&lt;li>You can switch the high DPI monitor to a lower screen resolution, for example 1920x1080 or as preferred.&lt;/li>
&lt;li>You can connect a lower resolution monitor and use MATLAB on that monitor.&lt;/li>
&lt;/ul>
&lt;/p>
&lt;footer>
&lt;strong>MathWorks Support Team&lt;/strong>
&lt;cite>
&lt;a href="https://ww2.mathworks.cn/matlabcentral/answers/406956-does-matlab-support-high-dpi-screens-on-linux#answer_325831" title="https://ww2.mathworks.cn/matlabcentral/answers/406956-does-matlab-support-high-dpi-screens-on-linux#answer_325831">ww2.mathworks.cn/matlabcentral/...&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
&lt;hr />
&lt;p>将第一个代码块的内容输入到 Matlab, 随后, 将第二个代码块的内容输入到 Terminal 中即可. 亲测 R2018a 可用.&lt;/p>
&lt;p>&lt;em>请根据自己设备的分辨率，自行改变上述数值，我的 2.5k 屏配置如下&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-matlab" data-lang="matlab">&lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">s&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">settings&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">matlab&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">desktop&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">DisplayScaleFactor&lt;/span>
&lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">matlab&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">desktop&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">DisplayScaleFactor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">PersonalValue&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mf">1.9&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">$ xdpyinfo &lt;span class="p">|&lt;/span> grep resolution
resolution: 96x96 dots per inch
$ xrandr --dpi 182.4
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;style type="text/css">.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:"Font Awesome 5 Free",FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:'\f071'}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:'\f05a'}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:'\f06a'}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:'\f058'}.notice.tip{background:#e6f9e6}&lt;/style>&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>本人电脑配置:&lt;/p>
&lt;ul>
&lt;li>Ubuntu 20.04 LTS&lt;/li>
&lt;li>Intel® Core™ i5-10210U CPU @ 1.60GHz × 8&lt;/li>
&lt;li>分辨率 2560 × 1600(16:10)&lt;/li>
&lt;li>GNOME 3.36.0&lt;/li>
&lt;li>64 位&lt;/li>
&lt;/ul>&lt;/div></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/programming/">programming</category><category domain="https://matnoble.me/tags/matlab/">Matlab</category><category domain="https://matnoble.me/tags/debug/">Debug</category></item><item><title>在 Hugo 博客上实践 Shortcodes 短代码, 太强大了</title><link>https://matnoble.me/tech/hugo/shortcodes-practice-tutorial-for-hugo/</link><guid isPermaLink="true">https://matnoble.me/tech/hugo/shortcodes-practice-tutorial-for-hugo/</guid><pubDate>Sun, 16 Feb 2020 00:22:42 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/02/21/d424e596ff76c8bcb4806ad185552783.jpg"
title="动手玩创意"
alt="动手玩创意"
width="95%"
>
&lt;span class="caption">◎ 动手玩创意&lt;/span>
&lt;/span>
&lt;p>操练起来!&lt;/p>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>Shortcodes 翻译为: 短代码或者简码&lt;/p>
&lt;blockquote>
&lt;p>&lt;p>简码是内容文件中的一个简单片段，Hugo将使用预定义的模板对其进行呈现.&lt;/p>
&lt;p>除了更清洁的Markdown外，短代码还可以随时更新以反映新的类，技术或标准. 在网站生成时，Hugo简码将轻松合并到您的更改中. 您避免了可能复杂的搜索和替换操作.&lt;/p>
&lt;/p>
&lt;footer>
&lt;strong>HUGO&lt;/strong>
&lt;cite>
&lt;a href="https://s0gohugo0io.icopy.site/content-management/shortcodes/#what-a-shortcode-is" title="https://s0gohugo0io.icopy.site/content-management/shortcodes/#what-a-shortcode-is">什么是简码&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
&lt;h3 id="需注意">需注意&lt;/h3>
&lt;p>本博客基于 HUGO, 使用的是 &lt;a href="https://io-oi.me/">reuixiy&lt;/a> 开发的 &lt;a href="https://github.com/reuixiy/hugo-theme-meme/">MemE 主题&lt;/a>, 但由于该主题暂时不支持 Shortcodes (与$\LaTeX$ 渲染冲突), 所以, 如果你用的也是该主题, 又想玩玩儿 Shortcodes, 那么你需要作出一些小修改, 修改办法见下方链接.&lt;/p>
&lt;blockquote>
&lt;p>MemE v4.0.0 breaks Hugo shortcodes&lt;/p>
&lt;footer>
&lt;strong>reuixiy&lt;/strong>
&lt;cite>
&lt;a href="https://github.com/reuixiy/hugo-theme-meme/issues/50" title="https://github.com/reuixiy/hugo-theme-meme/issues/50">github.com/reuixiy/...&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
&lt;ul>
&lt;li>为防止 &lt;code>shortcodes&lt;/code> 语法被博客生产 &lt;code>短代码&lt;/code>, 加
&lt;mark>*&lt;/mark>
使用
&lt;mark>{{&amp;lt;/* myshortcode */&amp;gt;}}&lt;/mark>
&lt;/li>
&lt;/ul>
&lt;p>输出结果为:&lt;/p>
&lt;pre>&lt;code>{{&amp;lt; myshortcode &amp;gt;}}
&lt;/code>&lt;/pre>&lt;h2 id="shortcodes-实例">Shortcodes 实例&lt;/h2>
&lt;h3 id="当前年-year">当前年 Year&lt;/h3>
&lt;p>官网例子, 输出今年的年份.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">今年是 {{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">year&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}} 年.
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>今年是 2021
年.&lt;/p>
&lt;p>只需建立 &lt;code>./layouts/shortcodes/year.html&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">{{ now.Format &amp;#34;2006&amp;#34; }}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="mark-标记支持">mark 标记支持&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">{{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">mark&lt;/span> &lt;span class="na">text&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;HTML 标记&amp;#34;&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;mark>HTML 标记&lt;/mark>
&lt;p>&lt;br />
实现方法很简单, 只需创建 &lt;code>mark.html&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="c">&amp;lt;!-- ./layouts/shortcodes/mark.html
&lt;/span>&lt;span class="c">https://matnoble.me/posts/shortcodes-practice-tutorial-for-hugo/#mark-标记支持
&lt;/span>&lt;span class="c">--&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">mark&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>{{ .Get &amp;#34;text&amp;#34; }}&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">mark&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="abbr-缩写支持">abbr 缩写支持&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">{{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">abbr&lt;/span> &lt;span class="na">title&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;Huazhong University of Science and Technology&amp;#34;&lt;/span> &lt;span class="na">text&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;HUST&amp;#34;&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;abbr title="Huazhong University of Science and Technology">HUST&lt;/abbr>
&lt;p>&lt;br />
实现方法也很简单, 只需创建 &lt;code>abbr.html&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="c">&amp;lt;!-- ./layouts/shortcodes/abbr.html
&lt;/span>&lt;span class="c">https://matnoble.me/posts/shortcodes-practice-tutorial-for-hugo/#abbr-缩写支持
&lt;/span>&lt;span class="c">--&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">abbr&lt;/span> &lt;span class="na">title&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;{{ .Get &amp;#34;&lt;/span>&lt;span class="na">title&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="err">}}&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>{{ .Get &amp;#34;text&amp;#34; }}&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">abbr&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="维基百科-wikipedia">维基百科 Wikipedia&lt;/h3>
&lt;p>借鉴自&lt;a href="https://github.com/parsiya/Hugo-Shortcodes/blob/master/shortcodes/wp.html">GitHub&lt;/a>, 举个栗子:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">{{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">wp&lt;/span> &lt;span class="na">tag&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;Wikipedia:历史上的今天&amp;#34;&lt;/span> &lt;span class="na">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;zh&amp;#34;&lt;/span> &lt;span class="na">title&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;历史上的今天&amp;#34;&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;a href="https://zh.wikipedia.org/wiki/Wikipedia:%e5%8e%86%e5%8f%b2%e4%b8%8a%e7%9a%84%e4%bb%8a%e5%a4%a9">历史上的今天&lt;/a>
&lt;h3 id="blockquote">blockquote&lt;/h3>
&lt;p>借鉴自&lt;a href="https://github.com/parsiya/Hugo-Shortcodes/blob/master/shortcodes/blockquote.html">GitHub&lt;/a>, 举个栗子:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">{{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">blockquote&lt;/span> &lt;span class="na">author&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;李健&amp;#34;&lt;/span> &lt;span class="na">link&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://baike.baidu.com/item/%E6%87%82%E5%BE%97/22699721&amp;#34;&lt;/span> &lt;span class="na">title&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;《懂得》&amp;#34;&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
花开花谢 白天黑夜&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">br&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
一切自然 又不尽然&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">br&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
春夏秋冬 经过才懂&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">br&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
世间冷暖 无非自然
{{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="nt">blockquote&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>花开花谢 白天黑夜&lt;br />
一切自然 又不尽然&lt;br />
春夏秋冬 经过才懂&lt;br />
世间冷暖 无非自然&lt;/p>
&lt;footer>
&lt;strong>李健&lt;/strong>
&lt;cite>
&lt;a href="https://baike.baidu.com/item/%E6%87%82%E5%BE%97/22699721" title="https://baike.baidu.com/item/%E6%87%82%E5%BE%97/22699721">《懂得》&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
&lt;h3 id="image-with-caption">image with caption&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">{{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">imgcap&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://ttfou.com/images/2020/02/20/75294917c54568d991f5e2e0581dafb8.jpg&amp;#34;&lt;/span> &lt;span class="na">title&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;陪安东尼度过漫长岁月&amp;#34;&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://ttfou.com/images/2020/02/20/75294917c54568d991f5e2e0581dafb8.jpg"
title="陪安东尼度过漫长岁月"
alt="陪安东尼度过漫长岁月"
width="95%"
>
&lt;span class="caption">◎ 陪安东尼度过漫长岁月&lt;/span>
&lt;/span>
&lt;p>&lt;br />
实现稍复杂一些, 依旧建立 &lt;code>imgcap.html&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="c">&amp;lt;!--
&lt;/span>&lt;span class="c">./layouts/shortcodes/imgcap.html
&lt;/span>&lt;span class="c">https://matnoble.me/posts/shortcodes-practice-tutorial-for-hugo/#image-with-caption
&lt;/span>&lt;span class="c">--&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;caption-wrapper&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;caption&amp;#34;&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;{{ .Get &amp;#34;&lt;/span>&lt;span class="na">src&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="err">}}&amp;#34;&lt;/span>
&lt;span class="na">title&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;{{ .Get &amp;#34;&lt;/span>&lt;span class="na">title&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="err">}}&amp;#34;&lt;/span>
&lt;span class="na">alt&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;{{ if .Get &amp;#34;&lt;/span>&lt;span class="na">alt&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="err">}}{{&lt;/span> &lt;span class="err">.&lt;/span>&lt;span class="na">Get&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="na">alt&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="err">}}{{&lt;/span> &lt;span class="na">else&lt;/span> &lt;span class="err">}}{{&lt;/span> &lt;span class="err">.&lt;/span>&lt;span class="na">Get&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="na">title&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="err">}}{{&lt;/span> &lt;span class="na">end&lt;/span> &lt;span class="err">}}&amp;#34;&lt;/span>
&lt;span class="na">width&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;{{ if .Get &amp;#34;&lt;/span>&lt;span class="na">width&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="err">}}{{&lt;/span> &lt;span class="err">.&lt;/span>&lt;span class="na">Get&lt;/span> &lt;span class="err">&amp;#34;&lt;/span>&lt;span class="na">width&lt;/span>&lt;span class="err">&amp;#34;&lt;/span> &lt;span class="err">}}{{&lt;/span> &lt;span class="na">else&lt;/span> &lt;span class="err">}}&lt;/span>&lt;span class="na">95&lt;/span>&lt;span class="err">%{{&lt;/span> &lt;span class="na">end&lt;/span> &lt;span class="err">}}&amp;#34;&lt;/span>
&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;caption&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>◎ {{ .Get &amp;#34;title&amp;#34; }}&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>其中, &lt;code>src&lt;/code> 和 &lt;code>title&lt;/code> 为必填项, &lt;code>alt&lt;/code> 和 &lt;code>width&lt;/code> 为选填项, &lt;code>alt&lt;/code> 默认与 &lt;code>title&lt;/code> 保持一致, &lt;code>width&lt;/code> 默认值为:
&lt;mark>95%&lt;/mark>
.&lt;/p>
&lt;h3 id="hugo-notice">Hugo-notice&lt;/h3>
&lt;p>
&lt;blockquote>
&lt;p>This is not a standalone theme. It is a Hugo theme component providing a shortcode: notice to display nice notices. Four notice types are provided: warning, info, note and tip.&lt;/p>
&lt;footer>
&lt;strong>martignoni&lt;/strong>
&lt;cite>
&lt;a href="https://github.com/martignoni/hugo-notice" title="https://github.com/martignoni/hugo-notice">hugo-notice&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
&lt;code>hugo-notice&lt;/code> 是一个制作十分精美的短代码, 非常感谢原作者的付出, 但使用并不需要把他的仓库 copy 到本地, 只需将 &lt;code>notice.html&lt;/code> copy 到 &lt;code>./layouts/shortcodes/&lt;/code> 下, 如需要翻译, 且使用 &lt;code>MemE 主题&lt;/code>, 只需要在根目录下创建 &lt;code>./i18n/zh-cn.toml&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="p">[&lt;/span>&lt;span class="nx">warning&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">other&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;警告&amp;#34;&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="nx">note&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">other&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;注释&amp;#34;&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="nx">info&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">other&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;引言&amp;#34;&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="nx">tip&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">other&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;小贴示&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>显示效果如下:&lt;/p>
&lt;h4 id="warning">Warning&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">{{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">notice&lt;/span> &lt;span class="na">warning&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
这是告诫! 请注意!
{{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="nt">notice&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;style type="text/css">.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:"Font Awesome 5 Free",FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:'\f071'}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:'\f05a'}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:'\f06a'}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:'\f058'}.notice.tip{background:#e6f9e6}&lt;/style>&lt;div class="notice warning" >
&lt;p class="first notice-title">Ｗarning&lt;/p>&lt;p>这是告诫! 请注意!&lt;/p>&lt;/div>
&lt;h4 id="info">Info&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">{{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">notice&lt;/span> &lt;span class="na">info&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
这是引言
{{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="nt">notice&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="notice info" >
&lt;p class="first notice-title">Info&lt;/p>&lt;p>这是引言&lt;/p>&lt;/div>
&lt;h4 id="tip">Tip&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">{{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">notice&lt;/span> &lt;span class="na">tip&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
这是小贴示
{{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="nt">notice&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="notice tip" >
&lt;p class="first notice-title">Tips&lt;/p>&lt;p>这是小贴示&lt;/p>&lt;/div>
&lt;h4 id="note">Note&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">{{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">notice&lt;/span> &lt;span class="na">note&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
这是注释
{{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="nt">notice&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="notice note" >
&lt;p class="first notice-title">Note&lt;/p>&lt;p>这是注释&lt;/p>&lt;/div>
&lt;h3 id="音乐-music">音乐 Music&lt;/h3>
&lt;p>基于 &lt;a href="https://github.com/metowolf/MetingJS">MetingJS&lt;/a> 制作 &lt;code>./layouts/shortcodes/music.html&lt;/code>&lt;/p>
&lt;pre>&lt;code>{{&amp;lt; music id=&amp;quot;569200212&amp;quot; type=&amp;quot;song&amp;quot; server=&amp;quot;netease&amp;quot; &amp;gt;}}
&lt;/code>&lt;/pre>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">option&lt;/th>
&lt;th style="text-align:center">default&lt;/th>
&lt;th style="text-align:center">description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">id&lt;/td>
&lt;td style="text-align:center">require&lt;/td>
&lt;td style="text-align:center">song id / playlist id / album id / search keyword&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">server&lt;/td>
&lt;td style="text-align:center">require&lt;/td>
&lt;td style="text-align:center">music platform: netease, tencent, kugou, xiami, baidu&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">type&lt;/td>
&lt;td style="text-align:center">require&lt;/td>
&lt;td style="text-align:center">song, playlist, album, search, artist&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>更多选项看&lt;a href="https://github.com/metowolf/MetingJS#option">这里&lt;/a>&lt;/p>
&lt;p>显示效果:
&lt;div class="notice warning" >
&lt;p class="first notice-title">Ｗarning&lt;/p>&lt;p>该 shortcodes 存在问题! 会导致 TOC 目录点击失效, 所以, 暂时只能将音乐放到没有目录的页面 👇&lt;/p>&lt;/div>
&lt;a href="https://matnoble.me/about">&lt;img title="点击跳转" alt="Aplayer 播放器" src="https://ttfou.com/images/2020/02/18/3596ac5359d85bd85bab7f0241a3ab97.png" />&lt;/a>&lt;/p>
&lt;h3 id="视频-video">视频 Video&lt;/h3>
&lt;h4 id="youtube">YouTube&lt;/h4>
&lt;p>原生支持 YouTube, 代码如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">{{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">youtube&lt;/span> &lt;span class="na">ID&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/MHsiF9avPww" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;h4 id="b-站">B 站&lt;/h4>
&lt;div style="position: relative; width: 100%; padding-bottom: 70%; padding-top: 5px; height: 0; overflow: hidden;">
&lt;iframe src="https://matnoble.me//player.bilibili.com/player.html?aid=12440781&amp;cid=20478809&amp;page=1" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> &lt;/iframe>
&lt;/div>
&lt;h4 id="优酷-youku">优酷 YOUKU&lt;/h4>
&lt;p>还可以创建&lt;code>./layouts/shortcodes/youku.html&lt;/code> 使其支持 &lt;code>YOUKU&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">{{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">youku&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;ID&amp;#34;&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div style="position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;">
&lt;iframe src="https://player.youku.com/embed/XNDU0OTY4OTg4OA==?" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" allowfullscreen frameborder="0" title="YouKu Video">&lt;/iframe>
&lt;/div>
&lt;h3 id="github-gist">GitHub gist&lt;/h3>
&lt;p>原生支持, 添加 GitHub gist&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">{{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">gist&lt;/span> &lt;span class="na">MatNoble&lt;/span> &lt;span class="na">b8d6a9541221fef7c30bf214d3505836&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;script type="application/javascript" src="https://gist.github.com/MatNoble/b8d6a9541221fef7c30bf214d3505836.js">&lt;/script>
&lt;h3 id="好友链接-friend-link">好友链接 Friend link&lt;/h3>
&lt;p>很多博客都支持添加 &lt;code>友链&lt;/code>, 本博客也不例外, 在&lt;a href="https://matnoble.me/search/#%E5%8F%8B%E9%93%BE">这里&lt;/a>
借鉴自 &lt;a href="https://github.com/kkkgo/hugo-friendlinks">hugo-friendlinks&lt;/a>, 针对本主题, 稍加修改.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">{{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">friend&lt;/span> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;数学小兵儿&amp;#34;&lt;/span> &lt;span class="na">url&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://matnoble.me/&amp;#34;&lt;/span> &lt;span class="na">logo&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;/icons/android-chrome-512x512.png&amp;#34;&lt;/span> &lt;span class="na">word&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;数学＆计算机 我都爱&amp;#34;&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;p>&lt;a target="_blank" href=https://matnoble.me/ title=数学小兵儿 class="friendurl">
&lt;div class="frienddiv">
&lt;div class="frienddivleft">
&lt;img class="myfriend" src=/icons/android-chrome-512x512.png />
&lt;/div>
&lt;div class="frienddivright">
数学小兵儿&lt;br />数学＆计算机 我都爱
&lt;/div>
&lt;/div>
&lt;/a>
&lt;/p>
&lt;h3 id="提供下载-download">提供下载 download&lt;/h3>
&lt;p>以上所有 &lt;code>shortcodes&lt;/code> 代码都可以访问以下 &lt;code>GitHub&lt;/code> 链接下载, 欢迎发现问题的同学提交&lt;a href="https://github.com/MatNoble/hugo-shortcodes-sets/issues/1">Issues&lt;/a>!&lt;/p>
&lt;blockquote>
&lt;p>These are shortcodes that I have created for the Hugo static blogging engine.&lt;/p>
&lt;footer>
&lt;strong>数学小兵儿&lt;/strong>
&lt;cite>
&lt;a href="https://github.com/MatNoble/hugo-shortcodes-sets" title="https://github.com/MatNoble/hugo-shortcodes-sets">hugo shortcodes sets&lt;/a>
&lt;/cite>
&lt;/footer>
&lt;/blockquote>
&lt;h3 id="更多示例">更多示例&lt;/h3>
&lt;ol>
&lt;li>&lt;a href="https://github.com/spf13/spf13.com/tree/master/layouts/shortcodes" title="See more examples of shortcodes by visiting the shortcode directory of the source for spf13.com, the blog of Hugo's creator, Steve Francia.">shortcodes directory for spf13.com&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gohugoio/hugo/tree/master/docs/layouts/shortcodes" title="See the shortcode source directory for the documentation site you're currently reading.">shortcodes directory for the Hugo docs&lt;/a>&lt;/li>
&lt;/ol></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/hugo/">HUGO</category><category domain="https://matnoble.me/tags/hugo/">Hugo</category></item><item><title>使用 Emacs 制作 LaTeX 表格</title><link>https://matnoble.me/tech/latex/using-emacs-to-make-latex-table/</link><guid isPermaLink="true">https://matnoble.me/tech/latex/using-emacs-to-make-latex-table/</guid><pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>$\LaTeX$ 输出表格一般情况是不容易的, 但在 &lt;strong>Emacs&lt;/strong> 中, 利用 &lt;strong>快捷键&lt;/strong> 实现 &lt;strong>快捷操作&lt;/strong>, 创建 $\LaTeX$ 表格就容易多了.&lt;/p>
&lt;div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">&lt;iframe src="https://matnoble.me//player.bilibili.com/player.html?aid=88928743&amp;cid=151902070&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 90%; left: 0; top: 0;"> &lt;/iframe>&lt;/div>
&lt;h2 id="步骤解析">步骤解析&lt;/h2>
&lt;ul>
&lt;li>Step 1 &lt;code>table&lt;/code>基础环境&lt;/li>
&lt;/ul>
&lt;p>&lt;code>C-c C-e&lt;/code> 后键入 &lt;code>table&lt;/code>, 经过选取一些基本参数, 得到&lt;code>table&lt;/code>环境. 视频前 30s 展示次步骤.&lt;/p>
&lt;blockquote>
&lt;p>参数包括:&lt;/p>
&lt;ul>
&lt;li>&lt;code>Float position&lt;/code>: 一般填写&lt;code>ht&lt;/code>;&lt;/li>
&lt;li>&lt;code>Caption&lt;/code>: 表格标题;(应修改其默认位置至&lt;code>tabular&lt;/code>之前)&lt;/li>
&lt;li>&lt;code>Center? (y or n)&lt;/code>: 居中选&lt;code>y&lt;/code>;&lt;/li>
&lt;li>&lt;code>(Optional) position&lt;/code>: 直接回车;&lt;/li>
&lt;li>Format: 每一列小单元格对齐情况: &lt;code>l c r&lt;/code>, 并且选择是否有竖线&lt;code>|&lt;/code>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;ul>
&lt;li>Step 2 横线&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;ul>
&lt;li>&lt;code>M-N 某操作&lt;/code>: 其中&lt;code>N&lt;/code>为数字, 该快捷键的意思是: 执行&lt;code>N&lt;/code>次某操作. 比如
&lt;ul>
&lt;li>&lt;code>M-4 RET&lt;/code>为: 按四次回车;&lt;/li>
&lt;li>&lt;code>M-5 Space&lt;/code>为: 按五次空格;&lt;/li>
&lt;li>$\cdots$&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;code>\hline&lt;/code>意为横线.&lt;/p>
&lt;p>&lt;code>C-x r t string RET&lt;/code>是很重要的快操作指令, 见视频 23s ~ 1m50s.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Step 3 块复制和块粘贴&lt;br>
之所以用 Emacs 制作 LaTeX 有优势, 就是因为&lt;code>块操作&lt;/code>, 见视频 2m ~ 2m45s.&lt;/p>
&lt;ul>
&lt;li>&lt;code>C-x r M-w&lt;/code> : 块复制&lt;/li>
&lt;li>&lt;code>C-x r y&lt;/code>: 块粘贴&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Step 4 调整首行间距&lt;br>
利用&lt;code>makecell&lt;/code>宏包, &lt;code>\Gape[6pt]{}&lt;/code>指令, 见视频 3m20s ~ 3m40s.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr />
&lt;h2 id="emacs-块操作快捷键">Emacs 块操作快捷键&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">指令&lt;/th>
&lt;th style="text-align:center">快捷键&lt;/th>
&lt;th style="text-align:left">含义&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">移除块 (kill-rectangle)&lt;/td>
&lt;td style="text-align:center">C-x r k&lt;/td>
&lt;td style="text-align:left">把块删除并放入块移除存储中&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">复制块 (copy-rectangle-as-kill)&lt;/td>
&lt;td style="text-align:center">C-x r M-w&lt;/td>
&lt;td style="text-align:left">把块内容存入删除存储中&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">删除块 (delete-rectangle)&lt;/td>
&lt;td style="text-align:center">C-x r d&lt;/td>
&lt;td style="text-align:left">清除块的内容, 不保存&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">取回块 (yank-rectangle)&lt;/td>
&lt;td style="text-align:center">C-x r y&lt;/td>
&lt;td style="text-align:left">把 kill ring 中最后一个块取出&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">添加空块 (open-rectangle)&lt;/td>
&lt;td style="text-align:center">C-x r o&lt;/td>
&lt;td style="text-align:left">按块添加空格, 原先内容向右移动&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">清空块 (clear-rectangle)&lt;/td>
&lt;td style="text-align:center">C-x r c&lt;/td>
&lt;td style="text-align:left">把块中内容换成空格&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">添加行号 (rectangle-number-lines)&lt;/td>
&lt;td style="text-align:center">C-x r N&lt;/td>
&lt;td style="text-align:left">在所选行前添加行号, 原先内容右移动&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">块替换字符 (string-rectangle)&lt;/td>
&lt;td style="text-align:center">C-x r t string RET&lt;/td>
&lt;td style="text-align:left">把所选择的块的每一行都替换成相同的字符&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">块选择模式 (rectangle-mark-mode)&lt;/td>
&lt;td style="text-align:center">C-x SPACE&lt;/td>
&lt;td style="text-align:left">可以在该模式中按照块进行选择, 并使用普通的移除, 删除操作&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">把块内容保存到 (copy-rectangle-to-register)&lt;/td>
&lt;td style="text-align:center">C-x r r R&lt;/td>
&lt;td style="text-align:left">其中 'R' 代表任意字符, 相当于变量名, 指明内容保存的名字&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">插入保存的块 (insert-register)&lt;/td>
&lt;td style="text-align:center">C-x r i R&lt;/td>
&lt;td style="text-align:left">其中 'R' 代表任意字符, 相当于是保存块内容的变量&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;blockquote>
&lt;p>注: &lt;code>C&lt;/code>为&lt;code>Ctrl&lt;/code>键, &lt;code>M&lt;/code>为&lt;code>Alt&lt;/code>键．&lt;/p>
&lt;/blockquote>
&lt;h2 id="开源代码">开源代码&lt;/h2>
&lt;p>GitHub: &lt;a href="https://github.com/MatNoble/LaTeX-Document/tree/master/table-test" title="github.com/MatNoble/LaTeX-Document">github.com/MatNoble/LaTeX-Document&lt;/a>&lt;/p></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/latex/">latex</category><category domain="https://matnoble.me/tags/emacs/">Emacs</category><category domain="https://matnoble.me/tags/latex/">LaTeX</category></item><item><title>正交矩阵之旋转与镜射</title><link>https://matnoble.me/math/linear-algebra/rotationandmirroring/</link><guid isPermaLink="true">https://matnoble.me/math/linear-algebra/rotationandmirroring/</guid><pubDate>Mon, 10 Feb 2020 00:00:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h2 id="正交矩阵">正交矩阵&lt;/h2>
&lt;p>假设 $A$ 为 $n$ 阶实方阵, 满足&lt;/p>
&lt;p>$$A^{\mathsf T}A = AA^{\mathsf T} = I$$&lt;/p>
&lt;p>即 $A^{\mathsf T}=A^{-1}$, 称 $A$ &lt;code>正交矩阵&lt;/code>(orthogonal matrix). 由上式可知: $\lVert A \rVert = \pm 1$.&lt;/p>
&lt;p>&lt;br />&lt;/p>
&lt;p>设 $A=[\alpha_1, \dots, \alpha_n],\ \alpha_i$ 为 $A$ 的列向量, 满足&lt;/p>
&lt;p>$$
\alpha_i \cdot \alpha_j=
\begin{cases}
1 \quad i = j
\\[3pt]
0 \quad i \neq j
\end{cases}
$$&lt;/p>
&lt;p>即正交矩阵的列向量是 $\mathbb{R}^n$ 的&lt;code>标准正交基&lt;/code>.&lt;/p>
&lt;p>&lt;br />&lt;/p>
&lt;p>&lt;strong>正交矩阵满足如下性质:&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>对于任意 $\mathbf{x}, \mathbf{y}\in\mathbb{R}^n$, $$(A\mathbf{x})^{\mathsf T}(A\mathbf{y})=\mathbf{x}^{\mathsf T}\mathbf{y}$$&lt;/li>
&lt;li>对于任一 $\mathbf{x}\in\mathbb{R}^n$, $$\Vert A\mathbf{x}\Vert=\Vert\mathbf{x}\Vert$$&lt;/li>
&lt;li>对于任意 $\mathbf{x},\mathbf{y}\in\mathbb{R}^n$, $$\Vert A\mathbf{x}-A\mathbf{y}\Vert=\Vert\mathbf{x}-\mathbf{y}\Vert$$&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p style="font-size:15px;color:gray" >上述性质采用循环式证明不难验证&lt;/p>
&lt;p>&lt;br />&lt;/p>
&lt;p>假设 $A\mathbf{x} = \lambda\mathbf{x}, , \mathbf{x}\neq 0$, 利用性质 2&lt;/p>
&lt;p>$$
\Vert\mathbf{x}\Vert = \Vert A\mathbf{x}\Vert= \Vert\lambda \mathbf{x}\Vert = \vert\lambda\vert \Vert\mathbf{x}\Vert
$$&lt;/p>
&lt;p>得到: $\vert\lambda\vert = 1$, 即正交矩阵的特征值的绝对值等于 $1$.&lt;/p>
&lt;h2 id="旋转">旋转&lt;/h2>
&lt;p>若 $\lVert A \rVert = 1$, 则成正交矩阵 $A$ 为&lt;code>旋转矩阵&lt;/code>. 当 $n=2$ 时, 逆时针旋转 $\theta$ 角度的旋转矩阵为:&lt;/p>
&lt;p>$$
R(\theta) = \begin{bmatrix} \cos(\theta) &amp;amp; -\sin(\theta) \\ \sin(\theta) &amp;amp; \cos(\theta) \end{bmatrix}
$$&lt;/p>
&lt;p>显然, $R(\theta)^{\mathsf T}=R(-\theta)=R^{-1}(\theta)$, 且&lt;/p>
&lt;p>$$\lVert R(\theta) \rVert =\cos^2\theta+\sin^2\theta=1$$&lt;/p>
&lt;p>以及 $R(\theta)$ 的特征值为 $\cos\theta\pm i\sin\theta$, 其中 $i=\sqrt{-1}$.&lt;/p>
&lt;h2 id="镜射">镜射&lt;/h2>
&lt;p>令 $\mathcal{U}$ 为 $\mathbb{R}^n$ 的一个子空间，且 $P$ 是值域为 $\mathcal{U}^\perp$ 的正交投影矩阵，满足&lt;sup id="fnref:1">&lt;a href="https://matnoble.me/math/linear-algebra/rotationandmirroring/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;p>$$P^2=P=P^T$$&lt;/p>
&lt;p>给定 $\mathbf{x}\in\mathbb{R}^n$, 写出 $\mathbf{x}=P\mathbf{x}+(I-P)\mathbf{x}$, 其中 $P\mathbf{x}\in\mathcal{U}^\perp$, $(I-P)\mathbf{x}\in\mathcal{U}$, 因为&lt;/p>
&lt;p>$$
\begin{aligned}
(P\mathbf{x})^{\mathsf T}(I-P)\mathbf{x} &amp;amp;=\mathbf{x}^{\mathsf T}P^{\mathsf T}(I-P)\mathbf{x} \\[3pt]
&amp;amp;=\mathbf{x}^{\mathsf T}(P-P^2 )\mathbf{x}=0
\end{aligned}
$$&lt;/p>
&lt;p>&lt;br />&lt;/p>
&lt;img src="https://imgkr.cn-bj.ufileos.com/1e618ee3-8723-47bb-be2b-d19084ace2b4.png" title="镜射矩阵" alt="镜射矩阵">
&lt;p>假设 $n=3$, 如上图所示, 令&lt;/p>
&lt;p>$$S\mathbf{x}=P\mathbf{x}+(P-I)\mathbf{x}=(2P-I)\mathbf{x}$$&lt;/p>
&lt;p>对于子空间 $\mathcal{U}^\perp$，我们称 $S\mathbf{x}$ 是点 $\mathbf{x}$ 的镜射点，镜射矩阵为&lt;/p>
&lt;p>$$ S=2P-I$$&lt;/p>
&lt;p>&lt;br />&lt;/p>
&lt;p>假设 $n=2$,&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>若 $\mathcal{U}^\perp={\mathbf{0}}$, 则正交投影矩阵为 $P_1=0$, 对于原点的镜射矩阵则为 $S_1=-I_2$.&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;blockquote>
&lt;ul>
&lt;li>若 $\mathcal{U}^\perp=L$ 为一穿越原点的直线, 称为&lt;code>镜射轴&lt;/code>, 设 $L$ 与正 $X$ 轴的夹角为 $\phi$ (以下夹角皆为逆时针转角).&lt;/li>
&lt;/ul>
&lt;p>令 $\mathbf{v}=[\cos\phi, , \sin\phi ]^{\mathsf T}$ 代表镜射轴 $L$ 的方向向量, 即 $L=\text{span}\{\mathbf{v}\}$. 写出映至直线 $L$ 的正交投影矩阵
$$P_2=\frac{\mathbf{v}\mathbf{v}^{\mathsf T}}{\mathbf{v}^{\mathsf T}\mathbf{v}}=\mathbf{v}\mathbf{v}^{\mathsf T}$$
相应的, 镜射轴 $L$ 的镜射矩阵为&lt;/p>
&lt;p>$$
\begin{aligned}
S_2&amp;amp;=2\mathbf{v}\mathbf{v}^{\mathsf T}-I \\[3pt]
&amp;amp;=\begin{bmatrix} 2\cos^2\phi-1&amp;amp;2\cos\phi\sin\phi \\ 2\sin\phi\cos\phi&amp;amp;2\sin^2\phi-1 \end{bmatrix} \\[3pt]
&amp;amp;= \begin{bmatrix} \cos 2\phi&amp;amp;\sin 2\phi \\ \sin 2\phi &amp;amp;-\cos 2\phi \end{bmatrix}
\end{aligned}
$$&lt;/p>
&lt;/blockquote>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="https://matnoble.me/posts/matrixleastsquares/#%E6%AD%A3%E4%BA%A4%E6%8A%95%E5%BD%B1%E7%9F%A9%E9%98%B5">https://matnoble.me/posts/matrixleastsquares/#%E6%AD%A3%E4%BA%A4%E6%8A%95%E5%BD%B1%E7%9F%A9%E9%98%B5&lt;/a> &lt;a href="https://matnoble.me/math/linear-algebra/rotationandmirroring/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description><category domain="https://matnoble.me/math/">math</category><category domain="https://matnoble.me/math/linear-algebra/">Linear-Algebra</category><category domain="https://matnoble.me/series/mla/">线代拾遗</category><category domain="https://matnoble.me/tags/%E7%9F%A9%E9%98%B5/">矩阵</category><category domain="https://matnoble.me/tags/%E7%89%B9%E6%AE%8A%E7%9F%A9%E9%98%B5/">特殊矩阵</category></item><item><title>LaTeX 微分算子你真的用对了吗？</title><link>https://matnoble.me/tech/latex/latex-differential-operator/</link><guid isPermaLink="true">https://matnoble.me/tech/latex/latex-differential-operator/</guid><pubDate>Sat, 08 Feb 2020 00:13:54 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/4e7ca500-bdca-42dc-9444-bffa8af84fc5.png" width="95%" />&lt;/p>
&lt;div align="center">&lt;a href="https://matnoble.me/series/latex">◎ 你过来啊 🤞&lt;/a>&lt;/div>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/f460a324-d7ef-4924-8693-f8462e97dbf8.svg" width=95% />&lt;/p>
&lt;p>最终结论:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\newcommand*&lt;/span>&lt;span class="nb">{&lt;/span>&lt;span class="k">\dif&lt;/span>&lt;span class="nb">}{&lt;/span>&lt;span class="k">\mathop&lt;/span>&lt;span class="nb">{}&lt;/span>&lt;span class="k">\!\mathrm&lt;/span>&lt;span class="nb">{&lt;/span>d&lt;span class="nb">}}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后引用它&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="sb">\[&lt;/span>&lt;span class="nb">
&lt;/span>&lt;span class="nb"> &lt;/span>&lt;span class="nv">\int&lt;/span>&lt;span class="nb"> x^{&lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="nb">} &lt;/span>&lt;span class="nv">\dif&lt;/span>&lt;span class="nb"> x
&lt;/span>&lt;span class="nb">&lt;/span>&lt;span class="s">\]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$
\int x^{2} \mathop{}\!\mathrm{d} x
$$&lt;/p></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/latex/">latex</category><category domain="https://matnoble.me/series/latex/">LaTeX 排版「冷」知识</category><category domain="https://matnoble.me/tags/">标签云</category></item><item><title>Gram 矩阵</title><link>https://matnoble.me/math/linear-algebra/gram/</link><guid isPermaLink="true">https://matnoble.me/math/linear-algebra/gram/</guid><pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h2 id="gram-矩阵">Gram 矩阵&lt;/h2>
&lt;p>假设 $A$ 是一个 $m\times n$ 阶矩阵,&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>列向量 Gram 矩阵&lt;br>
$A$ 由列向量 $\mathbf{\alpha}_i$ 表示, 即
$$A=\begin{bmatrix}\mathbf{\alpha}_1 &amp;amp; \mathbf{\alpha}_2 &amp;amp;\cdots &amp;amp; \mathbf{\alpha}_n \end{bmatrix}$$
则&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>$$
\begin{aligned}
G &amp;amp;= \, A^{\mathsf T}A \\[3pt]
&amp;amp;= \begin{bmatrix} \mathbf{\alpha}_1^{\mathsf T} \\ \mathbf{\alpha}_2^{\mathsf T} \\ \vdots \\ \mathbf{\alpha}_n^{\mathsf T} \end{bmatrix} \begin{bmatrix} \mathbf{\alpha}_1 &amp;amp; \mathbf{\alpha}_2 &amp;amp; \cdots &amp;amp; \mathbf{\alpha}_n \end{bmatrix} \\[3pt]
&amp;amp; = \begin{bmatrix} \mathbf{\alpha}_1^{\mathsf T}\mathbf{\alpha}_1 &amp;amp; \mathbf{\alpha}_1^{\mathsf T}\mathbf{\alpha}_2 &amp;amp; \cdots &amp;amp; \mathbf{\alpha}_1^{\mathsf T}\mathbf{\alpha}_n \\ \mathbf{\alpha}_2^{\mathsf T}\mathbf{\alpha}_1 &amp;amp; \mathbf{\alpha}_2^{\mathsf T}\mathbf{\alpha}_2 &amp;amp; \cdots &amp;amp;\mathbf{\alpha}_2^{\mathsf T}\mathbf{\alpha}_n \\ \vdots &amp;amp; \vdots &amp;amp; &amp;amp; \vdots \\ \mathbf{\alpha}_n^{\mathsf T}\mathbf{\alpha}_1 &amp;amp; \mathbf{\alpha}_n^{\mathsf T}\mathbf{\alpha}_2 &amp;amp; \cdots &amp;amp; \mathbf{\alpha}_n^{\mathsf T}\mathbf{\alpha}_n \end{bmatrix}
\end{aligned}
$$&lt;/p>
&lt;blockquote>
&lt;ol start="2">
&lt;li>行向量 Gram 矩阵&lt;br>
$A$ 由行向量 $\mathbf{\beta}_i^{\mathsf T}$ 表示, 即
$$A=\begin{bmatrix}\mathbf{\beta}_1^{\mathsf T} \\ \mathbf{\beta}_2^{\mathsf T} \\ \vdots \\ \mathbf{\beta}_m^{\mathsf T} \end{bmatrix}$$
则&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>$$
\begin{aligned}
G &amp;amp;= \, AA^{\mathsf T} \\[3pt]
&amp;amp;= \begin{bmatrix}\mathbf{\beta}_1^{\mathsf T} \\ \mathbf{\beta}_2^{\mathsf T} \\ \vdots \\ \mathbf{\beta}_m^{\mathsf T} \end{bmatrix} \begin{bmatrix} \mathbf{\beta}_1 &amp;amp; \mathbf{\beta}_2 &amp;amp; \cdots &amp;amp; \mathbf{\beta}_m \end{bmatrix} \\[3pt]
&amp;amp; = \begin{bmatrix} \mathbf{\beta}_1^{\mathsf T}\mathbf{\beta}_1 &amp;amp; \mathbf{\beta}_1^{\mathsf T}\mathbf{\beta}_2 &amp;amp; \cdots &amp;amp; \mathbf{\beta}_1^{\mathsf T}\mathbf{\beta}_m \\ \mathbf{\beta}_2^{\mathsf T}\mathbf{\beta}_1 &amp;amp; \mathbf{\beta}_2^{\mathsf T}\mathbf{\beta}_2 &amp;amp; \cdots &amp;amp;\mathbf{\beta}_2^{\mathsf T}\mathbf{\beta}_m \\ \vdots &amp;amp; \vdots &amp;amp; &amp;amp; \vdots \\ \mathbf{\beta}_m^{\mathsf T}\mathbf{\beta}_1 &amp;amp; \mathbf{\beta}_m^{\mathsf T}\mathbf{\beta}_2 &amp;amp; \cdots &amp;amp; \mathbf{\beta}_m^{\mathsf T}\mathbf{\beta}_m \end{bmatrix}
\end{aligned}
$$&lt;/p>
&lt;h2 id="6-大性质">6 大性质&lt;/h2>
&lt;p>下面只考虑&lt;code>列向量 Gram 矩阵&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>(1) $G = A^{\mathsf T}A$ 是对称矩阵&lt;/p>
&lt;/blockquote>
&lt;p>$$
G^{\mathsf T } = (A^{\mathsf T}A)^{\mathsf T} = A^{\mathsf T}A = G
$$&lt;/p>
&lt;p>&lt;br />&lt;/p>
&lt;blockquote>
&lt;p>(2) 对于实矩阵 $A$ $$\mathrm{rank} (A^{\mathsf T}A) = \mathrm{rank} (A)$$&lt;/p>
&lt;/blockquote>
&lt;p>证明&lt;/p>
&lt;p>$$
\begin{cases} A\mathsf{x} = 0 \\[3pt] A^{\mathsf T}A\mathbf{x} = 0 \end{cases}
$$&lt;/p>
&lt;p>同解即可.&lt;/p>
&lt;p>证明过程详见&lt;a href="https://matnoble.me/posts/matrix4basicth/#%E7%BB%8F%E5%85%B8%E4%BE%8B%E9%A2%98">经典例题(第３小问)&lt;/a>&lt;/p>
&lt;p>&lt;br />&lt;/p>
&lt;blockquote>
&lt;p>(3) 若 $A^{\mathsf T}A=0$, 则 $A = 0$&lt;/p>
&lt;/blockquote>
&lt;p>由上面性质
$$\begin{aligned} \mathrm{rank} (A^{\mathsf T}A) &amp;amp;= \mathrm{rank} (A) \\&lt;br>
&amp;amp;= \mathrm{rank} \ (0) = 0 \end{aligned}$$&lt;/p>
&lt;p>&lt;br />&lt;/p>
&lt;blockquote>
&lt;p>(4) 对于实矩阵 $A$, 则 $A^{\mathsf T}A$ 是半正定矩阵
$$ \mathbf{x}^{\mathsf T}A^{\mathsf T}A\mathbf{x} = (A\mathbf{x})^{\mathsf T}A\mathbf{x} \geq 0 $$&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>(5) 对于任意 $n$ 阶实对称半正定矩阵 $M$, 存在矩阵 $A$ 使得 $M=A^{\mathsf T}A$ 成立.&lt;/p>
&lt;/blockquote>
&lt;p>因为矩阵 $M$ 实对称, 所以 $M$ 可以&lt;code>正交对角化&lt;/code>, 即&lt;/p>
&lt;p>$$M = Q\Lambda Q^{\mathsf T}$$&lt;/p>
&lt;p>又因为矩阵 $M$ 半正定, 所以其特征值 $\lambda_i \geq 0 $, 所以可记&lt;/p>
&lt;p>$$
\Lambda^{\frac{1}{2}} = \mathrm{diag} (\sqrt{\lambda_1}, \dots, \sqrt{\lambda_n})
$$&lt;/p>
&lt;p>且&lt;/p>
&lt;p>$$
A=\Lambda^{\frac{1}{2}}Q^{\mathsf T}
$$&lt;/p>
&lt;p>则可得&lt;/p>
&lt;p>$$\begin{aligned} M &amp;amp;= Q\Lambda Q^{\mathsf T} \\[3pt]
&amp;amp;= (\Lambda^{\frac{1}{2}}Q^{\mathsf T})^{\mathsf T}\Lambda^{\frac{1}{2}}Q^{\mathsf T} \\[3pt]
&amp;amp;= A^{\mathsf T}A \end{aligned}$$&lt;/p>
&lt;p>&lt;br />&lt;/p>
&lt;blockquote>
&lt;p>(6) 若 $A=\left[ \mathbf{\alpha}_1 , \mathbf{\alpha}_2 , \cdots , \mathbf{\alpha}_n \right]$ 列满秩, 则 $A^{\mathsf T}A$ 正定&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>由性质 (2), 知 $\mathrm{rank} (A^{\mathsf T}A) = \mathrm{rank} (A) = n$&lt;/li>
&lt;li>因为 $A\mathbf{x}=0$ 只有零解, 结合性质 (4), 对于非零 $\mathbf{x}\in \mathbb{R}^n$
$$ \mathbf{x}^{\mathsf T}A^{\mathsf T}A\mathbf{x} = (A\mathbf{x})^{\mathsf T}A\mathbf{x} &amp;gt; 0 $$&lt;/li>
&lt;/ul></description><category domain="https://matnoble.me/math/">math</category><category domain="https://matnoble.me/math/linear-algebra/">Linear-Algebra</category><category domain="https://matnoble.me/series/mla/">线代拾遗</category><category domain="https://matnoble.me/tags/%E7%9F%A9%E9%98%B5/">矩阵</category><category domain="https://matnoble.me/tags/%E7%89%B9%E6%AE%8A%E7%9F%A9%E9%98%B5/">特殊矩阵</category></item><item><title>华中科技大学本科生招生宣传</title><link>https://matnoble.me/life/hust/undergraduate-admissions-promotion/</link><guid isPermaLink="true">https://matnoble.me/life/hust/undergraduate-admissions-promotion/</guid><pubDate>Thu, 30 Jan 2020 00:00:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/c7594e88-eedb-488c-9ae2-b84947452a92.png" title="华中科技大学词云" alt="华中科技大学词云" />&lt;/p>
&lt;h2 id="江城武汉">江城—武汉&lt;/h2>
&lt;p>&lt;a href="http://www.hust.edu.cn/">华中科技大学&lt;/a> 位于号称 “九省通衢” 的..武汉.. .&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/65db1d4a-cf68-4037-9969-88e7753eb399.png" title="武汉市" alt="九省通衢武汉" />&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>中部六省唯一的副省级市和特大城市&lt;/li>
&lt;li>中国中部地区的中心城市&lt;/li>
&lt;li>全国重要的工业基地、科教基地和综合交通枢纽&lt;/li>
&lt;li>2018中国城市综合实力排行版—内地第五城&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h3 id="地理位置">地理位置&lt;/h3>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/7a925d4a-fe38-4933-ab38-5aa8ae17d3cc.png" title="武汉市 九省通衢" alt="九省通衢武汉" width=75% />
&lt;span class="caption">◎ 九省通衢 武汉&lt;/span>&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>武汉位居国家“八横八纵”高铁网络中心&lt;/li>
&lt;li>从武汉坐高铁可直达全国25个省（市、自治区）&lt;/li>
&lt;li>武汉与20个直辖市或省会城市形成“半天生活圈”（5小时内）&lt;/li>
&lt;li>中国经济地理中心：以武汉为圆心，1200公里为半径画圆，可覆盖全国11.6亿人口，92%的经济总量&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h3 id="旅游圣地">旅游圣地&lt;/h3>
&lt;p>&lt;a href="https://www.zhihu.com/question/22023662">武汉旅游攻略&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/32f4ef7e-4629-4b06-a58d-98b891f2f6c5.png" title="黄鹤楼　武汉长江大桥　户部巷　东湖绿道　光谷世界城" alt="九省通衢武汉" width=85% />&lt;/p>
&lt;h3 id="huster-眼中的武汉">Huster 眼中的武汉&lt;/h3>
&lt;blockquote>
&lt;p>近日，华中科技大学一名大二的学生拍摄的97秒视频《我在武汉》走红网络，97秒23种特技，画面中武汉各地标建筑无缝对接，短短几天就获30万点击量。&lt;sup id="fnref:1">&lt;a href="https://matnoble.me/life/hust/undergraduate-admissions-promotion/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;/blockquote>
&lt;div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">&lt;iframe src="https://matnoble.me//player.bilibili.com/player.html?aid=40129588&amp;cid=70476902&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 90%; left: 0; top: 0;"> &lt;/iframe>&lt;/div>
&lt;h2 id="硬核华中大">硬核华中大&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>校徽
&lt;img src="https://imgkr.cn-bj.ufileos.com/1bc5d4b3-414f-49f9-84e9-254be8586dfa.png" title="华中科技大学校徽" alt="华中科技大学校徽" width=40% />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>校训&lt;/p>
&lt;/li>
&lt;/ul>
&lt;H2 style="display:block;text-align:center;color:gray;font-family: "Arial","Microsoft YaHei","黑体","宋体",sans-serif">明德　厚学　求是　创新&lt;/H2>
&lt;ul>
&lt;li>词云&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/ffd1dd37-9f10-4c27-9dc1-86d9c5e62ed7.png" title="华中科技大学词云" alt="华中科技大学词云" width=60% />&lt;/p>
&lt;h3 id="学校排名">学校排名&lt;/h3>
&lt;p>在各类排名中, 华中大排在国内 10 名..左..右.
&lt;img src="https://imgkr.cn-bj.ufileos.com/73cd68f7-5cf1-4f64-8037-280b8597453a.png" title="华中大硬核排名" alt="双一流森林式校园华中大" />&lt;/p>
&lt;h3 id="国家实验室">国家实验室&lt;/h3>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/dcd5a921-9907-45c0-98f9-4a93948d49ec.png" title="国家实验室" alt="双一流森林式校园华中大" />&lt;/p>
&lt;blockquote>
&lt;p>12月，来自华中科技大学武汉光电国家研究中心的2014级直博毕业生左鹏飞接受了华为“天才计划”的offer，一毕业就拿下最高档200万年薪。10日，左鹏飞接受了长江日报记者专访，首次透露了华为对“天才少年”的要求及“学霸炼成记”。&lt;sup id="fnref:2">&lt;a href="https://matnoble.me/life/hust/undergraduate-admissions-promotion/#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;/p>
&lt;/blockquote>
&lt;h3 id="学在华中大">学在华中大&lt;/h3>
&lt;blockquote>
&lt;p>一个人的学费, 两个人的课程, 三个人的作业&lt;sup id="fnref:3">&lt;a href="https://matnoble.me/life/hust/undergraduate-admissions-promotion/#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/9fddd138-3f7f-485c-a409-1ed72b57d1f4.png" title="一流教学, 一流本科" alt="双一流森林式校园华中大" />&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/b7ba64c2-a639-4704-a1d2-967f32b2bc49.png" title="转出无门槛, 转入有要求" alt="双一流森林式校园华中大" />&lt;/p>
&lt;h3 id="校园生活">校园生活&lt;/h3>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/23a8127b-f166-40c9-93e2-4619ddd0f1cc.png" title="各式各样音乐节" alt="双一流森林式校园华中大" />&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/7bc7929e-b875-42ce-b71c-e87f2b401f50.png" title="丰富多彩的校园活动" alt="双一流森林式校园华中大" />&lt;/p>
&lt;h3 id="毕业去向">毕业去向&lt;/h3>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/a87e569f-751d-4ce1-9e9d-9db3028eb67e.png" title="华中大本科毕业去向" alt="双一流森林式校园华中大" />&lt;/p>
&lt;h3 id="杰出校友">杰出校友&lt;/h3>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/0dcf018d-150d-41bc-a20a-4be7febf3a60.png" title="华中大杰出校友" alt="双一流森林式校园华中大" />&lt;/p>
&lt;hr />
&lt;h2 id="华中大新闻">华中大新闻&lt;/h2>
&lt;h3 id="默克尔访华5">默克尔访华&lt;sup id="fnref:4">&lt;a href="https://matnoble.me/life/hust/undergraduate-admissions-promotion/#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>&lt;/h3>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/0e801cd2-2e4d-4716-a564-fe4865d1f63e.jpg" title="默克尔华中科技大学演讲" alt="2019年德国总理默克尔在华中科技大学演讲" width=95% />&lt;/p>
&lt;hr />
&lt;h2 id="数学专业不香吗">「数学专业」不香吗?&lt;/h2>
&lt;p>&lt;a href="http://maths.hust.edu.cn/">华中科技大学数学与统计学院&lt;/a> ..数学与应用数学.. 等 27 个专业入选国家级一流本科专业建设点.&lt;sup id="fnref:5">&lt;a href="https://matnoble.me/life/hust/undergraduate-admissions-promotion/#fn:5" class="footnote-ref" role="doc-noteref">5&lt;/a>&lt;/sup> 本科专业包括:&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>数学与应用数学&lt;/li>
&lt;li>信息与计算科学&lt;/li>
&lt;li>统计学&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>待完成...&lt;/p>
&lt;h2 id="学习经验分享">学习经验分享&lt;/h2>
&lt;h3 id="个人简介">个人简介&lt;/h3>
&lt;blockquote>
&lt;p>2018 级数学与统计学院研究生, 计算数学专业, 研究方向为: 有限元方法研究及其数值分析&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;ul>
&lt;li>&lt;em>18, 19年研究生数学建模国家二等奖&lt;/em>&lt;/li>
&lt;li>&lt;em>18-19 学年, 数统学院高等代数助教&lt;/em>&lt;/li>
&lt;li>&lt;em>19-20 学年, 材料学院微积分助教&lt;/em>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;blockquote>
&lt;p>联系方式&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;ul>
&lt;li>&lt;a href="https://github.com/MatNoble">GitHub&lt;/a>&lt;/li>
&lt;li>[Gmail](mailto: &lt;a href="mailto:hustmatnoble@gmail.com">hustmatnoble@gmail.com&lt;/a>)&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h3 id="数学专业的数学讲什么">数学专业的数学讲什么?&lt;/h3>
&lt;p>待完成...&lt;/p>
&lt;hr />
&lt;h2 id="官方宣传视频">官方宣传视频&lt;/h2>
&lt;h3 id="遇见华中大">遇见华中大&lt;/h3>
&lt;div style="position: relative; width: 100%; padding-bottom: 70%; padding-top: 5px; height: 0; overflow: hidden;">
&lt;iframe src="https://matnoble.me//player.bilibili.com/player.html?aid=56170676&amp;cid=98179520&amp;page=1" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> &lt;/iframe>
&lt;/div>
&lt;h3 id="遇见森林式大学">遇见森林式大学&lt;/h3>
&lt;div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">&lt;iframe src="https://matnoble.me//player.bilibili.com/player.html?aid=56551950&amp;cid=98808951&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 90%; left: 0; top: 0;"> &lt;/iframe>&lt;/div>
&lt;h3 id="遇见地铁时代">遇见地铁时代&lt;/h3>
&lt;div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">&lt;iframe src="https://matnoble.me//player.bilibili.com/player.html?aid=56299596&amp;cid=98393641&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 90%; left: 0; top: 0;"> &lt;/iframe>&lt;/div>
&lt;h3 id="遇见舌尖上的华中大">遇见舌尖上的华中大&lt;/h3>
&lt;div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">&lt;iframe src="https://matnoble.me//player.bilibili.com/player.html?aid=56330731&amp;cid=98444212&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 90%; left: 0; top: 0;"> &lt;/iframe>&lt;/div>
&lt;h2 id="最美华中大">最美华中大&lt;/h2>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/a5e5afb8-433d-47dc-8346-aff06a54a01a.jpg" title="华科南一门(正门)" alt="双一流森林式校园华中科技大学校大门" width=95% />
&lt;span class="caption">◎ 南一门(正门)&lt;/span>&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/29f21dba-5312-4c14-9342-2709c17f3a52.jpg" title="机械大楼" alt="双一流森林式校园华中科技大学机械大楼" width=95% />
&lt;span class="caption">◎ 机械大楼&lt;/span>&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/2cd1f62d-f55e-4824-a3c5-d12ea050b077.jpg" title="东九教学楼" alt="双一流森林式校园华中科技大学图书馆" width=95% />
&lt;span class="caption">◎ 东九教学楼&lt;/span>&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/046cb913-0471-4c87-aefa-ebf74b235f52.jpg" title="图书馆" alt="双一流森林式校园华中科技大学" width=95% />
&lt;span class="caption">◎ 图书馆&lt;/span>&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/f43494d9-57cc-4a2a-8183-80d433d694b3.jpg" title="校史馆" alt="双一流森林式校园华中科技大学校史馆" width=95% />
&lt;span class="caption">◎ 校史馆&lt;/span>&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/94a9ae90-0af1-429a-82c9-17d630d385f9.jpg" title="醉晚庭" alt="双一流森林式校园华中科技大学醉翁庭" width=95% />
&lt;span class="caption">◎ 醉晚庭&lt;/span>&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/5b7d5c30-6bed-4efb-9fe8-98ba0fadda99.jpg" title="落日余晖" alt="双一流森林式校园华中科技大学落日余晖" width=95% />
&lt;span class="caption">◎ 夕阳西下&lt;/span>&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/374a2994-c881-4df9-9515-738289594589.jpg" title="华中大森林" alt="双一流森林式校园华中科技大学" width=95% />
&lt;span class="caption">◎ 森林式大学&lt;/span>&lt;/p>
&lt;p>华科真的很大很大, 进校园一定要借助地图!!! (无论６月份是否选择华科，都欢迎来华科转一转)&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/121ca44f-2e9f-4e56-a5a6-4e809eab7f36.webp" title="华科真的很大很大, 进校园一定要借助地图!!!" alt="双一流森林式校园华中大地图" width=95% />&lt;/p>
&lt;p>&lt;em>注: 上图不包含同济校区&lt;/em>&lt;/p>
&lt;hr />
&lt;h2 id="祝福">祝福&lt;/h2>
&lt;blockquote>
&lt;p>但行好事, 莫问前程&lt;br>
念念不忘, 必有回响&lt;/p>
&lt;/blockquote>
&lt;p>如果大家有相关问题, 欢迎大家在下方评论, 还可以关注我的公众号:..数系家园.., 和我交流！&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/3a790fe7-9d04-42d6-8f21-89171fb4b4bb.gif" title="公众号: 数系家园" alt="公众号: 数系家园" width=45% />&lt;/p>
&lt;hr />
&lt;h2 id="联系我们">联系我们&lt;/h2>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/7811d4d0-8ef7-4c15-9d8d-d9da517fe3b7.png" title="扫我，更了解我" alt="公众号: 数系家园" width=85% />&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/aad61475-1bed-4a57-ac70-be4368e19f7d.png" title="扫我，更了解我" alt="公众号: 数系家园" width=75% />&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="http://hb.people.com.cn/n2/2019/0112/c192237-32522723.html">http://hb.people.com.cn/n2/2019/0112/c192237-32522723.html&lt;/a> &lt;a href="https://matnoble.me/life/hust/undergraduate-admissions-promotion/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>&lt;a href="http://news.jznews.com.cn/system/2019/12/11/011977158.shtml">http://news.jznews.com.cn/system/2019/12/11/011977158.shtml&lt;/a> &lt;a href="https://matnoble.me/life/hust/undergraduate-admissions-promotion/#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>&lt;a href="https://v.qq.com/x/page/d0922xbb43y.html">https://v.qq.com/x/page/d0922xbb43y.html&lt;/a> &lt;a href="https://matnoble.me/life/hust/undergraduate-admissions-promotion/#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4" role="doc-endnote">
&lt;p>&lt;a href="https://china.diplo.de/cn-zh/aktuelles/neuigkeiten/-/2246012">https://china.diplo.de/cn-zh/aktuelles/neuigkeiten/-/2246012&lt;/a> &lt;a href="https://matnoble.me/life/hust/undergraduate-admissions-promotion/#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:5" role="doc-endnote">
&lt;p>&lt;a href="https://news.eol.cn/dongtai/202001/t20200103_1703589.shtml">https://news.eol.cn/dongtai/202001/t20200103_1703589.shtml&lt;/a> &lt;a href="https://matnoble.me/life/hust/undergraduate-admissions-promotion/#fnref:5" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description><category domain="https://matnoble.me/life/">life</category><category domain="https://matnoble.me/life/hust/">hust</category><category domain="https://matnoble.me/tags/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/">经验分享</category></item><item><title>一行 Python 代码, 跨设备传输文件</title><link>https://matnoble.me/tech/programming/transferfiles/</link><guid isPermaLink="true">https://matnoble.me/tech/programming/transferfiles/</guid><pubDate>Tue, 28 Jan 2020 00:00:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>拥有 Linux 的你, 是否为&lt;code>传递文件&lt;/code>而烦恼? 即使有微信, qq, 是否可以迅速找到文件位置?&lt;/p>
&lt;p>下面, 用一行代码建立&lt;code>HTTPS&lt;/code>服务器, 在局域网内, 任意设备间&lt;code>快速&lt;/code>, &lt;code>精准&lt;/code>传递文件.&lt;/p>
&lt;p>Python 代码&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">python -m SimpleHTTPServer &lt;span class="m">8000&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/4d9e0649-adf7-40fd-b6e7-a7828d4f9295.gif" alt="一行代码传输文件">&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">localhost:8000
ip:8000
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>其中, &lt;code>ip&lt;/code> 通过以下指令得到&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">ifconfig -a
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;img src="https://imgkr.cn-bj.ufileos.com/57da2641-2364-47b3-a29e-d49b63469ac0.png" title="ifconfig -a" alt="ifconfig -a">
&lt;p>在手机端, 浏览器内输入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">ip:8000
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;img src="https://imgkr.cn-bj.ufileos.com/0839c899-55f1-4cfb-a36d-956aa3383679.jpg" title="手机接收文件" alt="手机接收文件"></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/programming/">programming</category><category domain="https://matnoble.me/tags/python/">Python</category></item><item><title>LaTeX 各种箭头</title><link>https://matnoble.me/tech/latex/latex-arrow/</link><guid isPermaLink="true">https://matnoble.me/tech/latex/latex-arrow/</guid><pubDate>Mon, 27 Jan 2020 00:13:54 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/4e7ca500-bdca-42dc-9444-bffa8af84fc5.png" width="95%" />&lt;/p>
&lt;div align="center">&lt;a href="https://matnoble.me/series/latex">◎ 你过来啊 🤞&lt;/a>&lt;/div>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">&lt;/th>
&lt;th style="text-align:left">&lt;/th>
&lt;th style="text-align:center">&lt;/th>
&lt;th style="text-align:left">&lt;/th>
&lt;th style="text-align:center">&lt;/th>
&lt;th style="text-align:left">&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">$\gets$&lt;/td>
&lt;td style="text-align:left">\leftarrow or \gets&lt;/td>
&lt;td style="text-align:center">$\longleftarrow$&lt;/td>
&lt;td style="text-align:left">\longleftarrow&lt;/td>
&lt;td style="text-align:center">$\nearrow$&lt;/td>
&lt;td style="text-align:left">\nearrow&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\to$&lt;/td>
&lt;td style="text-align:left">\rightarrow or \to&lt;/td>
&lt;td style="text-align:center">$\longrightarrow$&lt;/td>
&lt;td style="text-align:left">\longrightarrow&lt;/td>
&lt;td style="text-align:center">$\searrow$&lt;/td>
&lt;td style="text-align:left">\searrow&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\leftrightarrow$&lt;/td>
&lt;td style="text-align:left">\leftrightarrow&lt;/td>
&lt;td style="text-align:center">$\longleftrightarrow$&lt;/td>
&lt;td style="text-align:left">\longleftrightarrow&lt;/td>
&lt;td style="text-align:center">$\swarrow$&lt;/td>
&lt;td style="text-align:left">\swarrow&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\Leftarrow$&lt;/td>
&lt;td style="text-align:left">\Leftarrow&lt;/td>
&lt;td style="text-align:center">$\Longleftarrow$&lt;/td>
&lt;td style="text-align:left">\Longleftarrow&lt;/td>
&lt;td style="text-align:center">$\nwarrow$&lt;/td>
&lt;td style="text-align:left">\nwarrow&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\Rightarrow$&lt;/td>
&lt;td style="text-align:left">\Rightarrow&lt;/td>
&lt;td style="text-align:center">$\Longrightarrow$&lt;/td>
&lt;td style="text-align:left">\Longrightarrow&lt;/td>
&lt;td style="text-align:center">$\leadsto$&lt;/td>
&lt;td style="text-align:left">\leadsto&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\Leftrightarrow$&lt;/td>
&lt;td style="text-align:left">\Leftrightarrow&lt;/td>
&lt;td style="text-align:center">$\Longleftrightarrow$&lt;/td>
&lt;td style="text-align:left">\Longleftrightarrow&lt;/td>
&lt;td style="text-align:center">$\rightleftharpoons$&lt;/td>
&lt;td style="text-align:left">\uparrow&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\mapsto$&lt;/td>
&lt;td style="text-align:left">\mapsto&lt;/td>
&lt;td style="text-align:center">$\longmapsto$&lt;/td>
&lt;td style="text-align:left">\longmapsto&lt;/td>
&lt;td style="text-align:center">$\uparrow$&lt;/td>
&lt;td style="text-align:left">\downarrow&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\hookleftarrow$&lt;/td>
&lt;td style="text-align:left">\hookleftarrow&lt;/td>
&lt;td style="text-align:center">$\hookrightarrow$&lt;/td>
&lt;td style="text-align:left">\hookrightarrow&lt;/td>
&lt;td style="text-align:center">$\downarrow$&lt;/td>
&lt;td style="text-align:left">\updownarrow&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\leftharpoonup$&lt;/td>
&lt;td style="text-align:left">\leftharpoonup&lt;/td>
&lt;td style="text-align:center">$\rightharpoonup$&lt;/td>
&lt;td style="text-align:left">\rightharpoonup&lt;/td>
&lt;td style="text-align:center">$\updownarrow$&lt;/td>
&lt;td style="text-align:left">\Uparrow&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\leftharpoondown$&lt;/td>
&lt;td style="text-align:left">\leftharpoondown&lt;/td>
&lt;td style="text-align:center">$\rightharpoondown$&lt;/td>
&lt;td style="text-align:left">\rightharpoondown&lt;/td>
&lt;td style="text-align:center">$\Uparrow$&lt;/td>
&lt;td style="text-align:left">\Downarrow&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\rightleftharpoons$&lt;/td>
&lt;td style="text-align:left">\rightleftharpoons&lt;/td>
&lt;td style="text-align:center">$\iff$&lt;/td>
&lt;td style="text-align:left">\iff&lt;/td>
&lt;td style="text-align:center">$\Downarrow$&lt;/td>
&lt;td style="text-align:left">\Updownarrow&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/latex/">latex</category><category domain="https://matnoble.me/series/latex/">LaTeX 排版「冷」知识</category><category domain="https://matnoble.me/tags/">标签云</category></item><item><title>LaTeX 二元关系符</title><link>https://matnoble.me/tech/latex/latex-binary-relation-symbol/</link><guid isPermaLink="true">https://matnoble.me/tech/latex/latex-binary-relation-symbol/</guid><pubDate>Sun, 26 Jan 2020 00:13:54 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/4e7ca500-bdca-42dc-9444-bffa8af84fc5.png" width="95%" />&lt;/p>
&lt;div align="center">&lt;a href="https://matnoble.me/series/latex">◎ 你过来啊 🤞&lt;/a>&lt;/div>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">&lt;/th>
&lt;th style="text-align:left">&lt;/th>
&lt;th style="text-align:center">&lt;/th>
&lt;th style="text-align:left">&lt;/th>
&lt;th style="text-align:center">&lt;/th>
&lt;th style="text-align:left">&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">$&amp;lt;$&lt;/td>
&lt;td style="text-align:left">&amp;lt;&lt;/td>
&lt;td style="text-align:center">$&amp;gt;$&lt;/td>
&lt;td style="text-align:left">&amp;gt;&lt;/td>
&lt;td style="text-align:center">$=$&lt;/td>
&lt;td style="text-align:left">=&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\leq$&lt;/td>
&lt;td style="text-align:left">\leq&lt;/td>
&lt;td style="text-align:center">$\geq$&lt;/td>
&lt;td style="text-align:left">\geq&lt;/td>
&lt;td style="text-align:center">$\equiv$&lt;/td>
&lt;td style="text-align:left">\equiv&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\ll$&lt;/td>
&lt;td style="text-align:left">\ll&lt;/td>
&lt;td style="text-align:center">$\gg$&lt;/td>
&lt;td style="text-align:left">\gg&lt;/td>
&lt;td style="text-align:center">$\doteq$&lt;/td>
&lt;td style="text-align:left">\doteq&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\prec$&lt;/td>
&lt;td style="text-align:left">\prec&lt;/td>
&lt;td style="text-align:center">$\succ$&lt;/td>
&lt;td style="text-align:left">\succ&lt;/td>
&lt;td style="text-align:center">$\sim$&lt;/td>
&lt;td style="text-align:left">\sim&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\preceq$&lt;/td>
&lt;td style="text-align:left">\preceq&lt;/td>
&lt;td style="text-align:center">$\succeq$&lt;/td>
&lt;td style="text-align:left">\succeq&lt;/td>
&lt;td style="text-align:center">$\simeq$&lt;/td>
&lt;td style="text-align:left">\simeq&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\subset$&lt;/td>
&lt;td style="text-align:left">\subset&lt;/td>
&lt;td style="text-align:center">$\supset$&lt;/td>
&lt;td style="text-align:left">\supset&lt;/td>
&lt;td style="text-align:center">$\approx$&lt;/td>
&lt;td style="text-align:left">\approx&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\subseteq$&lt;/td>
&lt;td style="text-align:left">\subseteq&lt;/td>
&lt;td style="text-align:center">$\supseteq$&lt;/td>
&lt;td style="text-align:left">\supseteq&lt;/td>
&lt;td style="text-align:center">$\cong$&lt;/td>
&lt;td style="text-align:left">\cong&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\in$&lt;/td>
&lt;td style="text-align:left">\in&lt;/td>
&lt;td style="text-align:center">$\ni$&lt;/td>
&lt;td style="text-align:left">\ni&lt;/td>
&lt;td style="text-align:center">$\notin$&lt;/td>
&lt;td style="text-align:left">\notin&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\mid$&lt;/td>
&lt;td style="text-align:left">\mid&lt;/td>
&lt;td style="text-align:center">$\parallel$&lt;/td>
&lt;td style="text-align:left">\parallel&lt;/td>
&lt;td style="text-align:center">$\perp$&lt;/td>
&lt;td style="text-align:left">\perp&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\because$&lt;/td>
&lt;td style="text-align:left">\because&lt;/td>
&lt;td style="text-align:center">$\therefore$&lt;/td>
&lt;td style="text-align:left">\therefore&lt;/td>
&lt;td style="text-align:center">$\neq$&lt;/td>
&lt;td style="text-align:left">\neq&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/latex/">latex</category><category domain="https://matnoble.me/series/latex/">LaTeX 排版「冷」知识</category><category domain="https://matnoble.me/tags/">标签云</category></item><item><title>矩阵的四个基本空间的基底</title><link>https://matnoble.me/math/linear-algebra/basicspacebase/</link><guid isPermaLink="true">https://matnoble.me/math/linear-algebra/basicspacebase/</guid><pubDate>Fri, 24 Jan 2020 00:00:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>之前介绍过矩阵有四个基本空间&lt;/p>
&lt;img src="https://imgkr.cn-bj.ufileos.com/dcb900fa-a4ec-466d-a019-5e9a75079026.png" title="矩阵的四个基本空间" alt="矩阵的四个基本空间"/>
&lt;p>并且有两组正交关系&lt;/p>
&lt;img src="https://imgkr.cn-bj.ufileos.com/15a582b0-4471-4ae6-8985-02f9d4ea2edc.png" title="矩阵的四个基本空间正交关系" alt="矩阵的四个基本空间正交关系"/>
&lt;p>有了空间，若想继续研究，就需要找一些 ..代表.. ，即 ..基底..&lt;/p>
&lt;h2 id="普通基底">普通基底&lt;/h2>
&lt;p>本小节用到的技术手段很简单－－ ..初等行变换..&lt;/p>
&lt;p>假设有任意 $m\times n$ 阶矩阵 $A$，经过一系列..初等行变换..得到行阶梯型矩阵 $R$．因为这一系列初等行变换可对应地表示为一系列初等矩阵的乘积 $E$，因此，上述过程可描述为:&lt;/p>
&lt;p>$$
E\begin{bmatrix}A &amp;amp; I_m \end{bmatrix} = \begin{bmatrix}R &amp;amp; E \end{bmatrix}
$$&lt;/p>
&lt;p>其中，行阶梯型矩阵 $R$ 可..分块..表示为:&lt;/p>
&lt;p>$$
R = \begin{bmatrix}I_r &amp;amp; F \\ 0 &amp;amp; 0 \end{bmatrix}
$$&lt;/p>
&lt;p>$I_r$ 为 $r$ 阶单位阵, $F$ 为 $r \times (n-r)$ 阶矩阵．&lt;/p>
&lt;p>$E$ 为非奇异 $m$ 阶方阵，对应 $R$ 可..分块..表示为&lt;/p>
&lt;p>$$
E = \begin{bmatrix} E_1 \\[3pt] E_2 \end{bmatrix}
$$&lt;/p>
&lt;p>$E_1$ 为 $r\times m$ 阶，$E_２$ 为 $(m-r)\times m$ 阶&lt;/p>
&lt;p>综上&lt;/p>
&lt;p>$$
\begin{bmatrix}R &amp;amp; E \end{bmatrix} = \begin{bmatrix}I_r &amp;amp; F &amp;amp; E_1\\ 0 &amp;amp; 0 &amp;amp; E_2\end{bmatrix}
$$&lt;/p>
&lt;p>矩阵 $A$ 的四个基本空间的基底信息全部蕴含在上式中&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/dcb900fa-a4ec-466d-a019-5e9a75079026.png" alt="">&lt;/p>
&lt;h3 id="行空间-camathsf-t">行空间 $C(A^{\mathsf T})$&lt;/h3>
&lt;p>初等行变换不改变行空间，即&lt;/p>
&lt;p>$$
C(A^{\mathsf T}) = C(R^{\mathsf T})
$$&lt;/p>
&lt;p>所以，$\left[ I_r \quad F \right]$ 构成 $C(A^{\mathsf T})$ 的一组基底．&lt;/p>
&lt;h3 id="零空间-na">零空间 $N(A)$&lt;/h3>
&lt;p>初等行变换不改变零空间，即
$$N(A) = N(R)$$&lt;/p>
&lt;p>显然
$$P = \begin{bmatrix}-F \\[3pt] I_{n-r}\end{bmatrix}$$&lt;/p>
&lt;p>满足 $RP=0$，且 $P$ 列满秩，所以，$P$ 构成矩阵 $A$ 的零空间．&lt;/p>
&lt;h3 id="列空间-ca">列空间 $C(A)$&lt;/h3>
&lt;p>初等行变换改变列空间，但不改变矩阵列向量间的线性关系，即 $A$ 矩阵中 $I_r$ 对应的列指标构成列空间的一组基底．(下有例题)&lt;/p>
&lt;h3 id="左零空间-namathsf-t">左零空间 $N(A^{\mathsf T})$&lt;/h3>
&lt;p>$$
EA = \begin{bmatrix} E_1A \\[3pt] E_2A \end{bmatrix} = \begin{bmatrix}I_r &amp;amp; F \\ 0 &amp;amp; 0 \end{bmatrix} = R
$$&lt;/p>
&lt;p>由 $E_2A = 0$，知 $E_2$ 的行向量属于左零空间 $N(A^{\mathsf T})$．因为 $E$ 非奇异，所以 $E_2$ 的行向量也线性无关，构成 $N(A^{\mathsf T})$ 的一组基底．&lt;/p>
&lt;h3 id="例题">例题&lt;/h3>
&lt;p>假设一个 $4\times 5$ 阶矩阵 $A$&lt;/p>
&lt;p>$$
A=\left[\begin{array}{lllll}
{2} &amp;amp; {6} &amp;amp; {2} &amp;amp; {2} &amp;amp; {2} \\&lt;br>
{1} &amp;amp; {3} &amp;amp; {1} &amp;amp; {1} &amp;amp; {1} \\&lt;br>
{3} &amp;amp; {9} &amp;amp; {3} &amp;amp; {4} &amp;amp; {5} \\&lt;br>
{1} &amp;amp; {3} &amp;amp; {1} &amp;amp; {2} &amp;amp; {3}
\end{array}\right]
$$&lt;/p>
&lt;p>求其 $C(A^{\mathsf T}), N(A), C(A)$ 以及 $N(A^{\mathsf T})$&lt;/p>
&lt;p>进行..初等行变换..&lt;/p>
&lt;p>$$
\begin{bmatrix}A &amp;amp; I_4 \end{bmatrix}
\to
\begin{bmatrix}R &amp;amp; E \end{bmatrix}
$$&lt;/p>
&lt;p>$$
\left[\begin{array}{lllll|llll}{2} &amp;amp; {6} &amp;amp; {2} &amp;amp; {2} &amp;amp; {2} &amp;amp; {1} &amp;amp; {0} &amp;amp; {0} &amp;amp; {0} \\ {1} &amp;amp; {3} &amp;amp; {1} &amp;amp; {1} &amp;amp; {1} &amp;amp; {0} &amp;amp; {1} &amp;amp; {0} &amp;amp; {0} \\ {3} &amp;amp; {9} &amp;amp; {3} &amp;amp; {4} &amp;amp; {5} &amp;amp; {0} &amp;amp; {0} &amp;amp; {1} &amp;amp; {0} \\ {1} &amp;amp; {3} &amp;amp; {1} &amp;amp; {2} &amp;amp; {3} &amp;amp; {0} &amp;amp; {0} &amp;amp; {0} &amp;amp; {1}\end{array}\right]
\to
$$
$$
\left[\begin{array}{rrrrr|rrrr}{1} &amp;amp; {3} &amp;amp; {1} &amp;amp; {0} &amp;amp; {-1} &amp;amp; {-17} &amp;amp; {28} &amp;amp; {4} &amp;amp; {5} \\ {0} &amp;amp; {0} &amp;amp; {0} &amp;amp; {1} &amp;amp; {2} &amp;amp; {27} &amp;amp; {-43} &amp;amp; {-6} &amp;amp; {7} \\ {0} &amp;amp; {0} &amp;amp; {0} &amp;amp; {0} &amp;amp; {0} &amp;amp; {-13} &amp;amp; {20} &amp;amp; {3} &amp;amp; {-3} \\ {0} &amp;amp; {0} &amp;amp; {0} &amp;amp; {0} &amp;amp; {0} &amp;amp; {4} &amp;amp; {-6} &amp;amp; {-1} &amp;amp; {1}\end{array}\right]
$$&lt;/p>
&lt;p>所以 $r=2$，$1, 4$ 列线性独立．以及&lt;/p>
&lt;p>$$
\begin{bmatrix}I_2 &amp;amp; F \end{bmatrix} = \begin{bmatrix}1 &amp;amp; 3 &amp;amp; 1 &amp;amp; 0 &amp;amp; -1 \\ 0 &amp;amp; 0&amp;amp; 0&amp;amp;1&amp;amp;2 \end{bmatrix}
$$&lt;/p>
&lt;p>$$
E_2 = \begin{bmatrix} -13&amp;amp;20&amp;amp;3&amp;amp;-3\\ 4&amp;amp;-6&amp;amp;-1&amp;amp;1 \end{bmatrix}
$$&lt;/p>
&lt;p>$$P=\left[\begin{array}{rrr}{-3} &amp;amp; {-1} &amp;amp; {1} \\ {1} &amp;amp; {0} &amp;amp; {0} \\ {0} &amp;amp; {1} &amp;amp; {0} \\ {0} &amp;amp; {0} &amp;amp; {-2} \\ {0} &amp;amp; {0} &amp;amp; {1}\end{array}\right]$$&lt;/p>
&lt;ul>
&lt;li>
&lt;p>行空间 $C(A^{\mathsf T})$&lt;br>
由 $\left[ I_r \quad F \right]$ 的行向量组成&lt;/p>
&lt;p>$$
\begin{bmatrix}
1\\3\\1\\0\\-1
\end{bmatrix} \quad
\begin{bmatrix}
0\\0\\0\\1\\2
\end{bmatrix}
$$&lt;/p>
&lt;/li>
&lt;li>
&lt;p>零空间 $N(A)$&lt;br>
由 $P$ 的列向量组成&lt;/p>
&lt;p>$$
\begin{bmatrix}
-3\\1\\0\\0\\0
\end{bmatrix} \quad
\begin{bmatrix}
-1\\0\\1\\0\\0
\end{bmatrix} \quad
\begin{bmatrix}
1\\0\\0\\-2\\1
\end{bmatrix}
$$&lt;/p>
&lt;/li>
&lt;li>
&lt;p>列空间 $C(A)$&lt;br>
由 $A$ 的 $1, 4$ 列构成&lt;/p>
&lt;p>$$
\begin{bmatrix}
2\\1\\3\\1
\end{bmatrix} \quad
\begin{bmatrix}
2\\1\\4\\2
\end{bmatrix}
$$&lt;/p>
&lt;/li>
&lt;li>
&lt;p>左零空间 $N(A^{\mathsf T})$&lt;br>
由 $E_2$ 的行向量组成&lt;/p>
&lt;p>$$
\begin{bmatrix}
-13\\20\\3\\-3
\end{bmatrix} \quad
\begin{bmatrix}
4\\-6\\-1\\1
\end{bmatrix}
$$&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="正交基底">正交基底&lt;/h2>
&lt;p>将上述结果经过 Gram-Schmidt 正交化，即可得到对应的正交基．但是，还有更简单的方法，但涉及..奇异值分解..，故在之后的..奇异值分解系列..再讨论．&lt;/p></description><category domain="https://matnoble.me/math/">math</category><category domain="https://matnoble.me/math/linear-algebra/">Linear-Algebra</category><category domain="https://matnoble.me/series/mla/">线代拾遗</category><category domain="https://matnoble.me/tags/%E7%9F%A9%E9%98%B5/">矩阵</category></item><item><title>线代视角下的最小二乘法</title><link>https://matnoble.me/math/linear-algebra/matrixleastsquares/</link><guid isPermaLink="true">https://matnoble.me/math/linear-algebra/matrixleastsquares/</guid><pubDate>Sun, 19 Jan 2020 06:21:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>在&lt;a href="https://matnoble.me/categories/%E7%AE%80%E8%BF%B0%E6%9C%89%E9%99%90%E5%85%83/">简述有限元系列&lt;/a>中用到过&lt;code>最小二乘法&lt;/code>, 矩阵的四个基本空间可以帮助我们更好的理解&lt;code>最小二乘法&lt;/code>.&lt;/p>
&lt;h2 id="理解线性方程组">理解线性方程组&lt;/h2>
&lt;p>本文在实数域 $\mathbb{R}$ 内考虑(复数域 $\mathbb{C}$ 内是类似的). 假设存在 $m\times n$ 阶实矩阵 $\boldsymbol{A}$, 以及 ${\rm b}\in \mathbb{R}^m$. 则线性方程组 $\boldsymbol{A}{\rm x}={\rm b}$ 有解可以有一下两种解释:&lt;/p>
&lt;ul>
&lt;li>${\rm b}$ 可表示为 $\boldsymbol{A}$ 的列向量的线性组合&lt;/li>
&lt;/ul>
&lt;p>$$
\begin{aligned}
{\rm b} &amp;amp;= x_1\alpha_1+\cdots+x_n\alpha_n \\ &amp;amp;=
\begin{bmatrix}
\alpha_1,\cdots,\alpha_n
\end{bmatrix}
\begin{bmatrix}
x_1 \\ \vdots \\ x_n
\end{bmatrix} \\ &amp;amp;= \boldsymbol{A}{\rm x}
\end{aligned}
$$&lt;/p>
&lt;ul>
&lt;li>${\rm b}$ 属于线性变换 $\boldsymbol{A}$ 的值域(range),
$${\rm b} \in C(\boldsymbol{A})$$
其中, 列空间 $C(\boldsymbol{A})=\{ \boldsymbol{A}{\rm x}|{\rm x} \in \mathbb{R}^n \}$, ${\rm b}=\boldsymbol{A}{\rm x}$ 称为 ${\rm x}$ 经线性变换 $\boldsymbol{A}$ 的像(image).&lt;/li>
&lt;/ul>
&lt;p>当线性方程组 $\boldsymbol{A}{\rm x}={\rm b}$ 无解时, 我们希望找到最佳近似解 $\check{\rm x}$, 使得 ${\rm e}={\rm b} - \boldsymbol{A}\check{\rm x}$ 长度的平方最小&lt;/p>
&lt;p>$$
\min_\check{\rm x} \lVert {\rm b} - \boldsymbol{A}\check{\rm x} \rVert^2
$$&lt;/p>
&lt;p>以三维情形为例, 误差向量 ${\rm e}$ 与 $\boldsymbol{A}$ 的列空间 $C(\boldsymbol{A})$ 正交时, $\rm e$ 的长度的平方最小&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/390fed52-66a6-4c8f-80b1-366e381e2724.png" alt="三维情形">&lt;/p>
&lt;p>为计算方便, 我们首先介绍 &lt;strong>正交投影矩阵&lt;/strong>&lt;/p>
&lt;h2 id="正交投影矩阵">正交投影矩阵&lt;/h2>
&lt;blockquote>
&lt;p>对于任意 ${\rm x} \in , \mathbb{R}^n$, 右乘 $n$ 阶方阵 $\boldsymbol{P}$, 使得 $\boldsymbol{P}{\rm x} \in, C(\boldsymbol{P})$, 满足 $\boldsymbol{P}^2=\boldsymbol{P}$, 则 $\boldsymbol{P}$ 称为&lt;code>幂等矩阵&lt;/code>或&lt;code>投影矩阵&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;p>$$
\boldsymbol{P}(\boldsymbol{P}{\rm x}) = \boldsymbol{P}^2({\rm x}) = \boldsymbol{P}{\rm x}
$$&lt;/p>
&lt;p>投影「投影向量」得到的还是原来的「投影向量」.&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>正交投影矩阵&lt;/code> $\boldsymbol{P}$ 是不仅是&lt;code>幂等矩阵&lt;/code>, 还是&lt;code>对称矩阵&lt;/code>, 即
$$ \boldsymbol{P} = \boldsymbol{P}^{\mathsf T} $$&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/b0b4f944-6b71-4b38-b89b-3bff3bfb6bc5.png" alt="">&lt;/p>
&lt;p>证:如上图所示, 对任意 ${\rm x,y}\in, \mathbb{R}^n$, 残差向量 ${\rm e}={\rm x} - \boldsymbol{P}{\rm x}$ 与 $C(\boldsymbol{P})$ 正交, 即&lt;/p>
&lt;p>$$
\begin{aligned}
0&amp;amp;=({\rm x}-\boldsymbol{P}{\rm x})^{\mathsf T}(\boldsymbol{P}{\rm y}) \\[3pt]
&amp;amp;= [(\boldsymbol{I}-\boldsymbol{P}){\rm x}]^{\mathsf T}(\boldsymbol{P}{\rm y}) \\[3pt]
&amp;amp; = {\rm x}^{\mathsf T}(\boldsymbol{I}-\boldsymbol{P})^{\mathsf T}(\boldsymbol{P}{\rm y}) \\[3pt]
&amp;amp; = {\rm x}^{\mathsf T}(\boldsymbol{P}-\boldsymbol{P}^{\mathsf T}\boldsymbol{P}){\rm y}
\end{aligned}
$$&lt;/p>
&lt;p>所以 $\boldsymbol{P}=\boldsymbol{P}^{\mathsf T}\boldsymbol{P}$, 因为 $\boldsymbol{P}^{\mathsf T}\boldsymbol{P}$ 对称, 所以 $\boldsymbol{P}$ 也是对称阵.&lt;/p>
&lt;h2 id="最小二乘解">最小二乘解&lt;/h2>
&lt;p>向量 ${\rm b}$ 右乘正交投影矩阵 $\boldsymbol{P}$ 使得 ${\rm p} = \boldsymbol{P}{\rm b}\in C(\boldsymbol{A})$. $\boldsymbol{P}$ 满足&lt;/p>
&lt;p>$$
\begin{cases}
\boldsymbol{P}^2 = \boldsymbol{P} \\[3pt]
\boldsymbol{P} = \boldsymbol{P}^{\mathsf T}
\end{cases}
$$&lt;/p>
&lt;p>寻找 $\check{\rm x}\in \mathbb{R}^n$, 右乘矩阵 $\boldsymbol{A}$, 使得 ${\rm p} = \boldsymbol{A}\check{\rm x}\in C(\boldsymbol{A})$&lt;/p>
&lt;p>综合一下,&lt;/p>
&lt;p>$$
\boldsymbol{P}({\rm b}-{\rm p})={\rm p} - {\rm p} = 0
$$&lt;/p>
&lt;p>因此, $({\rm b}-{\rm p})\in N(\boldsymbol{P})$.&lt;/p>
&lt;p>&lt;br />&lt;/p>
&lt;blockquote>
&lt;p>$\boldsymbol{P}$ 和 $\boldsymbol{A}$ 的基本子空间满足:&lt;/p>
&lt;ol>
&lt;li>$C(\boldsymbol{P})=C(\boldsymbol{A})$&lt;/li>
&lt;li>$N(\boldsymbol{P})=N(\boldsymbol{A}^{\mathsf T})$&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>证:&lt;/p>
&lt;ul>
&lt;li>
&lt;ul>
&lt;li>证 $C(\boldsymbol{A})\subseteq C(\boldsymbol{P})$&lt;br>
假设 ${\rm x}\in C(\boldsymbol{A})$, 则 $\boldsymbol{P}{\rm x} = {\rm x}$, 所以 ${\rm x}\in C(\boldsymbol{P})$&lt;/li>
&lt;li>证 $C(\boldsymbol{P})\subseteq C(\boldsymbol{A})$&lt;br>
假设 ${\rm x}\in C(\boldsymbol{P})$, 则必存在 ${\rm y}$, 使得 ${\rm x}=\boldsymbol{P}{\rm y}$, 根据 $\boldsymbol{P}$ 的定义, ${\rm x}\in C(\boldsymbol{A})$&lt;/li>
&lt;/ul>
&lt;p>所以 $C(\boldsymbol{P})=C(\boldsymbol{A})$.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>根据秩-零化度定理, 成立
$$
\begin{cases}
N(\boldsymbol{P})=C(\boldsymbol{P}^{\mathsf T})^{\bot} \\[3pt] N(\boldsymbol{A}^{\mathsf T})=C(\boldsymbol{A})^{\bot}
\end{cases}
$$
结合
$$
\begin{cases}
\boldsymbol{P}=\boldsymbol{P}^{\mathsf T} \\[3pt] C(\boldsymbol{P})=C(\boldsymbol{A})
\end{cases}
$$
得到
$$
\begin{aligned}
N(\boldsymbol{P})&amp;amp;=C(\boldsymbol{P}^{\mathsf T})^{\bot} \\&amp;amp;= C(\boldsymbol{P})^{\bot} = C(\boldsymbol{A})^{\bot} \\&amp;amp;= N(\boldsymbol{A}^{\mathsf T})
\end{aligned}
$$&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;br />&lt;/p>
&lt;p>因此, $({\rm b}-{\rm p})\in N(\boldsymbol{A}^{\mathsf T})=N(\boldsymbol{P})$, 即&lt;/p>
&lt;p>$$
\boldsymbol{A}^{\mathsf T}({\rm b}-{\rm p}) = \boldsymbol{A}^{\mathsf T}({\rm b}-\boldsymbol{A}\check{\rm x}) = 0
$$&lt;/p>
&lt;p>整理一下&lt;/p>
&lt;p>$$
\boldsymbol{A}^{\mathsf T}\boldsymbol{A}\check{\rm x} = \boldsymbol{A}^{\mathsf T}{\rm b}
$$&lt;/p>
&lt;p>上述方程的解 $\check{\rm x}$ 称为 $\boldsymbol{A}{\rm x} = {\rm b}$ 的&lt;code>最小二乘解&lt;/code>.&lt;/p>
&lt;h3 id="列满秩">列满秩&lt;/h3>
&lt;p>若矩阵 $\boldsymbol{A}$ 列满秩序($\rm{rank}\, \boldsymbol{A} = n$), 则 $\boldsymbol{A}^{\mathsf T}\boldsymbol{A}$ 为非奇异方阵(可逆), 因为&lt;/p>
&lt;p>$$
\rm{rank}\, \boldsymbol{A} = \rm{rank}\, \boldsymbol{A}^{\mathsf T}\boldsymbol{A}
$$&lt;/p>
&lt;p>此时, 有唯一最小二乘解&lt;/p>
&lt;p>$$
\check{\rm x} = (\boldsymbol{A}^{\mathsf T}\boldsymbol{A})^{-1}\boldsymbol{A}^{\mathsf T}{\rm b}
$$&lt;/p>
&lt;p>最小平方误差投影向量&lt;/p>
&lt;p>$$
{\rm p} = \boldsymbol{A}\check{\rm x} = \boldsymbol{A}(\boldsymbol{A}^{\mathsf T}\boldsymbol{A})^{-1}\boldsymbol{A}^{\mathsf T}{\rm b}
$$&lt;/p>
&lt;p>正交投影矩阵&lt;/p>
&lt;p>$$
\boldsymbol{P} = \boldsymbol{A}(\boldsymbol{A}^{\mathsf T}\boldsymbol{A})^{-1}\boldsymbol{A}^{\mathsf T}
$$&lt;/p>
&lt;h3 id="正交投影-boldsymboli-boldsymbolp">正交投影 $\boldsymbol{I}-\boldsymbol{P}$&lt;/h3>
&lt;p>$\boldsymbol{I}-\boldsymbol{P}$ 同样是一个正交投影矩阵, 因为&lt;/p>
&lt;p>$$
\begin{aligned}
(\boldsymbol{I}-\boldsymbol{P})^2 &amp;amp;= \boldsymbol{I} - 2\boldsymbol{P} + \boldsymbol{P}^2 \\[3pt] &amp;amp;= \boldsymbol{I} -2\boldsymbol{P} + \boldsymbol{P} \\[3pt] &amp;amp;= \boldsymbol{I} - \boldsymbol{P}
\end{aligned}
$$&lt;/p>
&lt;p>并且有&lt;/p>
&lt;p>$$
(\boldsymbol{I}-\boldsymbol{P}){\rm b} = {\rm b} - \boldsymbol{P}{\rm b} = {\rm b} - {\rm p} = {\rm e}
$$&lt;/p>
&lt;p>说明向量 ${\rm b}$ 经 $\boldsymbol{I}-\boldsymbol{P}$ 映射到 $e \in N(\boldsymbol{A}^{\mathsf T})$.&lt;/p>
&lt;h3 id="小结">小结&lt;/h3>
&lt;p>由向量 ${\rm b }\in \mathbb{R}^m - C(\boldsymbol{A})$ 出发, ４个线性变换可总结至下图.&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/c90892a5-d7e5-4d69-9a87-e4d5dabfcd71.png" alt="">&lt;/p>
&lt;p>注: 当今仅当 $\boldsymbol{A}$ 列满秩时, $\boldsymbol{A}^{\mathsf T}\boldsymbol{A}$ 可逆.&lt;/p>
&lt;p>&lt;br />&lt;/p></description><category domain="https://matnoble.me/math/">math</category><category domain="https://matnoble.me/math/linear-algebra/">Linear-Algebra</category><category domain="https://matnoble.me/series/mla/">线代拾遗</category><category domain="https://matnoble.me/tags/%E6%9C%80%E5%B0%8F%E4%BA%8C%E4%B9%98%E6%B3%95/">最小二乘法</category></item><item><title>矩阵的四个基本空间, 不了解下吗?</title><link>https://matnoble.me/math/linear-algebra/matrix4basicth/</link><guid isPermaLink="true">https://matnoble.me/math/linear-algebra/matrix4basicth/</guid><pubDate>Sat, 18 Jan 2020 06:21:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>秩-零化度定理告诉我们: $m\times n$ 阶矩阵 $A$ 的零空间(Nullspace) $N(A)$ 和列空间(Column sapce) $C(A)$ 的关系:&lt;/p>
&lt;p>$$
n = \dim N(A) + \dim C(A)
$$&lt;/p>
&lt;blockquote>
&lt;p>本次依据&lt;code>秩-零化度定理&lt;/code>, 介绍&lt;code>四个基本空间&lt;/code>, 并证明它们的&lt;code>正交性&lt;/code>关系, 最后, 给出一道&lt;code>经典例题&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;h2 id="四个基本空间">四个基本空间&lt;/h2>
&lt;p>将矩阵 $A$ 行列互换, 称为 $A$ 的转置, 记为 $A^{\mathsf T}$. 则对应的: $C(A^{\mathsf T})$ 表示 $A$ 的行空间(Row space), 对应地将 $N(A^{\mathsf T})$ 称为 $A$ 的左零空间(Left nullspace).&lt;/p>
&lt;p>首先, 因为&lt;code>行秩 = 列秩&lt;/code>, 所以&lt;/p>
&lt;p>$$
n = \dim N(A) + \dim C(A^{\mathsf T})
$$&lt;/p>
&lt;p>然后, &lt;code>转置&lt;/code>并参考&lt;code>秩-零化度定理&lt;/code>&lt;/p>
&lt;p>$$
m = \dim N(A^{\mathsf T}) + \dim C(A)
$$&lt;/p>
&lt;p>&lt;br />&lt;/p>
&lt;p>综上, 对于 $m \times n$ 阶矩阵 $A$ 有:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>空间&lt;/th>
&lt;th>符号&lt;/th>
&lt;th style="text-align:center">矩阵含义&lt;/th>
&lt;th style="text-align:center">空间维数&lt;/th>
&lt;th style="text-align:center">　向量维数&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>行空间(Row Space)&lt;/td>
&lt;td>$C(A^{\mathsf T})$&lt;/td>
&lt;td style="text-align:center">$A^{\mathsf T}y$&lt;/td>
&lt;td style="text-align:center">$r$&lt;/td>
&lt;td style="text-align:center">$n$&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>列空间(Column Space)&lt;/td>
&lt;td>$C(A)$&lt;/td>
&lt;td style="text-align:center">$Ax$&lt;/td>
&lt;td style="text-align:center">$r$&lt;/td>
&lt;td style="text-align:center">$m$&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>零空间(Nullspace) 或核空间(Kernel Space)&lt;/td>
&lt;td>$N(A)$&lt;/td>
&lt;td style="text-align:center">$Ax=0$&lt;/td>
&lt;td style="text-align:center">$n-r$&lt;/td>
&lt;td style="text-align:center">$n$&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>左零空间(Left Nullspace)&lt;/td>
&lt;td>$N(A^{\mathsf T})$&lt;/td>
&lt;td style="text-align:center">$ A^{\mathsf T}y=0$&lt;/td>
&lt;td style="text-align:center">$m-r$&lt;/td>
&lt;td style="text-align:center">$m$&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="正交关系">正交关系&lt;/h2>
&lt;p>实际上, 行空间和零空间在 $\mathbb{R}^n$ 中是&lt;code>直和&lt;/code>关系, 相应的, 列空间和左零空间在 $\mathbb{R}^m$ 中是&lt;code>直和&lt;/code>关系, 如下图所示&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/18ff04ba-3eac-45a2-8a67-e4b8cde0bd2b.png" alt="四个基本空间正交关系">&lt;/p>
&lt;p>下面, 证明这两个直和(正交)关系&lt;/p>
&lt;h2 id="简要证明">简要证明&lt;/h2>
&lt;blockquote>
&lt;ol>
&lt;li>$\mathbb{R}^n = C(A^{\mathsf T}) \oplus N(A)$&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;ul>
&lt;li>对 $\forall, x_1 \in C(A^{\mathsf T}), \forall , x_2 \in N(A)$, 成立 $x=x_1+x_2 \in \mathbb{R}^n$&lt;/li>
&lt;li>假设 $x \in C(A^{\mathsf T}) \cap N(A)$, 即&lt;/li>
&lt;/ul>
&lt;p>$$
\begin{cases}
Ax = 0 &amp;amp; \forall , x \in N(A)
\\[3pt]
A^{\mathsf T}y = x &amp;amp; \exists, y \in C(A^{\mathsf T})
\end{cases}
$$&lt;/p>
&lt;p>联立即得&lt;/p>
&lt;p>$$
AA^{\mathsf T}y = 0
$$&lt;/p>
&lt;p>左右同乘 $y^{\mathsf T}$&lt;/p>
&lt;p>$$
y^{\mathsf T}AA^{\mathsf T}y = (A^{\mathsf T}y)^{\mathsf T}A^{\mathsf T}y=0
$$&lt;/p>
&lt;p>得到&lt;/p>
&lt;p>$$
x = A^{\mathsf T}y = 0
$$&lt;/p>
&lt;p>即&lt;/p>
&lt;p>$$
C(A^{\mathsf T}) \cap N(A) = {0}
$$&lt;/p>
&lt;p>结论得证.&lt;/p>
&lt;p>&lt;br />&lt;/p>
&lt;blockquote>
&lt;ol start="2">
&lt;li>$\mathbb{R}^m = C(A) \oplus N(A^{\mathsf T})$&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>记 $B=A^{\mathsf T}$, 利用证明 1&lt;/p>
&lt;p>$$
\mathbb{R}^m = C(B^{\mathsf T}) \oplus N(B)
$$&lt;/p>
&lt;p>将 $B^{\mathsf T} = (A^{\mathsf T})^{\mathsf T} = A$ 带入上式, 即证.&lt;/p>
&lt;h2 id="经典例题">经典例题&lt;/h2>
&lt;blockquote>
&lt;p>假设存在 $m\times n$ 阶矩阵 $A$, 给定一个向量 $b\in,\mathbb{R}^m$, 且已知 $Ax = b$ 有解. 试证&lt;/p>
&lt;ol>
&lt;li>存在唯一 $y \in, C(A^{\mathsf Ｔ})$, 使得 $Ay = b$ 成立.&lt;/li>
&lt;li>所有解中, 行空间 $C(A^{\mathsf T})$ 中的解 $y$ 的长度最小.&lt;/li>
&lt;li>假设 $A$ 行满秩(${\rm rank}(A) = m$), 求 $y \in , C(A^{\mathsf T})$ (用 $A, b$ 表示)&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>证:&lt;/p>
&lt;blockquote>
&lt;p>1 . 存在唯一 $y \in, C(A^{\mathsf Ｔ})$, 使得 $Ay = b$ 成立.&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>存在性&lt;br>
假设 $x \in \mathbb{R}^n$ 满足 $Ax=b$, 因为 $C(A^{\mathsf T})$ 和 $N(A)$ 是直和关系, 所以 $x$ 可&lt;code>唯一&lt;/code>地分解为
$$
x = y + z
$$
其中, $y\in, C(A^{\mathsf T}), z \in N(A)$, 那么
$$\begin{align*} Ax &amp;amp;= A(y+z) \\[3pt]&amp;amp;= Ay + Az \\[3pt]&amp;amp;= Ay = b \end{align*}$$
成立.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>唯一性&lt;br>
假设 $y^{\prime} \in, C(A^{\mathsf T})$, 也满足 $Ay^{\prime} = b$. 则 $$ Ay - Ay^{\prime} = A(y-y^{\prime}) =0 $$
即 $y-y^{\prime} \in, N(A)$, 又因为 $y-y^{\prime} \in , C(A^{\mathsf T})$, 所以 $$ y-y^{\prime} = 0 $$
即 $y = y^{\prime}$.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;br />&lt;/p>
&lt;blockquote>
&lt;p>2 . 所有解中, 行空间 $C(A^{\mathsf T})$ 中的解 $y$ 的长度最小.&lt;/p>
&lt;/blockquote>
&lt;p>联系问 1, 解 $x = y + z$, 其中 $y\in, C(A^{\mathsf T}), z \in N(A)$. 因为二者&lt;code>正交&lt;/code>, 所以&lt;/p>
&lt;p>$$\begin{align*} \lVert x \rVert^2 &amp;amp;= (y+z)^{\mathsf T}(y+z) \\[3pt]&amp;amp;= \lVert y \rVert^2 + \lVert z \rVert^2 \geq \lVert y \rVert^2\end{align*}$$&lt;/p>
&lt;p>$z = 0$ 时, 等号成立.&lt;/p>
&lt;p>&lt;br />&lt;/p>
&lt;blockquote>
&lt;p>3 . 假设 $A$ 行满秩(${\rm rank}(A) = m$), 求 $y \in , C(A^{\mathsf T})$ (用 $A, b$ 表示)&lt;/p>
&lt;/blockquote>
&lt;p>因为 $y \in , C(A^{\mathsf T})$, 则 $y$ 可表示为 $y=A^{\mathsf T}x$.则 $$ Ay = AA^{\mathsf T} x = b $$
若 $AA^{\mathsf T}$ 满秩, 则 $$ x = (AA^{\mathsf T})^{-1}b $$
可得到 $$y=A^{\mathsf T}(AA^{\mathsf T})^{-1}b$$
下面证明 ${\rm rank} A ={\rm rank } AA^{\mathsf T}$, 只需证明
$$ \begin{cases}Ax =0 \\[3pt] A^{\mathsf T}Ax=0 \end{cases}$$
同解. 显然, $Ax = 0 \Longrightarrow A^{\mathsf T}Ax=0$.&lt;br>
&lt;br />
若满足 $A^{\mathsf T}Ax=0$, 左右同乘 $x^{\mathsf T}$&lt;/p>
&lt;p>$$
x^{\mathsf T}A^{\mathsf T}Ax=(Ax)^{\mathsf T}Ax=0
$$&lt;/p>
&lt;p>即得 $Ax = 0$. 所以 ${\rm rank} A = {\rm rank } A^{\mathsf T}A={\rm rank } AA^{\mathsf T}$.&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>从空间的角度理解线代才是掌握线代的不二法门.&lt;/p>
&lt;p>矩阵的四个基本空间是很重要的概念, 可以帮助我们从&lt;code>空间&lt;/code>的角度理解&lt;code>线性方程组&lt;/code>解的结构, 甚至是&lt;code>最小二乘法&lt;/code>.&lt;/p>
&lt;p>由于篇幅原因, 下次介绍&lt;code>最小二乘法&lt;/code>($A^{\mathsf T}Ax = A^{\mathsf T}b$).&lt;/p>
&lt;p>&lt;br />&lt;/p></description><category domain="https://matnoble.me/math/">math</category><category domain="https://matnoble.me/math/linear-algebra/">Linear-Algebra</category><category domain="https://matnoble.me/series/mla/">线代拾遗</category><category domain="https://matnoble.me/tags/%E7%BA%BF%E4%BB%A3%E5%9F%BA%E6%9C%AC%E5%AE%9A%E7%90%86/">线代基本定理</category><category domain="https://matnoble.me/tags/%E5%9B%9B%E4%B8%AA%E5%9F%BA%E6%9C%AC%E7%A9%BA%E9%97%B4/">四个基本空间</category></item><item><title>LaTeX 矩阵</title><link>https://matnoble.me/tech/latex/latex-matrix/</link><guid isPermaLink="true">https://matnoble.me/tech/latex/latex-matrix/</guid><pubDate>Tue, 14 Jan 2020 00:13:54 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/4e7ca500-bdca-42dc-9444-bffa8af84fc5.png" width="95%" />&lt;/p>
&lt;div align="center">&lt;a href="https://matnoble.me/series/latex">◎ 你过来啊 🤞&lt;/a>&lt;/div>
&lt;h2 id="普通">普通&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>matrix&lt;span class="nb">}&lt;/span>
1 &lt;span class="nb">&amp;amp;&lt;/span> 2 &lt;span class="nb">&amp;amp;&lt;/span> 3&lt;span class="k">\\&lt;/span>
a &lt;span class="nb">&amp;amp;&lt;/span> b &lt;span class="nb">&amp;amp;&lt;/span> c
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>matrix&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$
\begin{matrix}
1 &amp;amp; 2 &amp;amp; 3\\&lt;br>
a &amp;amp; b &amp;amp; c
\end{matrix}
$$&lt;/p>
&lt;h2 id="圆括号">圆括号&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>pmatrix&lt;span class="nb">}&lt;/span>
1 &lt;span class="nb">&amp;amp;&lt;/span> 2 &lt;span class="nb">&amp;amp;&lt;/span> 3&lt;span class="k">\\&lt;/span>
a &lt;span class="nb">&amp;amp;&lt;/span> b &lt;span class="nb">&amp;amp;&lt;/span> c
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>pmatrix&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$
\begin{pmatrix}
1 &amp;amp; 2 &amp;amp; 3\\&lt;br>
a &amp;amp; b &amp;amp; c
\end{pmatrix}
$$&lt;/p>
&lt;h2 id="方括号">方括号&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>bmatrix&lt;span class="nb">}&lt;/span>
1 &lt;span class="nb">&amp;amp;&lt;/span> 2 &lt;span class="nb">&amp;amp;&lt;/span> 3&lt;span class="k">\\&lt;/span>
a &lt;span class="nb">&amp;amp;&lt;/span> b &lt;span class="nb">&amp;amp;&lt;/span> c
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>bmatrix&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$
\begin{bmatrix}
1 &amp;amp; 2 &amp;amp; 3\\&lt;br>
a &amp;amp; b &amp;amp; c
\end{bmatrix}
$$&lt;/p>
&lt;h2 id="大括号">大括号&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>Bmatrix&lt;span class="nb">}&lt;/span>
1 &lt;span class="nb">&amp;amp;&lt;/span> 2 &lt;span class="nb">&amp;amp;&lt;/span> 3&lt;span class="k">\\\\&lt;/span>
a &lt;span class="nb">&amp;amp;&lt;/span> b &lt;span class="nb">&amp;amp;&lt;/span> c
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>Bmatrix&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$
\begin{Bmatrix}
1 &amp;amp; 2 &amp;amp; 3\\&lt;br>
a &amp;amp; b &amp;amp; c
\end{Bmatrix}
$$&lt;/p>
&lt;h2 id="行列式">行列式&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>vmatrix&lt;span class="nb">}&lt;/span>
1 &lt;span class="nb">&amp;amp;&lt;/span> 2 &lt;span class="nb">&amp;amp;&lt;/span> 3&lt;span class="k">\\\\&lt;/span>
a &lt;span class="nb">&amp;amp;&lt;/span> b &lt;span class="nb">&amp;amp;&lt;/span> c
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>vmatrix&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$
\begin{vmatrix}
1 &amp;amp; 2 &amp;amp; 3\\&lt;br>
a &amp;amp; b &amp;amp; c
\end{vmatrix}
$$&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>Vmatrix&lt;span class="nb">}&lt;/span>
1 &lt;span class="nb">&amp;amp;&lt;/span> 2 &lt;span class="nb">&amp;amp;&lt;/span> 3&lt;span class="k">\\\\&lt;/span>
a &lt;span class="nb">&amp;amp;&lt;/span> b &lt;span class="nb">&amp;amp;&lt;/span> c
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>Vmatrix&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$
\begin{Vmatrix}
1 &amp;amp; 2 &amp;amp; 3\\&lt;br>
a &amp;amp; b &amp;amp; c
\end{Vmatrix}
$$&lt;/p>
&lt;h2 id="分割线">分割线&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\left&lt;/span>[
&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>array&lt;span class="nb">}{&lt;/span>c|c&lt;span class="nb">}&lt;/span>
A &lt;span class="nb">&amp;amp;&lt;/span> B&lt;span class="k">\\\\&lt;/span>
&lt;span class="k">\hline&lt;/span>
C &lt;span class="nb">&amp;amp;&lt;/span> D
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>array&lt;span class="nb">}&lt;/span>
&lt;span class="k">\right&lt;/span>]
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$
\left[
\begin{array}{c|c}
A &amp;amp; B\\&lt;br>
\hline
C &amp;amp; D
\end{array}
\right]
$$&lt;/p>
&lt;h2 id="行内矩阵">行内矩阵&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="s">$&lt;/span>&lt;span class="nv">\begin&lt;/span>&lt;span class="nb">{bmatrix}
&lt;/span>&lt;span class="nb">a &amp;amp; b&lt;/span>&lt;span class="nv">\\&lt;/span>&lt;span class="nb">
&lt;/span>&lt;span class="nb">c &amp;amp; d
&lt;/span>&lt;span class="nb">&lt;/span>&lt;span class="nv">\end&lt;/span>&lt;span class="nb">{bmatrix}&lt;/span>&lt;span class="s">$&lt;/span>
&lt;span class="s">$&lt;/span>&lt;span class="nv">\Big&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="nv">\begin&lt;/span>&lt;span class="nb">{smallmatrix}
&lt;/span>&lt;span class="nb">a &amp;amp; b&lt;/span>&lt;span class="nv">\\&lt;/span>&lt;span class="nb">
&lt;/span>&lt;span class="nb">c &amp;amp; d
&lt;/span>&lt;span class="nb">&lt;/span>&lt;span class="nv">\end&lt;/span>&lt;span class="nb">{smallmatrix}&lt;/span>&lt;span class="nv">\Big&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="s">$&lt;/span>.
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这是在行内使用上述行间矩阵
$\begin{bmatrix}
a &amp;amp; b\\
c &amp;amp; d
\end{bmatrix}$ 数学小兵儿 MatNoble 数系家园 数学小兵儿 MatNoble 数系家园 数学小兵儿 MatNoble 数系家园 数学小兵儿 MatNoble 数系家园 数学小兵儿 MatNoble 数系家园 数学小兵儿 MatNoble 数系家园&lt;/p>
&lt;p>有时显得有些过大, 使某行间距过大. 用 &lt;code>smallmatrix&lt;/code> 得到这样的效果
$\Big[\begin{smallmatrix}
a &amp;amp; b\\
c &amp;amp; d
\end{smallmatrix}\Big]$ 数学小兵儿 MatNoble 数系家园 数学小兵儿 MatNoble 数系家园 数学小兵儿 MatNoble 数系家园 数学小兵儿 MatNoble 数系家园 数学小兵儿 MatNoble 数系家园 数学小兵儿 MatNoble 数系家园&lt;/p></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/latex/">latex</category><category domain="https://matnoble.me/series/latex/">LaTeX 排版「冷」知识</category><category domain="https://matnoble.me/tags/">标签云</category></item><item><title>秩-零化度定理(Rank-Nullity Theorem)</title><link>https://matnoble.me/math/linear-algebra/rank-nullity/</link><guid isPermaLink="true">https://matnoble.me/math/linear-algebra/rank-nullity/</guid><pubDate>Sat, 11 Jan 2020 00:00:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>在人工智能, 机器学习, 深度学习的浪潮中, ..数学.. 知识的发展与应用起着至关重要的作用.&lt;/p>
&lt;p>&lt;code>线性代数(高等代数)&lt;/code>不同于&lt;code>微积分(数学分析)&lt;/code>, 线代是不断前进发展的学科, 在实际应用中产生新问题回馈到教学中, 而后教学又可以促进实际应用.&lt;/p>
&lt;hr>
&lt;h2 id="秩-零化度定理">「秩-零化度定理」&lt;/h2>
&lt;p>如下图所示, 线性变换 $T$ 从有限维向量空间 $\mathcal{V}$ (定义域)映射到有限维向量空间 $\mathcal{W}$ (陪域)，记为 $T:\mathcal{V}\to\mathcal{W}$&lt;/p>
&lt;img src="https://imgkr.cn-bj.ufileos.com/52c7ecf5-f647-4024-95f0-6c90d56199bd.png" title="线性变换 linear transformation" alt="线性变换 linear transformation" width="500">
&lt;p>&lt;br />&lt;/p>
&lt;p>其中, 有两个重要的子空间:&lt;/p>
&lt;ul>
&lt;li>核空间(kernel space)&lt;/li>
&lt;/ul>
&lt;p>$\mathcal{V}$ 中所有可经 $T$ 映射为零元素的元素构成的集合, 称为 $T$ 的核(子)空间, 记为: $\ker (T)$. 核的维数(dimension)称为&lt;code>零化度&lt;/code>(nullity), 记为: $\dim \ker (T)$, 可度量核的大小.&lt;/p>
&lt;ul>
&lt;li>值域(range)&lt;/li>
&lt;/ul>
&lt;p>$\mathcal{V}$ 中所有元素经 $T$ 映射构成的集合, 称为 $T$ 的值域, 记为: ${\rm ran} (T)$ 或 $R(T)$. 值域的维数(dimension)称为&lt;code>秩&lt;/code>(rank), 记为: ${\rm rank}, T$ 或 $\dim {\rm ran} (T)$.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>「秩-零化度定理」(Rank-Nullity Theorem)&lt;/strong>&lt;br>
&lt;br />
　定义域 $\mathcal{V}$ 的维数等于核空间 $\ker (T)$ 的维数与值域 ${\rm ran} (T)$ 的维数之和. 即&lt;/p>
&lt;p>$$
\dim \mathcal{V} = \dim \ker (T) + {\rm rank}\, T
$$&lt;/p>
&lt;/blockquote>
&lt;h2 id="证明">证明&lt;/h2>
&lt;h3 id="矩阵角度">矩阵角度&lt;/h3>
&lt;p>&lt;i style="color:gray">矩阵是具像化的线性变换.&lt;/i>&lt;/p>
&lt;p>假设线性变换 $T: \mathcal{V} \to \mathcal{W} $ 由 $m\times n$ 阶矩阵表示.
另外, $n = \dim \mathcal{V}, m = \dim \mathcal{W}$, 并且, 零空间(nullspace) $N(A)$ 和列空间(column space) $C(A)$ 分别表示线性变换 $T$ 的核 $\ker (T)$ 与值域 ${\rm ran} (T)$. 如此, 需证明&lt;/p>
&lt;p>$$
n = \dim N(A) + {\rm rank} A
$$&lt;/p>
&lt;p>&lt;br />&lt;/p>
&lt;p>矩阵 $A$ 经初等行变换可化简为下方&lt;code>分块矩阵&lt;/code>形式&lt;/p>
&lt;p>$$
R = \begin{bmatrix} E_r &amp;amp; F \\ 0 &amp;amp; 0 \end{bmatrix}
$$&lt;/p>
&lt;p>易知, 矩阵 $R$ 的秩为 $r, F$ 是一个 $r\times (n-r)$ 阶矩阵. 因为初等行变换不改变矩阵的秩和零空间, 所以 ${\rm rank} A = {\rm rank} R = r$, 以及 $N(A) = N( R )$.&lt;/p>
&lt;p>&lt;br />&lt;/p>
&lt;p>观察矩阵 $R$, 得到其 $n \times (n-r)$ 零空间矩阵(nullspace matrix)&lt;/p>
&lt;p>$$
P = \begin{bmatrix} -F \\ E_{n-r} \end{bmatrix}
$$&lt;/p>
&lt;p>验证一下&lt;/p>
&lt;p>$$
RP = \begin{bmatrix} E_r &amp;amp; F \\ 0 &amp;amp; 0 \end{bmatrix}\begin{bmatrix} -F \\ E_{n-r} \end{bmatrix} = \begin{bmatrix} -F + F \\ 0 \end{bmatrix} = 0
$$&lt;/p>
&lt;p>&lt;br />&lt;/p>
&lt;p>接下来, 证明 &lt;strong>$C(P) = N( R )$&lt;/strong>&lt;/p>
&lt;p>显然, ${\rm rank}, P = n-r$, 即列向量线性无关. 然后, 只需证明: $\ker (R)$ 中所有向量都可以由 $P$ 的列向量线性表出.&lt;/p>
&lt;p>假设 $x= [ x_1, x_2]^{\sf T}$, 其中, $x_1$ 是 $r$ 维向量, $x_2$ 是 $n-r$ 维向量. 使得 $Rx = 0$, 则&lt;/p>
&lt;p>$$
Rx = \begin{bmatrix} E_r &amp;amp; F \\ 0 &amp;amp; 0 \end{bmatrix}\begin{bmatrix} x_1 \\ x_2 \end{bmatrix} = \begin{bmatrix} x_1 + Fx_2 \\ 0 \end{bmatrix} =0
$$&lt;/p>
&lt;p>所以, $x_1 = -Fx_2$, 接着有&lt;/p>
&lt;p>$$
x = \begin{bmatrix} x_1 \\ x_2 \end{bmatrix} = \begin{bmatrix} -Fx_2 \\ x_2 \end{bmatrix} = \begin{bmatrix} -F \\ E_{n-r} \end{bmatrix}x_2 = Px_2
$$&lt;/p>
&lt;p>所以 $C(P) = N( R )$, 即 $\dim N(A) = \dim N( R ) = {\rm rank}, P = n-r$, 也就证明了&lt;/p>
&lt;p>$$
n = \dim N(A) + {\rm rank} A
$$&lt;/p>
&lt;h3 id="变换角度">变换角度&lt;/h3>
&lt;p>&lt;i style="color:gray">不讲变换思想的线代是没有灵魂的线代&lt;/i>&lt;/p>
&lt;p>如下图所示, 假设向量空间 $\mathcal{V}$ 的维数为 $n$, 且 $\dim \ker(T) = p, p \leq n$. 设 $\ker(T)$ 的一组基底为 $\{u_1, \dots, u_p\}$, 并将其扩充为 $\mathcal{V}$ 的一组基底 $\{u_1,\dots,u_p,w_1,\dots,w_r\}$, $n=p+r$, 因此, 我们需要证明:&lt;/p>
&lt;p>$$
{\rm rank}\, T = r
$$&lt;/p>
&lt;img src="https://imgkr.cn-bj.ufileos.com/d97c88ee-79f4-4a7f-99c9-61331f51895c.png" title="数系家园" alt="数系家园" width="450">
&lt;p>空间 $\mathcal{V}$ 中&lt;code>任一&lt;/code>向量 $v$ 都可以表示为:&lt;/p>
&lt;p>$$
v = a_1u_1 + \cdots + a_pu_p + b_1w_1 + \cdots + b_rw_r
$$&lt;/p>
&lt;p>使用线性变换 $T$ 作用于 $v$, 得到 $T(v)$, 称为像(image). 运用线性变换&lt;/p>
&lt;p>$$
\begin{aligned}
T(v) &amp;amp; =T(a_1u_1 + \cdots + a_pu_p + b_1w_1 + \cdots + b_rw_r ) \\[3pt]
&amp;amp; = a_1(Tu_1) + \cdots + a_pT(u_p) + b_1T(w_1) + \cdots + b_rT(w_r) \\[3pt]
&amp;amp; = b_1T(w_1) + \cdots + b_rT(w_r)
\end{aligned}
$$&lt;/p>
&lt;p>因为 $v$ 是任意取的, 所以值域 ${\rm ran}, T$ 可由 $T(w_1), \dots, T(w_r)$ 扩充得到. 接下来, 我们证明它们是线性无关的, 即 ${T(w_1), \dots, T(w_r)}$ 构成 ${\rm ran}, T$ 的一组基底. 考虑&lt;/p>
&lt;p>$$
c_1T(w_1) + \cdots + c_rT(w_r) = 0
$$&lt;/p>
&lt;p>上式可写成&lt;/p>
&lt;p>$$
T(c_1w_1 + \cdots + c_rw_r) = 0
$$&lt;/p>
&lt;p>所以, $c_1w_1 + \cdots + c_rw_r \in \ker(T)$, 可表示为 ${u_1, \dots, u_p}$ 的线性组合&lt;/p>
&lt;p>$$
c_1w_1 + \cdots + c_rw_r = d_1u_1 + \cdots + d_pu_p
$$&lt;/p>
&lt;p>又因为 $\{u_1,\dots,u_p,w_1,\dots,w_r\}$ 线性无关, 所以上式的系数全部为零, 证得 $\{T(w_1), \dots, T(w_r)\}$ 线性无关, 即 ${\rm rank}, T = r$.&lt;/p>
&lt;p>&lt;br />&lt;/p>
&lt;hr>
&lt;h2 id="推论">推论&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>若 $\dim \mathcal{V} &amp;gt; \dim \mathcal{W}$, 则&lt;br>
$$
\begin{aligned}
\operatorname{dim} \operatorname{ker}(T)=\operatorname{dim} \mathcal{V}-\operatorname{dim} \operatorname{ran}(T) \\[3pt]
\geq \operatorname{dim} \mathcal{V}-\operatorname{dim} \mathcal{W}&amp;gt;0
\end{aligned}
$$
即存在非零向量 $\mathbf{x}\in\mathcal{V}$ 使得 $T(\mathbf{x})=\mathbf{0}$.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>若 $\dim \mathcal{V} &amp;lt; \dim \mathcal{W}$, 则&lt;br>
$$\begin{aligned}
\operatorname{dim} \operatorname{ran}(T)=\operatorname{dim} \mathcal{V}-\operatorname{dim} \operatorname{ker}(T) \\[3pt]
\leq \operatorname{dim} \mathcal{V}&amp;lt;\operatorname{dim} \mathcal{W}
\end{aligned}$$
即存在非零向量 $\mathbf{y}\in\mathcal{W}$ 使得 $\mathbf{y} \notin {\rm ran}(T)$, 即 $T$ 不是满射.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>用&lt;code>矩阵&lt;/code>语言阐述上述推论&lt;/strong> 设 $A$ 是一个 $m\times n$ 阶矩阵.&lt;/p>
&lt;ol>
&lt;li>$n &amp;gt; m$ (矮胖子矩阵)$$\dim N(A) = n - \dim C(A) \geq n - m \geq 0$$ 即零空间 $N(A)$ 包含非零向量, 即 $A\mathbf{x}=\mathbf{0}$ 有无限多组解.
&lt;img src="https://imgkr.cn-bj.ufileos.com/7faafa27-66ce-4846-a283-b20d17b63d15.png" title="矮胖子矩阵" alt="矮胖子矩阵" width="250">&lt;/li>
&lt;li>$n &amp;lt; m$ (瘦高个儿矩阵)$$\dim C(A) = n - \dim N(A)\leq n &amp;lt; m $$ 即列空间 $C(A)$ 未能充满整个 $\mathbb{R}^m$, 也就是说 $A{\mathbf x}=b$ 有可能无解.
&lt;img src="https://imgkr.cn-bj.ufileos.com/09617655-08e9-488a-a39a-1b5fcdab5ecb.png" title="瘦高个儿矩阵" alt="瘦高个儿矩阵" width="200">&lt;/li>
&lt;/ol>
&lt;p>&lt;br />&lt;/p></description><category domain="https://matnoble.me/math/">math</category><category domain="https://matnoble.me/math/linear-algebra/">Linear-Algebra</category><category domain="https://matnoble.me/series/mla/">线代拾遗</category><category domain="https://matnoble.me/tags/%E7%BA%BF%E4%BB%A3%E5%9F%BA%E6%9C%AC%E5%AE%9A%E7%90%86/">线代基本定理</category></item><item><title>LaTeX 矩阵转置符</title><link>https://matnoble.me/tech/latex/latex-transpose/</link><guid isPermaLink="true">https://matnoble.me/tech/latex/latex-transpose/</guid><pubDate>Fri, 10 Jan 2020 00:23:25 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/4e7ca500-bdca-42dc-9444-bffa8af84fc5.png" width="95%" />&lt;/p>
&lt;div align="center">&lt;a href="https://matnoble.me/series/latex">◎ 你过来啊 🤞&lt;/a>&lt;/div>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">序号&lt;/th>
&lt;th style="text-align:center">语法&lt;/th>
&lt;th style="text-align:center">效果&lt;/th>
&lt;th style="text-align:center">&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">1&lt;/td>
&lt;td style="text-align:center">\boldsymbol{A}^\mathrm{T}&lt;/td>
&lt;td style="text-align:center">$\boldsymbol{A}^\mathrm{T}$&lt;/td>
&lt;td style="text-align:center">$\times$&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">2&lt;/td>
&lt;td style="text-align:center">\boldsymbol{A}^\top&lt;/td>
&lt;td style="text-align:center">$\boldsymbol{A}^\top$&lt;/td>
&lt;td style="text-align:center">$\times$&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">3&lt;/td>
&lt;td style="text-align:center">\boldsymbol{A}^\mathsf{T}&lt;/td>
&lt;td style="text-align:center">$\boldsymbol{A}^\mathsf{T}$&lt;/td>
&lt;td style="text-align:center">$\surd$&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">4&lt;/td>
&lt;td style="text-align:center">\boldsymbol{A}^\intercal&lt;/td>
&lt;td style="text-align:center">$\boldsymbol{A}^\intercal$&lt;/td>
&lt;td style="text-align:center">$\surd$&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>3 或 4 都可, 我平常使用 3.&lt;/p>
&lt;p>&lt;br />&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>举个例子&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;p>设 $\boldsymbol{M} = \boldsymbol{A}^\mathsf{T}\boldsymbol{A}$, 则&lt;/p>
&lt;p>$$
\boldsymbol{M}^\mathsf{T} = (\boldsymbol{A}^\mathsf{T}\boldsymbol{A})^\mathsf{T} =
\boldsymbol{A}^\mathsf{T}\boldsymbol{A} = \boldsymbol{M}
$$&lt;/p>
&lt;p>所以 $\boldsymbol{M}$ 是对称矩阵.&lt;/p></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/latex/">latex</category><category domain="https://matnoble.me/series/latex/">LaTeX 排版「冷」知识</category><category domain="https://matnoble.me/tags/">标签云</category></item><item><title>矩阵对角化那些事</title><link>https://matnoble.me/math/linear-algebra/diag/</link><guid isPermaLink="true">https://matnoble.me/math/linear-algebra/diag/</guid><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;h2 id="所有矩阵都可以对角化吗">所有矩阵都可以对角化吗?&lt;/h2>
&lt;p>前几天某好友同学, 参加了某度算法岗的面试, 问了很多问题, 其中就有这么一个基础数学的问题: ..所有矩阵都可以对角化吗?..&lt;/p>
&lt;p>实际上, 我立马就可以想出一个反例:&lt;/p>
&lt;p>$$
A =
\begin{bmatrix}
1 &amp;amp; 1 \\&lt;br>
0 &amp;amp; 1
\end{bmatrix}.
$$&lt;/p>
&lt;p>A 矩阵不可以对角化, 因为:&lt;/p>
&lt;ul>
&lt;li>求特征值&lt;br>
显然特征值为&lt;/li>
&lt;/ul>
&lt;p>$$
\lambda_1 = \lambda_2 =1.
$$&lt;/p>
&lt;ul>
&lt;li>求对应的特征向量&lt;/li>
&lt;/ul>
&lt;p>$$
{\rm x}_1 = {\rm x}_2 = k\begin{bmatrix} 1 \\ 0 \end{bmatrix}.
$$&lt;/p>
&lt;p>其特征向量线性相关, 即 $A$ 不可对角化, 所以 ..并不是所有的矩阵都可以对角化..&lt;/p>
&lt;p>上述矩阵 $A$ 是最小的若尔当块.&lt;/p>
&lt;hr>
&lt;h2 id="矩阵对角化">矩阵对角化&lt;/h2>
&lt;h3 id="矩阵对角化是什么">矩阵对角化是什么?&lt;/h3>
&lt;blockquote>
&lt;p>&lt;strong>可对角化矩阵&lt;/strong> 是&lt;em>线性代数&lt;/em> 和&lt;em>矩阵论&lt;/em> 中重要的一类矩阵. 如果一个&lt;em>方块矩阵&lt;/em> $A$ 相似于&lt;em>对角矩阵&lt;/em>, 也就是说: 如果存在一个&lt;em>可逆矩阵&lt;/em> $P$ 使得 $P^{-1}AP$ 是对角矩阵，则它就被称为&lt;strong>可对角化&lt;/strong>的.&lt;/p>
&lt;/blockquote>
&lt;p>记 $n$ 阶方阵 $A$ 的特征值为(可能存在相同的特征指)&lt;/p>
&lt;p>$$
{\rm \lambda }= \\{\lambda_1, \dots, \lambda_n \\}.
$$&lt;/p>
&lt;p>以及&lt;strong>线性无关&lt;/strong>的特征向量&lt;/p>
&lt;p>$$
S = [ {\rm x}_1, \dots, {\rm x}_n ].
$$&lt;/p>
&lt;p>其中 ${\rm x}_i$ 为列向量. 则&lt;/p>
&lt;p>$$
\begin{align*}
A S &amp;amp;= [ A{\rm x}_1, \dots, A{\rm x}_n ] \\[3pt]
&amp;amp; = [\lambda_1{\rm x}_1, \dots, \lambda_n{\rm x}_n] \\[3pt]
&amp;amp; = [ {\rm x}_1, \dots, {\rm x}_n ] \left[ \begin{array}{cccc}
{\lambda_{1}} &amp;amp; {0} &amp;amp; {\cdots} &amp;amp; {0} \\&lt;br>
{0} &amp;amp; {\lambda_{2}} &amp;amp; {\cdots} &amp;amp; {0} \\&lt;br>
{\vdots} &amp;amp; {\vdots} &amp;amp; {\ddots} &amp;amp; {\vdots} \\&lt;br>
{0} &amp;amp; {0} &amp;amp; {\cdots} &amp;amp; {\lambda_{n}}
\end{array} \right] \\[3pt]
&amp;amp; = S\Lambda.
\end{align*}
$$&lt;/p>
&lt;p>根据上式, 即得到一种矩阵分解&lt;/p>
&lt;p>$$
A = SAS^{-1}.
$$&lt;/p>
&lt;hr>
&lt;h3 id="可对角化条件">可对角化条件&lt;/h3>
&lt;p>我们已经知道, 并不是所有的矩阵都可以对角化, 那么矩阵 ..可对角化需要满足哪些条件呢?..&lt;/p>
&lt;ul>
&lt;li>
&lt;p>特征向量&lt;br>
所有特征向量线性无关&lt;/p>
&lt;/li>
&lt;li>
&lt;p>特征值&lt;/p>
&lt;ul>
&lt;li>若矩阵的特征值各不相同, 则矩阵一定可以对角化;&lt;/li>
&lt;li>若矩阵存在某特征值的重数大于 1, 矩阵则&lt;em>可能&lt;/em> 可以对角化.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>空间&lt;br>
全空间 $V$ 可表示为各特征子空间的直和&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>课本上有一系列等价条件, 此处不再枚举.&lt;/p>
&lt;p>实际上, &lt;strong>若尔当标准型理论&lt;/strong>可以完美解释对角化问题, 此处也不多介绍, 之后会专门说一说.&lt;/p>
&lt;hr>
&lt;h3 id="有趣的应用">有趣的应用&lt;/h3>
&lt;p>以下内容的前提条件都是: &lt;strong>矩阵满足可对角化&lt;/strong>&lt;/p>
&lt;h4 id="矩阵的幂-an">矩阵的幂 $A^n$&lt;/h4>
&lt;p>首先, 因为 $A = S\Lambda S^{-1}$, 所以&lt;/p>
&lt;p>$$
A^n = S\Lambda S^{-1} \cdot S\Lambda S^{-1} \cdots S\Lambda S^{-1}=S\Lambda^{n}S^{-1}.
$$&lt;/p>
&lt;p>其中,&lt;/p>
&lt;p>$$
\Lambda^{n} =
\left[ \begin{array}{cccc}
{\lambda_{1}^n} &amp;amp; {0} &amp;amp; {\cdots} &amp;amp; {0} \\&lt;br>
{0} &amp;amp; {\lambda_{2}^n} &amp;amp; {\cdots} &amp;amp; {0} \\&lt;br>
{\vdots} &amp;amp; {\vdots} &amp;amp; {\ddots} &amp;amp; {\vdots} \\&lt;br>
{0} &amp;amp; {0} &amp;amp; {\cdots} &amp;amp; {\lambda_{n}^n}
\end{array} \right]
$$&lt;/p>
&lt;p>以上是&lt;strong>利用特征值计算矩阵幂&lt;/strong>的方法, 而且可以得到: 矩阵的 $n$ 次方后, 特征值相应地变为 $n$ 次方, 而特征向量不变.&lt;/p>
&lt;p>其次, 因为 $A{\rm x} = \lambda {\rm x} $, 所以&lt;/p>
&lt;p>$$
A^2{\rm x} = A \lambda {\rm x} = \lambda A{\rm x} = \lambda^2{\rm x} .
$$&lt;/p>
&lt;p>递推可得 $$A^n{\rm x} = \lambda^n {\rm x}$$&lt;/p>
&lt;p>由上式同样得到: 矩阵的 $n$ 次方后, 特征值相应地变为 $n$ 次方, 而特征向量保持不变.&lt;/p>
&lt;h4 id="差分方程-u_k1--au_k">差分方程 $u_{k+1} = Au_k$&lt;/h4>
&lt;p>假设 $u_2 = Au_1$, 由递推 $u_{k+1} = Au_k$ 可得 $u_{k+1} = A^ku_1$, 那么, **已知 $n$ 阶方阵 $A, u_1$, 如何计算 $u_{k+1}$ ?**&lt;/p>
&lt;p>因为已知 $A$ 可对角化, 所以矩阵 $A$ 的特征向量线性无关, $S=\\{{\rm x}_1, \dots, {\rm x}_n\\}$ 可构成全空间 $V$ 的一组基, 则 $u_1$ 可表示为:&lt;/p>
&lt;p>$$
\begin{align*}
u_1 &amp;amp;= c_1{\rm x}_1 + c_2{\rm x}_2 + \cdots + c_n{\rm x}_n \\&lt;br>
&amp;amp;= S \begin{bmatrix} c_1 \\ c_2 \\ \vdots \\&lt;br>
c_n\end{bmatrix} = Sc.
\end{align*}
$$&lt;/p>
&lt;p>继而,&lt;/p>
&lt;p>$$
\begin{align*}
u_2 &amp;amp;= Au_1 = c_1A{\rm x}_1 + c_2A{\rm x}_2 + \cdots + c_nA{\rm x}_n \\&lt;br>
&amp;amp; = c_1\lambda_1{\rm x}_1 + c_2\lambda_2{\rm x}_2 + \cdots + c_n\lambda_n{\rm x}_n \\[3pt]
&amp;amp; = [ {\rm x}_1, \dots, {\rm x}_n ] \left[ \begin{array}{cccc}
{\lambda_{1}} &amp;amp; {0} &amp;amp; {\cdots} &amp;amp; {0} \\&lt;br>
{0} &amp;amp; {\lambda_{2}} &amp;amp; {\cdots} &amp;amp; {0} \\&lt;br>
{\vdots} &amp;amp; {\vdots} &amp;amp; {\ddots} &amp;amp; {\vdots} \\&lt;br>
{0} &amp;amp; {0} &amp;amp; {\cdots} &amp;amp; {\lambda_{n}}
\end{array} \right] \begin{bmatrix} c_1 \\ c_2 \\ \vdots \\&lt;br>
c_n\end{bmatrix}\\&lt;br>
&amp;amp; = S\Lambda c.
\end{align*}
$$&lt;/p>
&lt;p>另外, 上述结果同样由以下矩阵形式得到&lt;/p>
&lt;p>$$
u_2 = Au_1 = S\Lambda S^{-1} Sc = S\Lambda c.
$$&lt;/p>
&lt;p>递推, 就可以得到&lt;/p>
&lt;p>$$
u_{k+1} = A^{k}u_1 = S\Lambda^kc. \qquad (*)
$$&lt;/p>
&lt;p>该公式可用于以下 &lt;strong>生兔子问题&lt;/strong>&lt;/p>
&lt;h5 id="斐波那契数列-fibonacci-sequence">斐波那契数列 (Fibonacci sequence)&lt;/h5>
&lt;p>数列 $F = { 0, 1, 1, 2, 3, 5, \dots }$, 即满足如下递推式 $$F_n = F_{n-1} + F_{n-2}.$$
试求 $F_n$ 的表达式.&lt;/p>
&lt;p>设 $ u_1 = \begin{bmatrix} F_2 \\ F_1 \end{bmatrix} $, 则&lt;/p>
&lt;p>$$
u_2 = \begin{bmatrix} F_3 \\ F_2 \end{bmatrix} = \begin{bmatrix} 1 &amp;amp; 1 \\ 1 &amp;amp; 0 \end{bmatrix}\begin{bmatrix} F_2 \\ F_1 \end{bmatrix} = Au_1.
$$&lt;/p>
&lt;p>计算矩阵 $A$ 的特征值和特征向量:&lt;br>
特征多项式&lt;/p>
&lt;p>$$
\left| \lambda I - A \right| = \begin{vmatrix} \lambda -1 &amp;amp; -1 \\ -1 &amp;amp; \lambda \end{vmatrix} = \lambda^2 - \lambda - 1.
$$&lt;/p>
&lt;p>从而得到&lt;/p>
&lt;p>$$
\lambda_1 = \frac{1+\sqrt{5}}{2}
$$&lt;/p>
&lt;p>对应的特征向量 ${\rm x}_1 = [\lambda_1, 1]^{\sf T}$.&lt;/p>
&lt;p>$$
\lambda_2 = \frac{1-\sqrt{5}}{2}
$$&lt;/p>
&lt;p>对应的特征向量 ${\rm x}_2 = [\lambda_2, 1]^{\sf T}$.&lt;/p>
&lt;blockquote>
&lt;p>计算特征向量可由观察得到:&lt;/p>
&lt;p>$$
\lambda I - A = \begin{bmatrix} \lambda -1 &amp;amp; -1 \\ -1 &amp;amp; \lambda \end{bmatrix}\begin{bmatrix} a \\ b \end{bmatrix} = 0
$$&lt;/p>
&lt;p>因为 $\lambda^2 - \lambda - 1 = 0$, 所以&lt;/p>
&lt;p>$$
\begin{cases}
a = \lambda,
\\[3pt]
b = 1.
\end{cases}
$$&lt;/p>
&lt;p>所以
$$
S = [{\rm x}_1, {\rm x}_2] = \begin{bmatrix} \lambda_1 &amp;amp; \lambda_2 \\ 1 &amp;amp; 1 \end{bmatrix}
$$.&lt;/p>
&lt;/blockquote>
&lt;p>继而,&lt;/p>
&lt;p>$$
\begin{align*}
u_1 = \begin{bmatrix} 1 \\ 0 \end{bmatrix} &amp;amp;= c_1{\rm x}_1 + c_2{\rm x}_2 \\&lt;br>
&amp;amp; = c_1\begin{bmatrix} \lambda_1 \\ 1 \end{bmatrix}+ c_2\begin{bmatrix} \lambda_2 \\ 1 \end{bmatrix}.
\end{align*}
$$&lt;/p>
&lt;p>解得&lt;/p>
&lt;p>$$
\begin{cases}
c_1 = \frac{1}{\lambda_1 - \lambda_2},
\\[3pt]
c_2 = -c_1.
\end{cases}
$$&lt;/p>
&lt;p>带入 $(*)$ 式&lt;/p>
&lt;p>$$
\begin{align*}
u_n = S\Lambda ^{n-1}c &amp;amp;=\begin{bmatrix} \lambda_1 &amp;amp; \lambda_2 \\ 1 &amp;amp; 1 \end{bmatrix}\begin{bmatrix} \lambda_1^{n-1} &amp;amp; 0 \\ 0 &amp;amp; \lambda_2^{n-1} \end{bmatrix} \begin{bmatrix} \frac{1}{\lambda_1 - \lambda_2} \\ -\frac{1}{\lambda_1 - \lambda_2} \end{bmatrix} \\[3pt]
&amp;amp; = \frac{1}{\lambda_1 - \lambda_2} \begin{bmatrix} \lambda_1^n - \lambda_2^n \\ \lambda_1^{n-1} - \lambda_2^{n-1} \end{bmatrix}
\end{align*}
$$&lt;/p>
&lt;p>所以,&lt;/p>
&lt;p>$$
F_n = \frac{\lambda_1^{n-1} - \lambda_2^{n-1}}{\lambda_1 - \lambda_2}.
$$&lt;/p>
&lt;h4 id="指数矩阵-eat">指数矩阵 $e^{At}$&lt;/h4>
&lt;blockquote>
&lt;p>你能证明 $e^{At} = Se^{\Lambda t}S^{-1}$ 吗?&lt;br>
其中,&lt;/p>
&lt;p>$$
e^{\Lambda t} =
\left[\begin{array}{cccc}
{\mathrm{e}^{\lambda_{1} \mathrm{t}}} &amp;amp; {0} &amp;amp; {\cdots} &amp;amp; {0} \\&lt;br>
{0} &amp;amp; {\mathrm{e}^{\lambda_{2} \mathrm{t}}} &amp;amp; {\cdots} &amp;amp; {0} \\&lt;br>
{\vdots} &amp;amp; {\vdots} &amp;amp; {\ddots} &amp;amp; {\vdots} \\&lt;br>
{0} &amp;amp; {0} &amp;amp; {\cdots} &amp;amp; {\mathrm{e}^{\lambda_{n} \mathrm{t}}}
\end{array}\right]
$$&lt;/p>
&lt;/blockquote></description><category domain="https://matnoble.me/math/">math</category><category domain="https://matnoble.me/math/linear-algebra/">Linear-Algebra</category><category domain="https://matnoble.me/series/mla/">线代拾遗</category><category domain="https://matnoble.me/tags/%E7%9F%A9%E9%98%B5/">矩阵</category></item><item><title>LaTeX 控制空格间距</title><link>https://matnoble.me/tech/latex/latex-space/</link><guid isPermaLink="true">https://matnoble.me/tech/latex/latex-space/</guid><pubDate>Tue, 31 Dec 2019 00:23:25 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/4e7ca500-bdca-42dc-9444-bffa8af84fc5.png" width="95%" />&lt;/p>
&lt;div align="center">&lt;a href="https://matnoble.me/series/latex">◎ 你过来啊 🤞&lt;/a>&lt;/div>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">空格类型&lt;/th>
&lt;th style="text-align:center">语法&lt;/th>
&lt;th style="text-align:center">效果&lt;/th>
&lt;th style="text-align:left">具体间隔&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">两个 quad 空格&lt;/td>
&lt;td style="text-align:center">a \qquad b&lt;/td>
&lt;td style="text-align:center">$a \qquad b$&lt;/td>
&lt;td style="text-align:left">两个 m 的宽度&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">quad 空格&lt;/td>
&lt;td style="text-align:center">a \quad b&lt;/td>
&lt;td style="text-align:center">$a \quad b$&lt;/td>
&lt;td style="text-align:left">一个 m 的宽度&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">大空格&lt;/td>
&lt;td style="text-align:center">a \ b&lt;/td>
&lt;td style="text-align:center">$a \ b$&lt;/td>
&lt;td style="text-align:left">1/3m 宽度&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">中等空格&lt;/td>
&lt;td style="text-align:center">a \; b&lt;/td>
&lt;td style="text-align:center">$a \;b$&lt;/td>
&lt;td style="text-align:left">２/7m 宽度&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">小空格&lt;/td>
&lt;td style="text-align:center">a \, b&lt;/td>
&lt;td style="text-align:center">$a \,b$&lt;/td>
&lt;td style="text-align:left">１/6m 宽度&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">正常间距&lt;/td>
&lt;td style="text-align:center">ab&lt;/td>
&lt;td style="text-align:center">$ab$&lt;/td>
&lt;td style="text-align:left">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">紧贴&lt;/td>
&lt;td style="text-align:center">a \! b&lt;/td>
&lt;td style="text-align:center">$a \!b$&lt;/td>
&lt;td style="text-align:left">缩进 1/6m 宽度&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;br />&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>举个例子&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>cases&lt;span class="nb">}&lt;/span>
-&lt;span class="k">\Delta&lt;/span> u = 1 &lt;span class="k">\quad&lt;/span> &lt;span class="nb">&amp;amp;&lt;/span>x &lt;span class="k">\in&lt;/span> &lt;span class="k">\Omega&lt;/span>
&lt;span class="k">\\&lt;/span>&lt;span class="na">[3pt]&lt;/span>
u = g &lt;span class="nb">&amp;amp;&lt;/span>x &lt;span class="k">\in&lt;/span> &lt;span class="k">\partial&lt;/span> &lt;span class="k">\Omega&lt;/span>
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>cases&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$
\begin{cases}
-\Delta u = 1 \quad &amp;amp;x \in \Omega
\\[3pt]
u = g &amp;amp;x \in \partial \Omega
\end{cases}
$$&lt;/p></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/latex/">latex</category><category domain="https://matnoble.me/series/latex/">LaTeX 排版「冷」知识</category><category domain="https://matnoble.me/tags/">标签云</category></item><item><title>LaTeX 引号你用对了吗？</title><link>https://matnoble.me/tech/latex/latex-quotation-marks/</link><guid isPermaLink="true">https://matnoble.me/tech/latex/latex-quotation-marks/</guid><pubDate>Mon, 30 Dec 2019 00:23:25 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/4e7ca500-bdca-42dc-9444-bffa8af84fc5.png" width="95%" />&lt;/p>
&lt;div align="center">&lt;a href="https://matnoble.me/series/latex">◎ 你过来啊 🤞&lt;/a>&lt;/div>
&lt;p>$\LaTeX$ 排版时, 如果使用键盘上的引号, 会得到顺撇的引号:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&amp;#34;顺撇引号&amp;#34;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>效果是这样的:&lt;/p>
&lt;p>$&amp;quot;顺撇引号&amp;quot;$&lt;/p>
&lt;p>&lt;br />&lt;/p>
&lt;p>正确的使用方法是: &lt;strong>左引号用 &lt;code>Tab&lt;/code> 键上方的键(数字 1 左边的键), 右引号用键盘的引号键&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">`单引号&amp;#39;
``双引号&amp;#39;&amp;#39;
``双引号 `单引号&amp;#39; 双引号&amp;#39;&amp;#39;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>效果如下:&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/4c6275f4-50da-45e8-b812-1fefbabcc123.webp"
title="正常引号"
alt="正常引号"
width="95%"
>
&lt;span class="caption">◎ 正常引号&lt;/span>
&lt;/span></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/latex/">latex</category><category domain="https://matnoble.me/series/latex/">LaTeX 排版「冷」知识</category><category domain="https://matnoble.me/tags/">标签云</category></item><item><title>逼近函数 IV</title><link>https://matnoble.me/math/fem/fem5/</link><guid isPermaLink="true">https://matnoble.me/math/fem/fem5/</guid><pubDate>Mon, 30 Dec 2019 00:00:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/64498351-25f9-435e-8951-704f5883d9e0.png" title="简述有限元: 逼近函数 IV" alt="简述有限元逼近函数" />&lt;/p>
&lt;h2 id="上期回顾">上期回顾&lt;/h2>
&lt;h3 id="程序">程序&lt;/h3>
&lt;blockquote>
&lt;p>例题 1&lt;br>
利用拉格朗日多项式做基函数编程实现: 设函数 $f(x)=10(x-1)^2-1$, 在线性函数空间中找到最佳逼近函数 $u(x)$, 求解域 $\Omega = [1, 2]$, 两个真解点为: $x_0 = 1+1/3, x_1 = 1+2/3$.&lt;/p>
&lt;/blockquote>
&lt;img src="https://imgkr.cn-bj.ufileos.com/08a52fa9-b8f3-46c5-b6ff-1d7a9703bbfc.png" title="简述有限元: 例题 1" alt="简述有限元逼近函数" width="500"/>
&lt;img src="https://imgkr.cn-bj.ufileos.com/c8dfa667-6a58-48d2-9ec7-7123dae6c7bc.png" title="简述有限元: 例题 1 结果展示" alt="简述有限元逼近函数" width="300"/>
&lt;blockquote>
&lt;p>主程序&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-matlab" data-lang="matlab">&lt;span class="n">f&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">@(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.^&lt;/span>&lt;span class="mi">2&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">syms&lt;/span> &lt;span class="n">x&lt;/span>
&lt;span class="nb">psi&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="n">points&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="p">[&lt;/span> &lt;span class="n">A&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">interpolation&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">psi&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">points&lt;/span> &lt;span class="p">);&lt;/span>
&lt;span class="n">c&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">A&lt;/span>&lt;span class="o">\&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">u&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">psi&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c">% 可视化&lt;/span>
&lt;span class="n">omega&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="n">X&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">omega&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="mf">0.01&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">omega&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">U&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">inline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vectorize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">u&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s">&amp;#39;x&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">Plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">U&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c">% 结果展示&lt;/span>
&lt;span class="n">result&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">u&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>例题 2&lt;br>
假设 $f(x)=\sin(2\pi x), \Omega=[0, 1]$, 利用拉格朗日多项式做基函数, 分别用&lt;code>最小二乘法&lt;/code>和&lt;code>插值法&lt;/code>寻找最佳逼近函数 $u(x)$.&lt;br>
&lt;em>注: 可假设基函数个数为 4 个, 拉格朗日点为等距节点&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>最小二乘法&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/ad0d5094-04f7-412e-a46f-b05819c0218f.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/2be6ad26-cf1e-41e7-9c57-c5941b2e9dbe.png" alt="结果展示">&lt;/p>
&lt;ul>
&lt;li>插值法&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/2ac593aa-fe3c-4ee3-93c7-fe0cac07f874.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/fe705f59-213e-4579-b5cb-628dde96dd9a.png" alt="结果展示">&lt;/p>
&lt;p>程序过长, 源代码见原文链接. 肉眼可见, 最小二乘法逼近效果更好, 但其系数矩阵更复杂一些.&lt;/p>
&lt;h3 id="小结">小结&lt;/h3>
&lt;p>上次推送了重要的&lt;code>拉格朗日多项式&lt;/code>作基函数, 结合上述例题, 知用于&lt;code>插值法&lt;/code>中, 可使得系数矩阵 $A=I$ 为单位矩阵, 但是, 应用到&lt;code>最小二乘法&lt;/code>中, 系数矩阵却不是&lt;a href="https://en.wikipedia.org/wiki/Sparse_matrix" title="稀疏矩阵">稀疏矩阵&lt;/a>的, 因为&lt;/p>
&lt;p>$$
A_{i, j} =\left(\psi_{i}, \psi_{j}\right) \neq 0.
$$&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/a2dc4d34-a878-40ff-8bac-97ebcc531caa.png" title="简述有限元: 两个节点" alt="简述有限元逼近函数两个节点" width="75%" />&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/ae88936e-1bb5-415e-bdfd-5898c59b1739.png" title="简述有限元: 三个节点" alt="简述有限元逼近函数三个节点" width="75%" />&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/43ec6243-a2bb-404c-a438-781b9246f603.png" title="简述有限元: 四个节点" alt="简述有限元逼近函数四个节点" width="75%" />&lt;/p>
&lt;p>因此, 本次继续讨论逼近函数问题, 考虑 ..有限元基函数.. .&lt;/p>
&lt;hr>
&lt;h2 id="有限元基函数">有限元基函数&lt;/h2>
&lt;h3 id="引子">引子&lt;/h3>
&lt;p>在之前 3 期推送(逼近函数)中, 基函数 $\psi_i(x), i \in {\mathcal{I}_s}$ 在整个区域 $\Omega$ 上一般都是非零的, 如下图所示.&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/856a7f13-620b-426b-909a-31f57f18c3f7.png" alt="$u(x)=4\psi_0(x)-\frac{1}{2}\psi_1(x)$">&lt;/p>
&lt;p>而有限元法要求基函数有&lt;a href="http://mathworld.wolfram.com/CompactSupport.html" title="紧支撑">紧支撑&lt;/a>, 即它们只有在一小部分区域内是非零的, 在大部分区域都是零. 另外, 一般要求基函数是分段多项式函数, 如下图所示&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/355f0ce0-2714-44ed-8c01-7939ff089172.png" alt="">&lt;/p>
&lt;h3 id="单元和节点">单元和节点&lt;/h3>
&lt;p>$\color{gray}{\textit{Elements and nodes}}$&lt;/p>
&lt;p>将区域 $\Omega$ 剖分为有限个&lt;code>互补重叠&lt;/code>的子区域 $\Omega^{(e)}, e=0,\dots, N_e$:&lt;/p>
&lt;p>$$
\Omega=\Omega^{(0)} \cup \cdots \cup \Omega^{\left(N_{e}\right)}
$$&lt;/p>
&lt;p>称这样的子区域为&lt;code>单元&lt;/code>, 每个单元有一个区分其他单元的上标 $^{(e)}$. 然后, 在每个单元 $\Omega^{(e)}$ 上定义&lt;code>点&lt;/code>的集合, 命名为&lt;code>节点&lt;/code>. 为区分不同节点, 我们还需要一套节点的&lt;code>全局编号&lt;/code>, 并且在每个小单元上定义&lt;code>局部编号&lt;/code>.&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/da8653b4-fd8f-4f76-958c-746ab875e1c3.png" alt="有 5 个单元 6 个节点的有限元网格">&lt;/p>
&lt;p>单元和节点完全定义了&lt;code>有限元网格&lt;/code>, 即完成了对空间的离散. 上图为常见的均匀剖分网格, 即单元的规格相同, 节点间的距离也相同.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>一个例子&lt;/strong>&lt;br>
$\Omega=[0, 1]$ 内剖分为两个单元:&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/f8f1b018-16d8-455c-99ea-ebc117f6c033.png" alt="2 个单元 5 个节点的单位有限元网格">&lt;/p>
&lt;p>\begin{aligned}
\Omega^{(0)}=[0, 0.4]\&lt;br>
\Omega^{(1)}=[0.4, 1]
\end{aligned}&lt;/p>
&lt;p>每个单元内有 3 个节点. 则有全局编号&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">全局编号&lt;/th>
&lt;th style="text-align:center">0&lt;/th>
&lt;th style="text-align:center">1&lt;/th>
&lt;th style="text-align:center">2&lt;/th>
&lt;th style="text-align:center">3&lt;/th>
&lt;th style="text-align:center">4&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">坐标&lt;/td>
&lt;td style="text-align:center">0&lt;/td>
&lt;td style="text-align:center">0.2&lt;/td>
&lt;td style="text-align:center">0.4&lt;/td>
&lt;td style="text-align:center">0.7&lt;/td>
&lt;td style="text-align:center">1&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>因此, &lt;code>节点信息&lt;/code>用向量表示&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-matlab" data-lang="matlab">&lt;span class="n">nodes&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.7&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>每个单元由三个节点组成&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">局部编号&lt;/th>
&lt;th style="text-align:center">0&lt;/th>
&lt;th style="text-align:center">1&lt;/th>
&lt;th style="text-align:center">2&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">$\Omega^{(0)}$&lt;/td>
&lt;td style="text-align:center">0&lt;/td>
&lt;td style="text-align:center">1&lt;/td>
&lt;td style="text-align:center">2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\Omega^{(1)}$&lt;/td>
&lt;td style="text-align:center">2&lt;/td>
&lt;td style="text-align:center">3&lt;/td>
&lt;td style="text-align:center">4&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>因此, &lt;code>单元信息&lt;/code>用矩阵信息&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-matlab" data-lang="matlab">&lt;span class="n">elements&lt;/span>&lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/blockquote>
&lt;h3 id="基函数">基函数&lt;/h3>
&lt;p>有限元基函数用 $\varphi_i(x)$ 表示, 索引 $i$ 为节点的全局编码, 即基函数的个数等于节点的个数. 在逼近函数问题时, 我们另 $\psi_i(x) = \varphi_i(x)$.&lt;/p>
&lt;h4 id="构造原理">构造原理&lt;/h4>
&lt;p>为方便, 在单元 $e$ 中, 令 $i$ 为全局编号, $r$ 为局部编号, 有限元基函数构造遵循以下规则:&lt;/p>
&lt;ul>
&lt;li>$r$ 为单元 $e$ 内部编号:&lt;br>
选取 $\varphi_i$ 在 单元 $e$ 内 $r$ 处为 1, 其他节点为 0; 在其他单元上 $\varphi_i(x) \equiv 0$.&lt;/li>
&lt;li>$r$ 为单元 $e$ 边界编号:&lt;br>
选取 $\varphi_i$ 在单元 $e$ 和单元 $e+1$ 上不恒为 0 ($ \varphi_i \not\equiv0$), 具体的, 在 $r$ 处等于 1, 其他节点处等于 0. 而在其他单元上, $\varphi_i(x) \equiv 0$.&lt;/li>
&lt;/ul>
&lt;p>下图展示对这两条规则直观的理解&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/b1fd8d22-ae6f-4dc7-834d-a06911bec573.png" alt="$\Omega^{(1)}$ 内的三个基函数">&lt;/p>
&lt;h4 id="varphi_i-的性质">$\varphi_i$ 的性质&lt;/h4>
&lt;ul>
&lt;li>&lt;code>帽子&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>$$
\varphi_{i}\left(x_{j}\right)=\delta_{i j}
\quad \delta_{i j}=
\begin{cases}
{1,} &amp;amp; {i=j} \\[3pt]
{0,} &amp;amp; {i \neq j}
\end{cases}
$$&lt;/p>
&lt;p>从而&lt;/p>
&lt;p>$$
u\left(x_{i}\right)=\sum_{j \in \mathcal{I}_{s}} c_{j} \psi_{j}\left(x_{i}\right)=\sum_{j \in \mathcal{I}_{s}} c_{j} \varphi_{j}\left(x_{i}\right)=c_{i} \varphi_{i}\left(x_{i}\right)=c_{i}
$$&lt;/p>
&lt;p>即..系数..$c_i$ 的值等于 $u$ 在 $i$ 处的函数值(数值解).&lt;/p>
&lt;ul>
&lt;li>
&lt;p>$\varphi_i(x)$ 在区域 $\Omega$ 的大部分区域等于 0.&lt;/p>
&lt;ul>
&lt;li>$\varphi_i(x)\neq 0$ 仅在有全局节点 $i$ 的单元中成立.&lt;/li>
&lt;li>$\varphi_i(x)\varphi_j(x)\neq 0$ 仅在同时有全局节点 $i$ 和全局节点 $j$ 的单元中成立.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>因此, $A_{ij} = \int_{\Omega^{(e)}} \varphi _i(x) \varphi_j(x) {\rm d} x $ 在系数矩阵中大多等于 0.&lt;/p>
&lt;p>假设每个单元有 $d+1$ 个节点, 那么局部拉格朗日多项式的次数是 $d$.&lt;/p>
&lt;h4 id="分段线性有限元基函数">分段线性有限元基函数&lt;/h4>
&lt;p>$$
\varphi_{i}(x)=
\begin{cases}
0, \quad &amp;amp; x &amp;lt; x_{i-1} \\[3pt]
(x-x_{i-1})/h, &amp;amp; x_{i-1} \leq x &amp;lt; x_i \\[3pt]
1-(x-x_{i-1})/h, &amp;amp; x_{i} \leq x &amp;lt; x_{i+1} \\[3pt]
0, &amp;amp; x \geq x_{i+1}
\end{cases}
$$&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/5b252f1d-7d4a-4367-a7ae-dd95be8b85ec.png" alt="P1 元">&lt;/p>
&lt;h4 id="分段二次有限元基函数">分段二次有限元基函数&lt;/h4>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/8c2784e1-11de-4f02-95f0-36ba5303b9af.png" alt="P2 元">&lt;/p>
&lt;p>&lt;strong>在每一个单元上, 都是拉格朗日多项式作基函数&lt;/strong>&lt;/p>
&lt;h3 id="建立线性方程组">建立线性方程组&lt;/h3>
&lt;h4 id="组装系数矩阵">组装系数矩阵&lt;/h4>
&lt;p>$$
[A_{i,j}] = \big(\varphi_j(x), \varphi_i(x)\big).
$$&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/af886738-a916-4c3a-82fb-d191a368ffd3.png" alt="系数矩阵">&lt;/p>
&lt;p>由基函数的性质, 可知只有 $A_{i, i}$ 或者 $A_{i,i-1}=A_{i.i+1}$ 不为 0, 即 $A$ 为三对角阵.&lt;/p>
&lt;p>当 $0&amp;lt;i&amp;lt;N$&lt;/p>
&lt;p>$$
\begin{aligned}
A_{i,i} &amp;amp; = \int_{\Omega} \varphi_i^2 {\rm d} x \\[3pt]
&amp;amp; = \int_{i-1}^{i} \varphi_i^2 {\rm d} x + \int_{i}^{i-1} \varphi_i^2 {\rm d} x \\[3pt]
&amp;amp;=\int_{i-1}^{i} \left(\frac{x-x_{i-1}}{h}\right)^2 {\rm d} x + \int_{i}^{i-1} \left(1-\frac{x-x_{i}}{h}\right)^2 {\rm d} x \\[3pt]
&amp;amp; = \frac{2h}{3}.
\end{aligned}
$$&lt;/p>
&lt;p>以及 $0 &amp;lt; i \leq N$&lt;/p>
&lt;img src="https://imgkr.cn-bj.ufileos.com/92813566-6697-4c2f-8205-e71f1cf3531a.png" width="500" alt="有限元公式"/>
&lt;p>$A_{i,i+1}=A_{i,i-1}$.最后显然,&lt;/p>
&lt;p>$$
A_{0,0}=\int_{\Omega} \varphi_{0}^{2} \mathrm{d} x=\int_{x_{0}}^{x_{1}}\left(1-\frac{x-x_{0}}{h}\right)^{2} \mathrm{d} x=\frac{h}{3}.
$$&lt;/p>
&lt;p>$
A_{N, N}=A_{0, 0}.
$&lt;/p>
&lt;h4 id="载入右端项">载入右端项&lt;/h4>
&lt;p>$$
\begin{aligned}
b_{i}&amp;amp;=\int_{\Omega} \varphi_{i}(x) f(x) \mathrm{d} x \\[3pt]
&amp;amp; = \int_{x_{i-1}}^{x_{i}} \frac{x-x_{i-1}}{h} f(x) \mathrm{d} x+\int_{x_{i}}^{x_{i+1}}\left(1-\frac{x-x_{i}}{h}\right) f(x) \mathrm{d} x
\end{aligned}
$$&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/91613bcd-7a64-48ac-9f13-4d75f2a6216a.png" alt="右端项">&lt;/p>
&lt;h3 id="例题">例题&lt;/h3>
&lt;blockquote>
&lt;p>将 $\Omega = [0, 1]$ 划分为两个相同的的子区域, 设 $f(x)=x(1-x)$, 利用一阶有限元基函数(P1)计算最佳逼近 $u(x)$.&lt;/p>
&lt;/blockquote>
&lt;p>利用上述公式, 得到&lt;/p>
&lt;p>$$
A=\frac{h}{6}\left[\begin{array}{lll}
{2} &amp;amp; {1} &amp;amp; {0} \\[3pt]
{1} &amp;amp; {4} &amp;amp; {1} \\[3pt]
{0} &amp;amp; {1} &amp;amp; {2}
\end{array}\right], \quad b=\frac{h^{2}}{12}\left[\begin{array}{c}
{2-3 h} \\[3pt]
{12-14 h} \\[3pt]
{10-17 h}
\end{array}\right].
$$&lt;/p>
&lt;p>进而得到&lt;/p>
&lt;p>$$
c_{0}=\frac{h^{2}}{6}, \quad c_{1}=h-\frac{5}{6} h^{2}, \quad c_{2}=2 h-\frac{23}{6} h^{2}.
$$&lt;/p>
&lt;p>所以,&lt;/p>
&lt;p>$$
u(x)=c_{0} \varphi_{0}(x)+c_{1} \varphi_{1}(x)+c_{2} \varphi_{2}(x).
$$&lt;/p>
&lt;p>利用计算机绘图得到&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/82d4dc49-5731-4afa-a036-e5da8b2e9bb2.png" alt="左: 2 个节点 右: 4 个节点">&lt;/p>
&lt;h3 id="小结-1">小结&lt;/h3>
&lt;p>有限元基函数可以保证最小二乘法的系数矩阵是稀疏的, 而且基函数是简单的多项式.&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/64498351-25f9-435e-8951-704f5883d9e0.png" alt=""帽子"函数">&lt;/p>
&lt;hr>
&lt;h2 id="下节预告">下节预告&lt;/h2>
&lt;p>有限元计算在实际中不可能是手算的, 所以下次介绍一下编程技巧.&lt;/p></description><category domain="https://matnoble.me/math/">math</category><category domain="https://matnoble.me/math/fem/">fem</category><category domain="https://matnoble.me/series/fem/">简述有限元</category><category domain="https://matnoble.me/tags/%E6%9C%89%E9%99%90%E5%85%83/">有限元</category></item><item><title>逼近函数 III</title><link>https://matnoble.me/math/fem/fem4/</link><guid isPermaLink="true">https://matnoble.me/math/fem/fem4/</guid><pubDate>Sat, 28 Dec 2019 00:00:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/d6b2385b-358d-42a3-9d01-5eef5d9ab76c.jpeg" title="简述有限元: 逼近函数 III" alt="简述有限元逼近函数" />&lt;/p>
&lt;h2 id="前情回顾">前情回顾&lt;/h2>
&lt;h3 id="引子">引子&lt;/h3>
&lt;p>我们用两次推送, 讨论了用&lt;a href="https://zh.wikipedia.org/wiki/%E6%9C%80%E5%B0%8F%E4%BA%8C%E4%B9%98%E6%B3%95" title="最小二乘法">最小二乘法&lt;/a>和&lt;a href="https://zh.wikipedia.org/wiki/%E4%BC%BD%E8%BE%BD%E9%87%91%E6%B3%95" title="伽辽金法">伽辽金法&lt;/a>逼近函数, 二者出发点不同, 但最终都是化无限维为有限维问题来求解, 即将寻找最优逼近函数问题化为解线性方程组.&lt;/p>
&lt;h3 id="复盘">复盘&lt;/h3>
&lt;blockquote>
&lt;p>&lt;strong>逼近函数问题:&lt;/strong>&lt;br>
对于任意函数 $f(x)$, 设法在函数空间 $V={\rm span}{\psi_0(x),\dots,\psi_N(x)}$ 中找到最佳逼近函数 $u(x)$.&lt;/p>
&lt;/blockquote>
&lt;p>无论是&lt;strong>最小二乘法&lt;/strong>, 还是&lt;strong>伽辽金法&lt;/strong>, 在面对逼近函数的问题时, 与逼近向量时的想法一样: 设法使的 $u(x)$ 和 $f(x)$ 之间的&amp;quot;距离&amp;quot;最小.&lt;/p>
&lt;p>用数学语言就是: $\lVert u-f \rVert$ 在某种范数下最小.&lt;/p>
&lt;ul>
&lt;li>逼近向量&lt;br>
用向量內积表示&lt;/li>
&lt;/ul>
&lt;p>$$
\begin{equation}
\lVert u-f \rVert = (u-f, u-f).
\label{eq:eq1}
\end{equation}
$$&lt;/p>
&lt;ul>
&lt;li>逼近函数&lt;br>
用函数积分表示&lt;/li>
&lt;/ul>
&lt;p>$$
\begin{equation}
\lVert u-f \rVert = \int_{\Omega}(u-f)^2{\rm d}x .
\label{eq:eq2}
\end{equation}
$$&lt;/p>
&lt;p>确定&amp;quot;距离&amp;quot;这一重要概念后, 就是常规的数学操作了. $u(x)$ 可以写成基函数的线性组合,&lt;/p>
&lt;p>$$
\begin{equation}
u(x) = c_0\psi_0(x) + \cdots + c_N\psi_N(x).
\label{eq:eq3}
\end{equation}
$$&lt;/p>
&lt;p>将式 (\ref{eq:eq3}) 分别代入式 (\ref{eq:eq1})((\ref{eq:eq2})), 再分别利用分析手段(求导)和&amp;quot;正交性&amp;quot;就可以得到逼近向量(函数)的最小二乘法和伽辽金法.&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/3553cebe-720f-4b3b-beab-f698ed5c7c4a.png" title="简述有限元: 理解正交性" alt="简述有限元逼近函数理解正交性" width="350" />&lt;/p>
&lt;h3 id="小结">小结&lt;/h3>
&lt;p>结合第一期推送, 可以得到: &lt;strong>在逼近向量和逼近函数问题时, 最小二乘法和伽辽金法是等同的.&lt;/strong>&lt;/p>
&lt;h2 id="熟悉的插值法">熟悉的插值法&lt;/h2>
&lt;p>$\color{gray}{\textit{The interpolation method}}$&lt;/p>
&lt;h3 id="综述">综述&lt;/h3>
&lt;p>插值法是数值分析课中必讲的内容, 出现在最小二乘法之前的方法, 基本而且重要. 下面来回顾总结一下插值法:&lt;/p>
&lt;p>插值法的出发点与最小二乘法和伽辽金法都不同, 它要求逼近函数 $u(x)$ 在有限个点上与原函数 $f(x)$ 相同, 即&lt;/p>
&lt;p>$$
u\left(x_{i}\right)=\sum_{j \in \mathcal{I}_{s}} c_{j} \psi_{j}\left(x_{i}\right)=f\left(x_{i}\right), \quad i \in \mathcal{I}_{s}.
$$&lt;/p>
&lt;p>这样, 自然也形成了一个有 $N+1$ 个未知量 $c_j$ 的线性方程组&lt;/p>
&lt;p>\begin{equation}
\sum_{j \in \mathcal{I}_{s}} A_{i, j} c_{j}=b_{i}, \quad i \in \mathcal{I}_{s}.
\label{eq:eq4}
\end{equation}&lt;/p>
&lt;p>其中&lt;/p>
&lt;p>$$
\begin{align*}
A_{ij} &amp;amp;= \psi_j(x_i),
\\[3pt]
b_i &amp;amp;= f(x_i).
\end{align*}
$$&lt;/p>
&lt;p>与之前方法不同的是, 系数矩阵 $A$ 不再对称, 因为 $\psi_j(x_i) \neq \psi_i(x_j)$.&lt;/p>
&lt;h3 id="两个例题">两个例题&lt;/h3>
&lt;blockquote>
&lt;p>&lt;strong>例题 1:&lt;/strong>&lt;br>
来于线性代数, 平面上有 $n+1$ 个点(两两不同), 问: 是否存在一个 $n$ 次多项式函数, 过这 $n+1$ 个点? 若存在, 请给出.&lt;/p>
&lt;/blockquote>
&lt;p>解: 存在. 设 $n$ 次多项式函数为&lt;/p>
&lt;p>$$
f(x) = a_nx^n+\cdots+a_1x + a_0.
$$&lt;/p>
&lt;p>将 $n+1$ 个点的坐标 $(x_j, y_j)$ 依次代入上式, 得&lt;/p>
&lt;p>$$
\begin{cases}
a_nx_n^n+\cdots+a_1x_n + a_0 = y_n,\\[3pt]
a_nx_{n-1}^n+\cdots+a_1x_{n-1} + a_0 = y_{n-1}, \\[3pt]
\hspace{5em} \vdots \\[3pt]
a_nx_0^n+\cdots+a_1x_0 + a_0 = y_0.
\end{cases}
$$&lt;/p>
&lt;p>$$
\begin{bmatrix}
x_n^n &amp;amp; \cdots &amp;amp; x_n &amp;amp; 1\\&lt;br>
x_{n-1}^{n} &amp;amp; \cdots &amp;amp; x_{n-1} &amp;amp; 1\\&lt;br>
&amp;amp;\vdots&amp;amp;&amp;amp;\\&lt;br>
x_0^n &amp;amp; \cdots &amp;amp; x_0 &amp;amp; 1
\end{bmatrix}
\begin{bmatrix}
a_n\\ \vdots \\ a_1 \\ a_0
\end{bmatrix} =
\begin{bmatrix}
y_n\\ y_{n-1} \\ \vdots \\ y_0
\end{bmatrix}.
$$&lt;/p>
&lt;p>系数矩阵非奇异(系数矩阵是范德蒙行列式), 所以线性方程组有解. 即存在一个 $n$ 次多项式函数, 过这 $n+1$ 个点.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>例题 2&lt;/strong>&lt;br>
设函数 $f(x)=10(x-1)^2-1$, 在线性函数空间中找到最佳逼近函数 $u(x)$, 求解域 $\Omega = [1, 2]$, 两个真解点为: $x_0 = 1 + \frac{1}{3}, x_1 = 1+ \frac{2}{3}$.&lt;/p>
&lt;/blockquote>
&lt;p>解: 已知 $\psi_0 = 1, \psi_1 = x$, 因此利用式 (\ref{eq:eq4}), 得&lt;/p>
&lt;p>$$
A = \begin{bmatrix} 1 &amp;amp; \frac{4}{3}\\ 1&amp;amp; \frac{5}{3}\end{bmatrix}, \quad b = \begin{bmatrix} \frac{1}{9} \\ \frac{31}{9}\end{bmatrix}.
$$&lt;/p>
&lt;p>解得&lt;/p>
&lt;p>$$
c = \begin{bmatrix} -\frac{119}{9} \\ 10 \end{bmatrix}.
$$&lt;/p>
&lt;p>所以,&lt;/p>
&lt;p>$$
u(x) = -\frac{119}{9} + 10x.
$$&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/a6e33cb8-55bd-485a-818a-fae690ddcd86.png" title="简述有限元: 线性插值" alt="简述有限元逼近函数线性插值" width="350" />&lt;/p>
&lt;h3 id="拉格朗日多项式">拉格朗日多项式&lt;/h3>
&lt;p>$\color{gray}{\textit{Lagrange polynomials}}$&lt;/p>
&lt;p>上一次推送中, 讨论了基函数正交(傅立叶级数做基函数)的好处, 在插值法中, 拉格朗日插值多项式可以起到相同的作用&lt;/p>
&lt;p>$$
\psi_{i}(x)=\prod_{j=0, j \neq i}^{N} \frac{x-x_{j}}{x_{i}-x_{j}}=\frac{x-x_{0}}{x_{i}-x_{0}} \cdots \frac{x-x_{i-1}}{x_{i}-x_{i-1}} \frac{x-x_{i+1}}{x_{i}-x_{i+1}} \cdots \frac{x-x_{N}}{x_{i}-x_{N}}, \quad \textit{for}\ i \in, \cal{I}_s.
$$&lt;/p>
&lt;p>观察上式可知, 每一个 $\psi_i(x)$ 都是一个 $N$ 次多项式, 而且满足&lt;/p>
&lt;p>$$
\psi_{i}\left(x_{s}\right)=\delta_{i s}, \quad \delta_{i s}
=\left{\begin{array}{ll}
{1,} &amp;amp; {i=s} \\&lt;br>
{0,} &amp;amp; {i \neq s}
\end{array}\right.
$$&lt;/p>
&lt;p>其中, $x_s$ 是插值点. 由以上性质可得&lt;/p>
&lt;p>$$
A_{ij}=
\begin{cases}
0\quad \textit{for} \ i \neq j,
\\[3pt]
1\quad \textit{for} \ i = j.
\end{cases}
$$&lt;/p>
&lt;p>所以, 线性方程组求解变得相当简单&lt;/p>
&lt;p>$$
c_{i}=f\left(x_{i}\right), \quad i \in \mathcal{I}_{s}.
$$&lt;/p>
&lt;p>进一步地,&lt;/p>
&lt;p>$$
u(x)=\sum_{j \in I_{s}} f\left(x_{i}\right) \psi_{i}(x).
$$&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/a2dc4d34-a878-40ff-8bac-97ebcc531caa.png" title="简述有限元: 两个节点" alt="简述有限元逼近函数两个节点" width="75%" />&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/ae88936e-1bb5-415e-bdfd-5898c59b1739.png" title="简述有限元: 三个节点" alt="简述有限元逼近函数三个节点" width="75%" />&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/43ec6243-a2bb-404c-a438-781b9246f603.png" title="简述有限元: 四个节点" alt="简述有限元逼近函数四个节点" width="75%" />&lt;/p>
&lt;p>&lt;em>拉格朗日多项式在有限元方法中依旧很重要.&lt;/em>&lt;/p>
&lt;hr>
&lt;h2 id="编程实例">编程实例&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>利用拉格朗日多项式做基函数编程实现例题 2.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>假设 $f(x)=\sin(2\pi x), \Omega=[0, 1]$, 利用拉格朗日多项式做基函数, 分别用最小二乘法和插值法寻找最佳逼近函数 $u(x)$.&lt;br>
&lt;em>注: 可假设基函数个数为 3 个, 拉格朗日点为等距节点&lt;/em>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="下节预告">下节预告&lt;/h2>
&lt;p>开始讨论有限元 🤘&lt;/p></description><category domain="https://matnoble.me/math/">math</category><category domain="https://matnoble.me/math/fem/">fem</category><category domain="https://matnoble.me/series/fem/">简述有限元</category><category domain="https://matnoble.me/tags/%E6%9C%89%E9%99%90%E5%85%83/">有限元</category></item><item><title>逼近函数 II</title><link>https://matnoble.me/math/fem/fem3/</link><guid isPermaLink="true">https://matnoble.me/math/fem/fem3/</guid><pubDate>Thu, 26 Dec 2019 00:00:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/62f007ea-3d01-45a5-8ec7-4bfe52d009ed.jpeg" title="简述有限元: 逼近函数 II" alt="简述有限元逼近函数" />&lt;/p>
&lt;h1 id="逼近函数-ii">逼近函数 II&lt;/h1>
&lt;h2 id="程序实例i">程序实例(I)&lt;/h2>
&lt;p>&lt;a href="https://matnoble.me/posts/fem2/">逼近函数 I&lt;/a> 中介绍了逼近函数的数学推导, 这一次用程序实现它.&lt;/p>
&lt;h3 id="例题回顾">例题回顾&lt;/h3>
&lt;p>给定一个二次(抛物型)函数 $f(x) = 10(x-1)^2-1, x \in \Omega=[1, 2]$, 在线性函数空间 $V$ 中寻找最佳逼近向量 $u$&lt;/p>
&lt;p>$$
V={\rm span}{1, x}.
$$&lt;/p>
&lt;p>$\bf 解:$ 设 $\psi_0 = 1, \psi_1 = x$, 则&lt;/p>
&lt;p>$$
u = c_0\psi_0(x) + c_1\psi_1(x) = c_0 + c_1x.
$$&lt;/p>
&lt;p>所以系数矩阵&lt;/p>
&lt;p>$$
\begin{align*}
&amp;amp; A_{11} = (\psi_0, \psi_0) = \int_1^2 1\cdot1{\rm d}x = 1,\\&lt;br>
&amp;amp; A_{12} = (\psi_1, \psi_0) = \int_1^2 x \cdot 1 {\rm d}x = \frac{3}{2},\\&lt;br>
&amp;amp; A_{21} = A_{12} = \frac{3}{2},\\&lt;br>
&amp;amp; A_{22} = (\psi_1, \psi_1) = \int_1^2 x \cdot x {\rm d}x = \frac{7}{3}.
\end{align*}
$$&lt;/p>
&lt;p>所有系数矩阵是&lt;/p>
&lt;p>$$A = \begin{bmatrix} 1 &amp;amp; \frac{3}{2} \\ \frac{3}{2} &amp;amp; \frac{7}{3} \end{bmatrix}$$&lt;/p>
&lt;p>右端项为:&lt;/p>
&lt;p>$$
\begin{align*}
&amp;amp; b_{1} = (\psi_0, f) = \int_1^2 1\cdot (10(x-1)^2-1){\rm d}x = \frac{7}{3},\\&lt;br>
&amp;amp; b_{2} = (\psi_1, f) = \int_1^2 x \cdot (10(x-1)^2-1) {\rm d}x =\frac{13}{3}.
\end{align*}
$$&lt;/p>
&lt;p>所以 $b = [\frac{7}{3}, \frac{13}{3}]^{\sf T}$, 解线性方程组就可以得到&lt;/p>
&lt;p>$$
c = \begin{bmatrix} −38/3 \\ 10\end{bmatrix}.
$$&lt;/p>
&lt;p>因此&lt;/p>
&lt;p>$$
u = 10x-38/3.
$$&lt;/p>
&lt;h3 id="程序实现">程序实现&lt;/h3>
&lt;ul>
&lt;li>主函数&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-matlab" data-lang="matlab">&lt;span class="n">close&lt;/span> &lt;span class="n">all&lt;/span>
&lt;span class="n">clear&lt;/span>
&lt;span class="n">clc&lt;/span>
&lt;span class="n">format&lt;/span> &lt;span class="nb">rat&lt;/span> &lt;span class="c">% 以分式显示结果&lt;/span>
&lt;span class="c">% 基本变量&lt;/span>
&lt;span class="n">xx&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="n">syms&lt;/span> &lt;span class="n">x&lt;/span>
&lt;span class="n">f&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>^&lt;span class="mi">2&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">F&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">inline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vectorize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s">&amp;#39;x&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c">% 符号向量化&lt;/span>
&lt;span class="c">% 基函数&lt;/span>
&lt;span class="n">N&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="nb">i&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">N&lt;/span>
&lt;span class="n">V&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">x&lt;/span>^&lt;span class="p">(&lt;/span>&lt;span class="nb">i&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="c">% 组装系数矩阵&lt;/span>
&lt;span class="n">A&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">assemble_stiffness_matrix&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">V&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">xx&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c">% 载入右端向量&lt;/span>
&lt;span class="n">b&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">assemble_load_vector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">V&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">xx&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c">% 线性方程组求解&lt;/span>
&lt;span class="n">c&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">A&lt;/span>&lt;span class="o">\&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">u&lt;/span> &lt;span class="p">=&lt;/span>&lt;span class="n">V&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c">% 可视化&lt;/span>
&lt;span class="n">X&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">xx&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="mf">0.01&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">xx&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">U&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">inline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vectorize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">u&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s">&amp;#39;x&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">Plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">F&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">U&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c">% 结果展示&lt;/span>
&lt;span class="n">result&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">u&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/a117f302-1844-4333-a1bf-5f911d308265.png" title="V = {1, x}" alt="简述有限元逼近函数" width="400" />&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/b9dc311d-dce7-4ea4-aff4-99fc163a4fcb.png" title="V = {1, x}" alt="简述有限元逼近函数" width=60% />&lt;/p>
&lt;p>程序计算结果与手算的是一样的.&lt;/p>
&lt;p>当 $V = {\rm span}\\{1, x, x^2 \\}$ 时, 逼近解等于真解, 如下图所示&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/bf3d7a3a-6520-4fd7-9a43-af6b2496bf6b.png" title="V = {1, x}" alt="简述有限元逼近函数" width="400" />&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/32287d90-4eed-46e6-8a00-366df9ab381c.png" title="V = {1, x}" alt="简述有限元逼近函数" width="400" />&lt;/p>
&lt;p>本程序其他函数可点击原文链接下载, GitHub.&lt;/p>
&lt;hr>
&lt;h2 id="选取更好的基函数">选取更好的基函数&lt;/h2>
&lt;p>上一节的基函数空间为 $V ={\rm span} \{ x^j\} , j\in {\mathcal{I}}_s,, {\mathcal{I}}_s=\{0, 1, \dots, N \}$, 在上一节的例子中, 函数逼近的很好, 在用此基函数逼近多项式时, 理论上可以得到原多项式. ..但是.., 当 $N$ 过大时, 形成的系数矩阵 $A$ 是奇异的, 是病态的, 即线性方程组系统不可解.&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/e68d6b8b-32c7-419a-8880-a6b4d91b2b54.png" title="病态缘由" alt="简述有限元逼近函数 病态缘由" width=65% />&lt;/p>
&lt;p>选择..正交..(或者几乎正交)的基函数是数值计算中经常使用的, 其原因是可以使得 $A_{ij}=0, i\neq j$, 从而矩阵几乎是对角化的.&lt;/p>
&lt;h3 id="傅立叶级数">傅立叶级数&lt;/h3>
&lt;p>$\color{gray}{\textit{Fourier series}}$&lt;/p>
&lt;p>令&lt;/p>
&lt;p>$$
V={\rm span} { \sin(\pi x), \sin(2\pi x), \dots, \sin(N+1)\pi x }.
$$&lt;/p>
&lt;p>那么基函数为&lt;/p>
&lt;p>$$
\psi_i(x) = \sin(i+1)\pi x, \quad i \in \cal{I}_s.
$$&lt;/p>
&lt;p>将基函数带入上文的主程序中, 得到 N=3 和 N=11 时的拟合图&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/f1b331ac-c10b-4bb0-a040-91e332231194.png" alt="N=3">&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/47c04632-098b-4b3a-b924-e007e04ca50e.png" alt="N=11">&lt;/p>
&lt;p>以上结果似乎拟合得很好, ..但是..可以发现, 无论当 $N$ 如何增大, 始终得到 $u(0)=u(1)=1$. 肯定是哪里出错了:&lt;/p>
&lt;p>$$
u(x) = \sum_{j\in \mathcal{I}_s} c_j \sin(j+1)\pi x.
$$&lt;/p>
&lt;p>上式显示: $u(0) = u(1) \equiv 0$. 因此需要修正算法:&lt;/p>
&lt;p>令 $u(0)=f(0), u(1)=f(1)$, 以加入边界信息, 再加上 $u(x) = \sum_{j\in \mathcal{I}_s} c_j \psi_j (x)$, 可设&lt;/p>
&lt;p>$$
\tilde{u}(x) = (1-x)f(0) + xf(1) + \sum_{j\in \mathcal{I}_s} c_j \psi_j (x).
$$&lt;/p>
&lt;p>设 $B(x) = (1-x)f(0) + xf(1)$, 此时的线性方程组系统为&lt;/p>
&lt;p>$$
\sum_{j\in \mathcal{I}_s} (\psi_j, \psi_i)c_j = (f-B, \psi_i), \quad i \in \mathcal{I}_s.
$$&lt;/p>
&lt;p>针对该基函数修正后的主函数为&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-matlab" data-lang="matlab">&lt;span class="n">close&lt;/span> &lt;span class="n">all&lt;/span>
&lt;span class="n">clear&lt;/span>
&lt;span class="n">clc&lt;/span>
&lt;span class="n">format&lt;/span> &lt;span class="nb">rat&lt;/span> &lt;span class="c">% 以分式显示结果&lt;/span>
&lt;span class="c">% format long&lt;/span>
&lt;span class="c">% 基本变量&lt;/span>
&lt;span class="n">xx&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="n">syms&lt;/span> &lt;span class="n">x&lt;/span>
&lt;span class="n">f&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>^&lt;span class="mi">5&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">F&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">inline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vectorize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s">&amp;#39;x&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">f_0&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">F&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">xx&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">f_N&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">F&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">xx&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">n&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="nb">i&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">n&lt;/span>
&lt;span class="n">V&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">sin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">i&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nb">pi&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">end&lt;/span>
&lt;span class="n">B&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">f_0&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">xx&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">end&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">f_N&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">xx&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="c">% 组装系数矩阵&lt;/span>
&lt;span class="n">A&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">assemble_stiffness_matrix&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">V&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">xx&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c">% 载入右端向量&lt;/span>
&lt;span class="n">b&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">assemble_load_vector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">V&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">xx&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c">% 线性方程组求解&lt;/span>
&lt;span class="n">c&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">A&lt;/span>&lt;span class="o">\&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">u&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">B&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">V&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c">% 可视化&lt;/span>
&lt;span class="n">X&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">xx&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="mf">0.01&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">xx&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">U&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">inline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vectorize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">u&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s">&amp;#39;x&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">Plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">F&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">U&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c">% 结果展示&lt;/span>
&lt;span class="n">result&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">u&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如下图所示, 使用修正后的算法, N=3 时, 已经可以逼近的很好了.&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/e6828cb5-eba4-47ec-9f21-cc8f3f0ef019.png" alt="N=3">&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/c4b1dfac-2b1a-411f-a739-0129659489e7.png" alt="结果展示 N=3">
计算结果展示: 矩阵 $A = \frac{1}{2}I$, 这是巧合吗? 不是的! 因为在区间 $[0, 1]$ 上&lt;/p>
&lt;p>$$
\int_0^1 \sin^2(j\pi x) {\rm d} x = \frac{1}{2}.
$$&lt;/p>
&lt;p>所以&lt;/p>
&lt;p>$$
c=A^{-1}b = \frac{b}{2}.
$$&lt;/p>
&lt;p>即&lt;/p>
&lt;p>$$
c_i = \frac{(f-B, \psi_i)}{2}.
$$&lt;/p>
&lt;p>这样程序就更简单了.&lt;/p>
&lt;h2 id="程序实例ii">程序实例(II)&lt;/h2>
&lt;p>通过正弦函数逼近 $f(x) = \tanh(s(x-\pi)), s=20$, 即在空间 $V={\rm span}\{\sin(2i+1)x\}\ , i\in [0, 1, \dots, N]$ 中找到 $u(x)$ 最佳逼近于 $f(x)$.&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/6686289b-3010-426d-9431-00948025bff0.png" alt="N=1">&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/a1b9b8b2-f9c7-4ac1-82c7-80f3ba2f2721.png" alt="N=3">&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/c94c8996-52ec-4a21-9c61-0f5978e7cd79.png" alt="N=7">&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/de762744-f909-4cf5-bd16-551a08d84924.png" alt="N=15">&lt;/p>
&lt;p>程序参考之前小节. 该现象称为&lt;a href="https://en.wikipedia.org/wiki/Gibbs_phenomenon" title="吉布斯现象">吉布斯现象&lt;/a>.&lt;/p>
&lt;hr>
&lt;h2 id="下节预告">下节预告&lt;/h2>
&lt;p>讨论逼近函数的最后一种方法 -- 插值法 🤘&lt;/p></description><category domain="https://matnoble.me/math/">math</category><category domain="https://matnoble.me/math/fem/">fem</category><category domain="https://matnoble.me/series/fem/">简述有限元</category><category domain="https://matnoble.me/tags/%E6%9C%89%E9%99%90%E5%85%83/">有限元</category></item><item><title>逼近函数 I</title><link>https://matnoble.me/math/fem/fem2/</link><guid isPermaLink="true">https://matnoble.me/math/fem/fem2/</guid><pubDate>Tue, 24 Dec 2019 00:00:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/2183d598-1f26-450f-b94d-daabdfab77d6.jpg" title="简述有限元: 逼近函数 I" alt="简述有限元逼近函数" />&lt;/p>
&lt;h1 id="逼近函数-i">逼近函数 I&lt;/h1>
&lt;h2 id="前情回顾">前情回顾&lt;/h2>
&lt;p>第一期讨论了逼近向量, 利用 &lt;code>最小二乘法&lt;/code> 和 &lt;code>伽辽金法&lt;/code> 推到出相同的结果. 理解..正交性..是上一期最重要的目的.&lt;/p>
&lt;p>$$
(u-f, v) = (e, v)=0, \quad \forall, v \in V.
$$&lt;/p>
&lt;h3 id="补充一道-3-维例题">补充一道 3 维例题&lt;/h3>
&lt;p>为方便计算, 假设 $A$ 为坐标原点, $\overrightarrow{AB}=[1, 3, 0]^{\rm T}$, $\overrightarrow{AC}=[4, 0, 0]^{\rm T}$, $\overrightarrow{AF}=[5, 6, 5]^{\rm T}$, 在由向量 $\overrightarrow{AB}, \overrightarrow{AC}$ 确定的平面内寻找向量 $u$, 使其最佳逼近于 $\overrightarrow{AF}$.&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/1ffd7797-070a-47d0-bc4b-6716b4267208.png" title="二维空间逼近三维空间向量" width="400" alt="二维空间逼近三维空间向量" />&lt;/p>
&lt;p>&lt;strong>记:&lt;/strong>&lt;/p>
&lt;p>$$
\left\{
\begin{aligned}
\psi_1 = \overrightarrow{AB}, \\[3pt]
\psi_2 = \overrightarrow{AC}, \\[3pt]
f = \overrightarrow{AF}.
\end{aligned}
\right.
$$&lt;/p>
&lt;p>以及 $$u=c_1\psi_1 + c_2\psi_2.$$&lt;/p>
&lt;ul>
&lt;li>$\color{red}{\bf 最小二乘法}$&lt;/li>
&lt;/ul>
&lt;p>$$
\begin{cases}
A_{11} = (\psi_1, \psi_1) = 10,
\\[3pt]
A_{12} = (\psi_2, \psi_1) = 4,
\\[3pt]
A_{21} = A_{12} = 4,
\\[3pt]
A_{22} = (\psi_2, \psi_2) = 16.
\end{cases}
$$&lt;/p>
&lt;p>所以矩阵&lt;/p>
&lt;p>$$A=\begin{bmatrix} 10 &amp;amp; 4 \\ 4 &amp;amp; 16 \end{bmatrix}.$$&lt;/p>
&lt;p>$$
\begin{cases}
b_{1} = (\psi_1, f) = 23,
\\&lt;br>
b_{2} = (\psi_2, f) = 20.
\end{cases}
$$&lt;/p>
&lt;p>所以&lt;/p>
&lt;p>$$b=\begin{bmatrix} 23 \\ 20 \end{bmatrix}$$&lt;/p>
&lt;p>解&lt;/p>
&lt;p>$$A\begin{bmatrix} c_1 \\ c_2 \end{bmatrix}=b$$ 得&lt;/p>
&lt;p>$$
\begin{bmatrix} c_1 \\ c_2 \end{bmatrix}=\begin{bmatrix} 2 \\ 3/4 \end{bmatrix}.
$$&lt;/p>
&lt;p>最后,&lt;/p>
&lt;p>$$u=c_1\psi_1 + c_2\psi_2 = [5 , 6 , 0 ]^{\mathsf T}.$$&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/3553cebe-720f-4b3b-beab-f698ed5c7c4a.png" title="二维空间最佳逼近三维空间向量" width="400" alt="二维空间最佳逼近三维空间向量" />&lt;/p>
&lt;p>&lt;em>也许聪明的同学已经看出, 哪儿用这么麻烦, $u$ 的横纵坐标不就是 $f$ 的横纵坐标嘛, $z$ 取 $0$ 就好了. 的确是这样, 没有错. 这个例子, 用上面的做法的确是大材小用了, 但上面的算法过程具有..一般性.., 更复杂的情况, 乃至高维问题, 都是适用的.&lt;/em>&lt;/p>
&lt;ul>
&lt;li>&lt;b style="color:red">伽辽金法&lt;/b>&lt;/li>
&lt;/ul>
&lt;p>从 &lt;code>正交性&lt;/code> 出发, 推导出与上面相同的矩阵.&lt;/p>
&lt;ul>
&lt;li>&lt;b style="color:red">基于线性方程组求解&lt;/b>&lt;/li>
&lt;/ul>
&lt;p>设线性方程组如下&lt;/p>
&lt;p>\begin{equation}
\begin{bmatrix}
\psi_1 &amp;amp; \psi_2
\end{bmatrix}
\begin{bmatrix}
c_1 \\ c_2
\end{bmatrix} =
f.
\label{eq:eq1}
\end{equation}&lt;/p>
&lt;p>即&lt;/p>
&lt;p>$$
\begin{bmatrix}
1&amp;amp;4\\3&amp;amp;0\\0&amp;amp;0
\end{bmatrix}
\begin{bmatrix}
c_1 \\ c_2
\end{bmatrix} =
\begin{bmatrix}
5 \\ 6 \\ 5
\end{bmatrix}.
$$&lt;/p>
&lt;p>上式显然无解, 式 (1) 左右同乘&lt;/p>
&lt;p>$$\begin{bmatrix}
\psi_1^{\rm T} \\ \psi_2^{\rm T}
\end{bmatrix}$$&lt;/p>
&lt;p>得&lt;/p>
&lt;p>\begin{equation}
\begin{bmatrix}
\psi_1^{\rm T}\psi_1 &amp;amp; \psi_1^{\rm T}\psi_2 \\&lt;br>
\psi_2^{\rm T}\psi_1 &amp;amp; \psi_2^{\rm T}\psi_2
\end{bmatrix}
\begin{bmatrix}
c_1 \\ c_2
\end{bmatrix} =
\begin{bmatrix}
\psi_1^{\rm T}f \\ \psi_2^{\rm T}f
\end{bmatrix}.
\label{eq:eq2}
\end{equation}&lt;/p>
&lt;p>即&lt;/p>
&lt;p>$$
\begin{bmatrix}
1&amp;amp;3 &amp;amp; 0\\&lt;br>
4&amp;amp;0&amp;amp;0
\end{bmatrix}
\begin{bmatrix}
1&amp;amp;4\\&lt;br>
3&amp;amp;0\\&lt;br>
0&amp;amp;0
\end{bmatrix}
\begin{bmatrix}
c_1 \\ c_2
\end{bmatrix} =
\begin{bmatrix}
1&amp;amp;3 &amp;amp; 0\\&lt;br>
4&amp;amp;0&amp;amp;0
\end{bmatrix}
\begin{bmatrix}
5 \\ 6 \\ 5
\end{bmatrix}.
$$&lt;/p>
&lt;p>进一步,&lt;/p>
&lt;p>$$
\begin{bmatrix} 10 &amp;amp; 4 \\ 4 &amp;amp; 16 \end{bmatrix}\begin{bmatrix}
c_1 \\ c_2
\end{bmatrix} =
\begin{bmatrix} 23 \\ 20 \end{bmatrix}.
$$&lt;/p>
&lt;p>得到与之前一样的结果. 该解在线性代数上称为&lt;code>最小二乘解&lt;/code>.&lt;/p>
&lt;h3 id="复盘逼近向量">&amp;quot;复盘&amp;quot;逼近向量&lt;/h3>
&lt;p>想一想, 上一次的讨论中, 对于任意给定的向量 $f$, 如何在向量空间 $V$ 中确定最佳逼近向量 $u$ ?&lt;/p>
&lt;p>&lt;em>&lt;strong>令 $d = \lVert e\rVert=\lVert { u}-{f}\rVert$ 取最小的 ${ u}$ 即为所求.&lt;/strong>&lt;/em>&lt;/p>
&lt;p>其中, 首要工作是用 ..向量二范数.. 来规定&lt;code>..距离..&lt;/code>. $n$ 维向量 ${ a}$ 的二范数定义为:&lt;/p>
&lt;p>$$
\lVert {\mit a} \rVert_2 = \sqrt{a_1^2+a_2^2 + \cdots+a_n^2}.
$$&lt;/p>
&lt;p>其次, 空间 $\mit V$ 中任意向量 $u$ 用其一组基的线性组合表示:&lt;/p>
&lt;p>$$
u = \sum_{j=0}^N c_j\psi_j, \quad \forall , u \in V.
$$&lt;/p>
&lt;p>&lt;code>..最小二乘法..&lt;/code> 通过建立范数平方函数 $E(c_0, \cdots, c_N)$, 使用&lt;code>分析手段(求导)&lt;/code>, 确定基的系数 $c_j, j=0, 1, \dots, N$, 从而确定最佳逼近向量.&lt;/p>
&lt;p>$$
\begin{align*}
E(c_0, \cdots, c_N) = (e, e) &amp;amp;= ( \sum_{j=0}^N c_j\psi_j-f , \sum_{j=0}^N c_j\psi_j-f) \\&lt;br>
&amp;amp; = \sum_{p=0}^N \sum_{q=0}^N c_p c_q \psi_p \psi_q -2\sum_{j=0}^N c_j(\psi_j, f) + (f, f).
\end{align*}
$$&lt;/p>
&lt;p>而 &lt;code>..伽辽金法..&lt;/code> 从..正交性..出发&lt;/p>
&lt;p>$$
(e, \sum_{j=0}^N c_j\psi_j) = 0.
$$&lt;/p>
&lt;p>经变换, 得到&lt;/p>
&lt;p>$$
(e, \psi_j) = 0, \quad j=0, 1, \dots, N.
$$&lt;/p>
&lt;p>二者的共同点是: &lt;strong>最终都会归结到解一个线性方程组, 来确定基的系数&lt;/strong>.&lt;/p>
&lt;p>$$
\begin{align*}
[A_{ij}] &amp;amp;= (\psi_j, \psi_i),
\\[3pt]
[b_i] &amp;amp;= (\psi_i, f).
\end{align*}
$$&lt;/p>
&lt;p>其中, 矩阵 $A$ 对称, 主元恒正.&lt;/p>
&lt;p>&lt;i>&lt;b style="color:gray">若复盘不成功, 建议看一下前一章&lt;/b>&lt;/i>&lt;/p>
&lt;hr>
&lt;h2 id="逼近函数">逼近函数&lt;/h2>
&lt;p>&lt;i>&lt;b style="color:gray">Approximation of functions&lt;/b>&lt;/i>&lt;/p>
&lt;p>熟悉上面逼近向量的部分, 逼近函数就会简单很多了.&lt;/p>
&lt;p>假设函数空间 $V$ 由一组基 $\psi_0, \psi_1, \cdots, \psi_N$ 张成的&lt;/p>
&lt;p>$$
V=\rm span \{\psi_0, \psi_1, \cdots, \psi_N \}.
$$&lt;/p>
&lt;p>对于任意 $u \in V$ 可表示成这组基的线性组合&lt;/p>
&lt;p>$$
u = \sum_{j \in {\cal{I}}_s} c_j \psi_j.
$$&lt;/p>
&lt;p>指标集 ${\mathcal{I}}_s$ 定义为 ${\mathcal{I}}_s = \\{0, 1, \cdots , N\\}$.&lt;/p>
&lt;p>下面首先讨论单变量函数, 之后在讨论多变量的情况.&lt;/p>
&lt;h3 id="最小二乘法">最小二乘法&lt;/h3>
&lt;p>&lt;i>&lt;b style="color:gray">The least squares method&lt;/b>&lt;/i>&lt;/p>
&lt;p>给定一个函数 $f(x)$, 如何在函数空间 $V$ 中找到它的最佳逼近函数 $u$ ? 参考逼近向量时的方案, 是否可以选择使得(距离) $\lVert e \rVert = \lVert u-f \rVert$ 最小的 $u$ 呢 ? 但是, 向量是有限维的, 而函数是无限维的, 所以, 首要任务还是需要定义任意两个函数间的&amp;quot;距离&amp;quot;.&lt;/p>
&lt;p>接下来通过用积分定义的內积来诱导此范数&lt;/p>
&lt;p>&lt;i> &lt;b style="color:gray">积分使无线维转化为有限维&lt;/b> &lt;/i>&lt;/p>
&lt;p>$$
(f, g) = \int_\Omega f(x)g(x) {\rm d} x.
$$&lt;/p>
&lt;p>所以&lt;/p>
&lt;p>$$
\lVert e \rVert^2 = (e, e)=\int_\Omega e^2(x) {\rm d} x.
$$&lt;/p>
&lt;p>接下来就是熟悉的部分了, 定义距离范数的平方&lt;/p>
&lt;p>$$
E = \lVert e \rVert =(\sum_{j \in {\cal{I}}_s} c_j \psi_{j(x)}-f(x), \sum_{j \in {\cal{I}}_s} c_j \psi_j(x)-f(x)).
$$&lt;/p>
&lt;p>$E$ 是关于 ${c_j}_{j \in {\mathcal{I}_s} }$ 的函数, 进一步化简&lt;/p>
&lt;p>$$
\begin{align*}
E(c_0, \cdots, c_N) &amp;amp; = (\sum_{j \in {\cal{I}}_s} c_j \psi_{j(x)}-f(x), \sum_{j \in {\cal{I}}_s} c_j \psi_j(x)-f(x))\\[3pt]
&amp;amp; = \sum_{p \in {\cal{I}}_s} \sum_{q \in {\cal{I}}_s} c_p c_q\psi_p(x)\psi_{q(x)} - 2\sum_{j \in {\cal{I}}_s} c_j (\psi_j(x), f) + (f(x), f(x)).
\end{align*}
$$&lt;/p>
&lt;p>做跟上一节同样的求导运算, 就可以得到如下线性方程组系统&lt;/p>
&lt;p>$$
\begin{align}
[A_{ij}]&amp;amp;=(\psi_j, \psi_i),
\label{eq:eq3}
\\[3pt]
[b_i] &amp;amp;= (\psi_i, f).
\label{eq:eq4}
\end{align}
$$&lt;/p>
&lt;h3 id="伽辽金方法">伽辽金方法&lt;/h3>
&lt;p>&lt;i> &lt;b style="color:gray">The Galerkin method&lt;/b> &lt;/i>&lt;/p>
&lt;p>伽辽金方法依旧从 &lt;b style="color:red">正交性&lt;/b> 出发&lt;/p>
&lt;p>\begin{equation}
(e, v) = 0, \quad \forall\ v \in V.
\label{eq:eq5}
\end{equation}&lt;/p>
&lt;p>将 $v=\sum_{i \in \mathcal{I}_s} c_i\psi_i(x)$ 带入上式 (\ref{eq:eq5}), 可化简为&lt;/p>
&lt;p>$$
(e, \psi_i) = 0, \quad i \in \mathcal{I}_s.
$$&lt;/p>
&lt;p>将 $e$ 还原为 $ \sum_{j \in \mathcal{I}_s} c_j\psi_j(x) - f(x)$ 即可以得到线性方程组系统式 (\ref{eq:eq3}) 和式 (\ref{eq:eq4}).&lt;/p>
&lt;h3 id="例题-1">例题 1&lt;/h3>
&lt;p>给定一个二次(抛物型)函数 $f(x) = 10(x-1)^2-1, x \in \Omega=[1,2]$, 在线性函数空间 $V$ 中寻找最佳逼近向量 $u$&lt;/p>
&lt;p>$$
V={\rm span}\{1, x\}.
$$&lt;/p>
&lt;p>&lt;b>解:&lt;/b> 设 $\psi_0 = 1, \psi_1 = x$, 则&lt;/p>
&lt;p>$$
u = c_0\psi_0(x) + c_1\psi_1(x) = c_0 + c_1x.
$$&lt;/p>
&lt;p>所以系数矩阵&lt;/p>
&lt;p>$$
\begin{align*}
&amp;amp; A_{11} = (\psi_0, \psi_0) = \int_1^2 1\cdot1{\rm d}x = 1,\\[3pt]
&amp;amp; A_{12} = (\psi_1, \psi_0) = \int_1^2 x \cdot 1 {\rm d}x = \frac{3}{2},\\[3pt]
&amp;amp; A_{21} = A_{12} = \frac{3}{2},\\[3pt]
&amp;amp; A_{22} = (\psi_1, \psi_1) = \int_1^2 x \cdot x {\rm d}x = \frac{7}{3}.
\end{align*}
$$&lt;/p>
&lt;p>所有系数矩阵是&lt;/p>
&lt;p>$$
A = \begin{bmatrix} 1 &amp;amp; \frac{3}{2} \\ \frac{3}{2} &amp;amp; \frac{7}{3} \end{bmatrix}
$$&lt;/p>
&lt;p>右端项为:&lt;/p>
&lt;p>$$
\begin{align*}
&amp;amp; b_{1} = (\psi_0, f) = \int_1^2 1\cdot (10(x-1)^2-1){\rm d}x = \frac{7}{3},\\[3pt]
&amp;amp; b_{2} = (\psi_1, f) = \int_1^2 x \cdot (10(x-1)^2-1) {\rm d}x = \frac{13}{3}.
\end{align*}
$$&lt;/p>
&lt;p>所以 $b = [\frac{7}{3}, \frac{13}{3}]^{\mathsf T}$, 解线性方程组就可以得到&lt;/p>
&lt;p>$$
c = \begin{bmatrix} −38/3 \\ 10\end{bmatrix}.
$$&lt;/p>
&lt;p>因此&lt;/p>
&lt;p>$$
u = 10x-\frac{38}{3}.
$$&lt;/p>
&lt;hr>
&lt;h2 id="编程题目">编程题目&lt;/h2>
&lt;p>本小节是一个小作业 ✍&lt;/p>
&lt;p>根据上述最小二乘法, 编程实现例题 1, 要求程序有一定的通用性.&lt;/p>
&lt;h2 id="下节预告">下节预告&lt;/h2>
&lt;p>下次主要介绍程序以及一些扩展 🤘&lt;/p></description><category domain="https://matnoble.me/math/">math</category><category domain="https://matnoble.me/math/fem/">fem</category><category domain="https://matnoble.me/series/fem/">简述有限元</category><category domain="https://matnoble.me/tags/%E6%9C%89%E9%99%90%E5%85%83/">有限元</category></item><item><title>逼近向量</title><link>https://matnoble.me/math/fem/fem1/</link><guid isPermaLink="true">https://matnoble.me/math/fem/fem1/</guid><pubDate>Thu, 12 Dec 2019 00:00:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/22c24e18-7683-4db2-9362-d4419452a8b3.png" title="简述有限元" alt="简述有限元逼近向量" />&lt;/p>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Finite_element_method" title="有限元">有限元&lt;/a> &lt;strong>博大精深&lt;/strong>, 开设本专题意在督促自己学习, 只能讲述一些最简单的有限元知识. 本主题将注重&lt;strong>数学推导&lt;/strong>和有关&lt;strong>程序实现&lt;/strong>(Matlab 为主, Python 为辅), 配以适当图示, 尽量做到&lt;strong>不晦涩&lt;/strong>, 强调&lt;strong>趣味性&lt;/strong>和&lt;strong>易读性&lt;/strong>.&lt;/p>
&lt;p>有限元主要用来解(偏)微分方程, 但实际某些思想在逼近向量或者函数时, 就存在了, 比如本节介绍的&lt;strong>正交性&lt;/strong>．&lt;/p>
&lt;h2 id="逼近向量">逼近向量&lt;/h2>
&lt;p>&lt;em>关键词: 正交性&lt;/em>&lt;/p>
&lt;h3 id="逼近二维向量">逼近二维向量&lt;/h3>
&lt;p>&lt;em>Approximation of planar vectors&lt;/em>&lt;/p>
&lt;p>假设 $xy$ 平面有向量 $f=[3, 5]$, 在向量 $[2, 1]$ 方向上, 寻找向量 $u$ 逼近 $f$&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/0582a191-4a39-47a2-a387-2c6954e94614.png" title="一维向量最佳逼近二维向量" width="400" alt="一维向量最佳逼近二维向量" />&lt;/p>
&lt;p>令 $\psi_0=[2, 1]$, 则有 $xy$ 平面的子空间&lt;/p>
&lt;p>$$V={\rm span} \{\psi_0 \}.$$&lt;/p>
&lt;p>使得 $u = c_0 \psi_0 \in V$, 并且 $\psi_0$ 为 $V$ 的基.&lt;/p>
&lt;p>令 $e=u-f$, 并且定义范数&lt;/p>
&lt;p>$$\lVert e \rVert = (e, e)^{\frac{1}{2}}.$$&lt;/p>
&lt;p>则原问题转化为: 寻找 $c_0$, 使得 $\lVert e \rVert$ 最小.&lt;/p>
&lt;p>&lt;em>这里实际上指定在向量二范数下的逼近&lt;/em>&lt;/p>
&lt;h4 id="最小二乘法">最小二乘法&lt;/h4>
&lt;p>&lt;em>The least squares method&lt;/em>&lt;/p>
&lt;p>定义函数&lt;/p>
&lt;p>$$
\begin{align*}
E(c_0) &amp;amp;= (e, e) = (c_0\psi_0-f, c_0\psi_0-f)
\\[3pt]
&amp;amp;= c_0^2(\psi_0, \psi_0) - 2c_0(\psi_0, f) + (f, f).
\end{align*}
$$&lt;/p>
&lt;p>当 $\frac{\partial E }{\partial c_0} = 0$ 时, $E$ 取极值, 即&lt;/p>
&lt;p>\begin{equation}
\frac{\partial E}{\partial c_0} = 2c_0(\psi_0, \psi_0)-2(\psi_0, f)=0.
\label{eq:eq1}
\end{equation}&lt;/p>
&lt;p>所以,
$$c_0=\frac{(\psi_0, f)}{(\psi_0, \psi_0)}.$$
改写式 (\ref{eq:eq1}), 得到,&lt;/p>
&lt;p>$$
(f-c_0\psi_0, \psi_0)=(f-u,\psi_0)=0.
$$&lt;/p>
&lt;p>即所谓的 &lt;strong>&lt;em>正交性&lt;/em>&lt;/strong>&lt;/p>
&lt;p>$$
(e, \psi_0)=0.
$$&lt;/p>
&lt;h4 id="伽辽金方法">伽辽金方法&lt;/h4>
&lt;p>&lt;em>Galerkin method&lt;/em>&lt;/p>
&lt;p>几何上看, 从第一张图中, 很容易得到: 当向量 $e$ 垂直于 $V$ 中任意向量时, $e$ 的二范数最小, 用数学语言描述如下:&lt;/p>
&lt;p>对任意 $v=s, \psi_0\in V$, 满足&lt;/p>
&lt;p>$$
\begin{align*}
(e, s\psi_0) &amp;amp;=(c_0\psi_0-v, s\psi_0) \\[3pt]
&amp;amp;= c_0s(\psi_0, \psi_0)-s(v, \psi_0) \\[3pt]
&amp;amp;= s\frac{(v, \psi_0)}{(\psi_0, \psi_0)}(\psi_0, \psi_0)-s(v,\psi_0)\\[3pt]
&amp;amp;=0
\end{align*}
$$&lt;/p>
&lt;p>更进一步地&lt;/p>
&lt;p>\begin{equation}
(e, v) = 0,\quad \forall v \in V.
\label{eq:eq2}
\end{equation}&lt;/p>
&lt;p>式 (\ref{eq:eq1}) 和式 (\ref{eq:eq2}) 本质上是一样的.&lt;/p>
&lt;h4 id="补充">补充&lt;/h4>
&lt;p>从线性代数的角度看, 是这样的 $\psi_0=[2, 1], f=[3, 5]$&lt;/p>
&lt;p>$$\psi_0^{\rm T} c_0 = f^{\rm T}.$$&lt;/p>
&lt;p>上式显然无解, 所以, 左右同乘 $\psi_0$&lt;/p>
&lt;p>$$
\psi_0\psi_0^{\rm T}c_0 = \psi_0f^{\rm T}.
$$&lt;/p>
&lt;p>所以&lt;/p>
&lt;p>$$
c_0 = \frac{\psi_0f^{\rm T}}{\psi_0\psi_0^{\rm T}} =\frac{(\psi_0, f)}{(\psi_0, \psi_0)}.
$$&lt;/p>
&lt;hr>
&lt;h3 id="逼近一般向量">逼近一般向量&lt;/h3>
&lt;p>二维是容易比较直观的, 但当维数增加时, 尤其 $\dim \geq 4$, 一般人类是无法想象的 😂&lt;/p>
&lt;p>假设 $f$ 是任意 $N+1$ 维向量, 我们在空间&lt;/p>
&lt;p>$$
V = {\rm span}\{ \psi_0, \cdots, \psi_N \},
$$&lt;/p>
&lt;p>中寻找 $u$ 逼近 $f$. 假设 $\psi_0, \cdots, \psi_N$ 线性无关, 即 $V$ 的维数是 $N+1$. 那么, 对于任意 $u \in V$ 可以被写成以下线性组合&lt;/p>
&lt;p>$$
u = \sum_{j=0}^N c_j\psi_j, \quad c_j \in \mathbb{R}.
$$&lt;/p>
&lt;h4 id="最小二乘法-1">最小二乘法&lt;/h4>
&lt;p>&lt;em>The least squares method&lt;/em>&lt;/p>
&lt;p>现在确定 $u$ 的系数 $c_0, \cdots, c_N$ 使得距 $v$ 的距离(误差) $e=u-f$ 最小. 定义函数&lt;/p>
&lt;p>$$
\begin{equation}
\begin{aligned}
E(c_0, \cdots, c_N) &amp;amp;= (e, e) = ( \sum_{j=0}^N c_j\psi_j-f , \sum_{j=0}^N c_j\psi_j-f) \\&lt;br>
&amp;amp;= \sum_{p=0}^N\sum_{q=0}^N c_pc_q(\psi_p, \psi_q) - 2\sum_{j=0}^Nc_j(\psi_j, f) + (f, f).
\end{aligned}
\label{eq:eq3}
\end{equation}
$$&lt;/p>
&lt;p>当系函数满足&lt;/p>
&lt;p>\begin{equation}
\frac{\partial E}{\partial c_i} = 0, \quad i = 0,\cdots, N.
\label{eq:eq4}
\end{equation}&lt;/p>
&lt;p>&lt;strong>&lt;em>接下来是重点&lt;/em>&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>第一步&lt;/li>
&lt;/ul>
&lt;p>式 (\ref{eq:eq3}) 的第 2 项对 $c_i$ 求导&lt;/p>
&lt;p>$$
\frac{\partial}{\partial c_i}(-2\sum_{j=0}^Nc_j(\psi_j, f))=-2c(\psi_i, f)
$$&lt;/p>
&lt;ul>
&lt;li>第二步&lt;/li>
&lt;/ul>
&lt;p>式 (\ref{eq:eq3}) 的第 1 项对 $c_i$ 求导&lt;/p>
&lt;p>因为,&lt;/p>
&lt;p>$$
\frac{\partial}{\partial c_i} c_pc_q=
\begin{cases}
0, \quad &amp;amp; p \neq i \wedge q \neq i\\&lt;br>
c_q, \quad &amp;amp; p = i \wedge q \neq i\\&lt;br>
c_p, \quad &amp;amp; p \neq i \wedge q =i \\&lt;br>
2c_i, \quad &amp;amp; p=q=i.
\end{cases}
$$&lt;/p>
&lt;p>所以,&lt;/p>
&lt;p>$$
\begin{multline*}
\frac{\partial}{\partial c_i}\sum_{p=0}^N\sum_{q=0}^Nc_pc_q(\psi_p, \psi_q) =\\&lt;br>
\sum_{p=0,p\neq i}^Nc_p(\psi_p, \psi_i) + \sum_{q=0,q\neq i}^Nc_q(\psi_q, \psi_i) + 2c_i(\psi_i, \psi_i).
\end{multline*}
$$&lt;/p>
&lt;p>合并前两项至第三项, 即&lt;/p>
&lt;p>$$
\frac{\partial}{\partial c_i}\sum_{p=0}^N\sum_{q=0}^Nc_pc_q(\psi_p, \psi_q) = 2\sum_{j=0}^Nc_i(\psi_j, \psi_i).
$$&lt;/p>
&lt;p>结合 (\ref{eq:eq4}), 得到 &lt;strong>&lt;em>线性方程组&lt;/em>&lt;/strong>:&lt;/p>
&lt;p>\begin{equation}
\sum_{j_0}^NA_{i, j}c_j = b_i, \quad i = 0, \cdots, N.
\end{equation}&lt;/p>
&lt;p>其中&lt;/p>
&lt;p>$$
A_{i, j} = (\psi_j, \psi_i) = (\psi_i, \psi_j) = A_{j, i},
$$&lt;/p>
&lt;p>$$
b_i = (\psi_i, f).
$$&lt;/p>
&lt;hr>
&lt;h4 id="伽辽金方法-1">伽辽金方法&lt;/h4>
&lt;p>&lt;em>Galerkin method&lt;/em>&lt;/p>
&lt;p>令 $e=u-f$, 寻找 $u$ 对于任意的 $v = \sum_{i=0}^N c_i\psi_i \in V$, 满足&lt;/p>
&lt;p>$$
(e, \sum_{i=0}^N c_i\psi_i) = 0.
$$&lt;/p>
&lt;p>上式可写成&lt;/p>
&lt;p>$$
\sum_{i=0}^Nc_i(e, \psi_i) = 0.
$$&lt;/p>
&lt;p>上式对于任意的 $c_0, \cdots, c_N$ 都成立, 所以&lt;/p>
&lt;p>$$
(e, \psi_i) = 0, \quad i = 0, \cdots, N.
$$&lt;/p>
&lt;p>上式依旧可以形成一个如同式 (5) 的线性方程组&lt;/p>
&lt;p>对于 $i=0, \cdots, N$, 有&lt;/p>
&lt;p>$$
({\sum_{j=0}^N} c_j\psi_j - f, \psi_i) = {\sum_{j=0}^N} (\psi_j, \psi_i)c_j - (f, \psi_i) = 0.
$$&lt;/p>
&lt;p>即&lt;/p>
&lt;p>$$
\sum_{j=0}^N (\psi_j, \psi_i)c_j = (f, \psi_i), \quad i=0, \cdots, N.
$$&lt;/p>
&lt;h3 id="小结">小结&lt;/h3>
&lt;p>对于逼近向量问题, 伽辽金法(Galerkin method)和最小二乘法(The least squares method)等同.&lt;/p>
&lt;h2 id="预告">预告&lt;/h2>
&lt;p>下次讨论逼近函数问题.&lt;/p></description><category domain="https://matnoble.me/math/">math</category><category domain="https://matnoble.me/math/fem/">fem</category><category domain="https://matnoble.me/series/fem/">简述有限元</category><category domain="https://matnoble.me/tags/%E6%9C%89%E9%99%90%E5%85%83/">有限元</category><category domain="https://matnoble.me/tags/%E6%9C%80%E5%B0%8F%E4%BA%8C%E4%B9%98%E6%B3%95/">最小二乘法</category></item><item><title>Git 实用命令汇总(长期更新)</title><link>https://matnoble.me/tech/programming/git/</link><guid isPermaLink="true">https://matnoble.me/tech/programming/git/</guid><pubDate>Thu, 14 Mar 2019 00:00:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://cdn.jsdelivr.net/gh/MatNoble/Images/20210204185140.png"
title="Git &amp;amp;&amp;amp; GitHub"
alt="Git &amp;amp;&amp;amp; GitHub"
width="95%"
>
&lt;span class="caption">◎ Git &amp;amp;&amp;amp; GitHub&lt;/span>
&lt;/span>
&lt;h2 id="安装及配置">安装及配置&lt;/h2>
&lt;p>安装:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">sudo apt install git
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>配置:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git config --global user.name &lt;span class="s2">&amp;#34;Your Name&amp;#34;&lt;/span>
git config --global user.email &lt;span class="s2">&amp;#34;email@example.com&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="通过-ssh-连接-github">通过 SSH 连接 GitHub&lt;/h2>
&lt;blockquote>
&lt;p>生成新的 SSH 密钥&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>打开 Terminal，输入&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">ssh-keygen -t rsa -b &lt;span class="m">4096&lt;/span> -C &lt;span class="s2">&amp;#34;your_email@example.com&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>此处，一路回车即可&lt;/p>
&lt;ol start="2">
&lt;li>继续输入&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">cat .ssh/id_rsa.pub
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>将输出的密钥复制到 GitHub&lt;/p>
&lt;ol start="3">
&lt;li>测试&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">ssh -T git@github.com
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>出现结果后，键入 &lt;code>yes&lt;/code>，你将会看到&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&amp;gt; Hi username! You&lt;span class="err">&amp;#39;&lt;/span>ve successfully authenticated, but GitHub does not
&amp;gt; provide shell access.
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这就表明成功了 🎉&lt;/p>
&lt;h2 id="单个文件的增删改查">单个文件的“增删改查”&lt;/h2>
&lt;ul>
&lt;li>创建版本库&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git init
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>提交&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git add filename
git commit -m &lt;span class="s2">&amp;#34;description&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>显示工作树状态&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git -status
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>显示版本库和工作树之间的不同&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git diff
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="多设备间管理代码库-">多设备间管理代码库 🖖&lt;/h2>
&lt;blockquote>
&lt;p>我有两台笔记本:&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>Lenovo Y430p 作为主力机, 性能还不错, 装有 Win10 和 Ubuntu 18.04 双系统, 缺点就是太重了.&lt;/li>
&lt;li>Surface Go 作为二奶机, 性能不及主力机, 但携带方便.&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>因此, 两个设备三个系统间协作编程, Github 私有仓库(现已免费) :fa-github: 再适合不过了&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>电脑 1 初始化仓库, 初始提交
在 GitHub 中创立私有库&lt;code>Share_Code&lt;/code>, 在本地&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">% 初始化仓库
git init
% 提交到本地仓库
git add filename
git commit -m &lt;span class="s2">&amp;#34;description1&amp;#34;&lt;/span>
% 初始提交到远程仓库
git remote add origin git@github.com:MatNoble/Share_Code.git
git push -u origin master
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>3.2 电脑 2 克隆, 修改, 提交&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">% 克隆
git clone git@github.com:MatNoble/Share_Code.git
% 修改本地代码后, 修改本地仓库
git add filename
git commit -m &lt;span class="s2">&amp;#34;description2&amp;#34;&lt;/span>
% 提交到远程仓库
git push
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>3.3 电脑 1 远程同步&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">% 将远程仓库同步到本地仓库
git fetch origin master
% 合并本地代码
git merge origin/master
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr />
&lt;h2 id="在-github-上删除已提交的文件夹">在 Github 上删除已提交的文件夹&lt;/h2>
&lt;p>之前在一次项目的Github提交中不小心把一个不需要的文件夹提交了上去,而此时在写.gitignored已经为时已晚,为了解决这一问题,经查阅多方资料后得出以下解决办法:&lt;/p>
&lt;p>Github在提交了之后无法在线删除文件夹,但是在本地Git库中却可以,只要在Git库中删除了仓库对应缓存,再push到Github服务器,文件夹的删除目的就达成了,&lt;/p>
&lt;p>以下是具体操作:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git rm -r --cached 目录名
git commit -m &lt;span class="s1">&amp;#39;描述&amp;#39;&lt;/span>
git push -u origin master
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>参考：&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://help.github.com/en/github/authenticating-to-github/about-ssh">https://help.github.com/en/github/authenticating-to-github/about-ssh&lt;/a>&lt;/li>
&lt;/ol></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/programming/">programming</category><category domain="https://matnoble.me/tags/git/">Git</category></item><item><title>LaTeX 实用命令汇总(长期更新)</title><link>https://matnoble.me/tech/latex/latex/</link><guid isPermaLink="true">https://matnoble.me/tech/latex/latex/</guid><pubDate>Fri, 22 Feb 2019 19:32:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>本文是笔者在长期使用中, 遇到问题 $\to$ 解决问题 $\to$ 记录下来, 长期更新, 供我自己和大家参考！ 同时, 欢迎大家在评论区交流！
&lt;mark>可使用 Ctrl &amp;#43; F 按关键词搜索 tex 命令&lt;/mark>
&lt;/p>
&lt;span class="caption-wrapper">
&lt;img class="caption" src="https://imgkr.cn-bj.ufileos.com/3b558a96-8f4a-4a45-9980-c48489db0b24.jpg"
title="LaTex 命令图书馆"
alt="LaTex 命令图书馆"
width="95%"
>
&lt;span class="caption">◎ LaTex 命令图书馆&lt;/span>
&lt;/span>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>理工科 + 数学公式 = 请使用 &lt;a href="https://zh.wikipedia.org/wiki/LaTeX">$\LaTeX$&lt;/a>&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>$\TeX$ 系统是公认的数学公式排得最好的系统&lt;/li>
&lt;li>大部分的 $\TeX$ 系统都是免费的&lt;/li>
&lt;li>除了文学作品以外，Word 很少有能超越 $\TeX$ 的地方&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h3 id="开源项目">开源项目&lt;/h3>
&lt;p>$\LaTeX$ 模板 GitHub 地址: &lt;a href="https://github.com/MatNoble/LaTeX-Document">github.com/MatNoble/LaTeX-Document&lt;/a>&lt;/p>
&lt;div style="position: relative; width: 100%; padding-bottom: 70%; padding-top: 5px; height: 0; overflow: hidden;">
&lt;iframe src="https://matnoble.me//player.bilibili.com/player.html?aid=80723849&amp;cid=138153662&amp;page=1" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> &lt;/iframe>
&lt;/div>
&lt;hr />
&lt;h2 id="自定义字体">自定义字体&lt;/h2>
&lt;p>使用 $\LaTeX $ 排版文档时, 改变字体不像 MS office 那样简单, 需要特定的代码来实现. 下面, 给出一个自定义字体的例子:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\documentclass&lt;/span>&lt;span class="na">[16pt,a4paper]&lt;/span>&lt;span class="nb">{&lt;/span>article&lt;span class="nb">}&lt;/span>
&lt;span class="k">\usepackage&lt;/span>&lt;span class="nb">{&lt;/span>fontspec,xunicode,xltxtra&lt;span class="nb">}&lt;/span>
&lt;span class="c">%% 从这开始
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\usepackage&lt;/span>&lt;span class="nb">{&lt;/span>xeCJK&lt;span class="nb">}&lt;/span> &lt;span class="c">% 中文字体
&lt;/span>&lt;span class="c">%================================== 设置中文字体 ================================%
&lt;/span>&lt;span class="c">% 将系统字体名映射为逻辑字体名称, 主要是为了维护的方便
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\newcommand\fontnamehei&lt;/span>&lt;span class="nb">{&lt;/span>SimHei&lt;span class="nb">}&lt;/span>
&lt;span class="k">\newcommand\fontnamesong&lt;/span>&lt;span class="nb">{&lt;/span>SimSun&lt;span class="nb">}&lt;/span>
&lt;span class="k">\newcommand\fontnamekai&lt;/span>&lt;span class="nb">{&lt;/span>Kaiti&lt;span class="nb">}&lt;/span>
&lt;span class="k">\newcommand\fontnamemono&lt;/span>&lt;span class="nb">{&lt;/span>DejaVu Sans Mono&lt;span class="nb">}&lt;/span>
&lt;span class="c">% 设置文档正文字体为宋体
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\setCJKmainfont&lt;/span>&lt;span class="na">[BoldFont=\fontnamehei]&lt;/span>&lt;span class="nb">{&lt;/span>&lt;span class="k">\fontnamesong&lt;/span>&lt;span class="nb">}&lt;/span> &lt;span class="c">% 设置 CJK 主字体
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\setCJKsansfont&lt;/span>&lt;span class="na">[BoldFont=\fontnamehei]&lt;/span>&lt;span class="nb">{&lt;/span>&lt;span class="k">\fontnamekai&lt;/span>&lt;span class="nb">}&lt;/span> &lt;span class="c">% 设置 CJK 无衬线的字体
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\setmonofont&lt;/span>&lt;span class="nb">{&lt;/span>&lt;span class="k">\fontnamemono&lt;/span>&lt;span class="nb">}&lt;/span> &lt;span class="c">% 设置 CJK 的等宽字体
&lt;/span>&lt;span class="c">&lt;/span>
&lt;span class="c">%================================== 设置英文字体 ================================%
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\setmainfont&lt;/span>&lt;span class="nb">{&lt;/span>Times New Roman&lt;span class="nb">}&lt;/span> &lt;span class="c">% 西文默认衬线字体(serif)
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\setsansfont&lt;/span>&lt;span class="nb">{&lt;/span>Arial&lt;span class="nb">}&lt;/span> &lt;span class="c">% 西文默认无衬线字体(sans serif)
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\setmonofont&lt;/span>&lt;span class="nb">{&lt;/span>Courier New&lt;span class="nb">}&lt;/span> &lt;span class="c">% 西文默认的等宽字体
&lt;/span>&lt;span class="c">&lt;/span>
&lt;span class="c">%================================== 自定义字体 ================================%
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\setCJKfamilyfont&lt;/span>&lt;span class="nb">{&lt;/span>adhei&lt;span class="nb">}{&lt;/span>SourceHanSansSC-Regular&lt;span class="nb">}&lt;/span> &lt;span class="c">% 开源的思源黑体
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\newcommand&lt;/span>&lt;span class="nb">{&lt;/span>&lt;span class="k">\adheiti&lt;/span>&lt;span class="nb">}{&lt;/span>&lt;span class="k">\CJKfamily&lt;/span>&lt;span class="nb">{&lt;/span>adhei&lt;span class="nb">}}&lt;/span>
&lt;span class="c">%% 到这结束
&lt;/span>&lt;span class="c">&lt;/span>
&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>document&lt;span class="nb">}&lt;/span>
&lt;span class="k">\section&lt;/span>&lt;span class="nb">{&lt;/span>黑体&lt;span class="nb">}&lt;/span>
正文是宋体, 博客: matnoble.me
&lt;span class="k">\vskip&lt;/span> 2em
&lt;span class="nb">{&lt;/span>&lt;span class="k">\adheiti&lt;/span> 这是思源黑体&lt;span class="nb">}&lt;/span>
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>document&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr />
## 添加脚注
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="c">% 导言区
&lt;/span>&lt;span class="c">% 引入脚注的包
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\usepackage&lt;/span>&lt;span class="na">[marginal]&lt;/span>&lt;span class="nb">{&lt;/span>footmisc&lt;span class="nb">}&lt;/span>
&lt;span class="k">\renewcommand&lt;/span>&lt;span class="nb">{&lt;/span>&lt;span class="k">\thefootnote&lt;/span>&lt;span class="nb">}{}&lt;/span>
&lt;span class="c">% 正文需要添加注脚的页面
&lt;/span>&lt;span class="c">% 添加脚注
&lt;/span>&lt;span class="c">&lt;/span>&lt;span class="k">\footnote&lt;/span>&lt;span class="nb">{&lt;/span>&lt;span class="k">\noindent&lt;/span>
&lt;span class="k">\textbf&lt;/span>&lt;span class="nb">{&lt;/span>这里是注脚&lt;span class="nb">}&lt;/span>：&lt;span class="k">\\&lt;/span>
&lt;span class="nb">}&lt;/span>.
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr />
## 数学公式
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex"># 导入美国数学学会字体包
&lt;span class="k">\usepackage&lt;/span>&lt;span class="nb">{&lt;/span>amsmath&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="数学环境">数学环境&lt;/h3>
&lt;ul>
&lt;li>行内公式:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="s">$&lt;/span>&lt;span class="nb"> ... &lt;/span>&lt;span class="s">$&lt;/span>
或者
&lt;span class="s">\(&lt;/span>&lt;span class="nb"> ... &lt;/span>&lt;span class="s">\)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>行间公式:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="sb">$$&lt;/span>&lt;span class="nb"> ... &lt;/span>&lt;span class="s">$$&lt;/span> #(不建议使用)
或者
&lt;span class="sb">\[&lt;/span>&lt;span class="nb"> ... &lt;/span>&lt;span class="s">\]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="希腊字母">希腊字母&lt;/h3>
&lt;h4 id="小写">小写&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">&lt;/th>
&lt;th style="text-align:left">&lt;/th>
&lt;th style="text-align:center">&lt;/th>
&lt;th style="text-align:left">&lt;/th>
&lt;th style="text-align:center">&lt;/th>
&lt;th style="text-align:left">&lt;/th>
&lt;th style="text-align:center">&lt;/th>
&lt;th style="text-align:left">&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">$\alpha$&lt;/td>
&lt;td style="text-align:left">\alpha&lt;/td>
&lt;td style="text-align:center">$\theta$&lt;/td>
&lt;td style="text-align:left">\theta&lt;/td>
&lt;td style="text-align:center">o&lt;/td>
&lt;td style="text-align:left">o&lt;/td>
&lt;td style="text-align:center">$\upsilon$&lt;/td>
&lt;td style="text-align:left">\upsilon&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\beta$&lt;/td>
&lt;td style="text-align:left">\beta&lt;/td>
&lt;td style="text-align:center">$\vartheta$&lt;/td>
&lt;td style="text-align:left">\vartheta&lt;/td>
&lt;td style="text-align:center">$\pi$&lt;/td>
&lt;td style="text-align:left">\pi&lt;/td>
&lt;td style="text-align:center">$\phi$&lt;/td>
&lt;td style="text-align:left">\phi&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\gamma$&lt;/td>
&lt;td style="text-align:left">\gamma&lt;/td>
&lt;td style="text-align:center">$\iota$&lt;/td>
&lt;td style="text-align:left">\iota&lt;/td>
&lt;td style="text-align:center">$\varpi$&lt;/td>
&lt;td style="text-align:left">\varpi&lt;/td>
&lt;td style="text-align:center">$\varphi$&lt;/td>
&lt;td style="text-align:left">\varphi&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\delta$&lt;/td>
&lt;td style="text-align:left">\delta&lt;/td>
&lt;td style="text-align:center">$\kappa$&lt;/td>
&lt;td style="text-align:left">\kappa&lt;/td>
&lt;td style="text-align:center">$\rho$&lt;/td>
&lt;td style="text-align:left">\rho&lt;/td>
&lt;td style="text-align:center">$\chi$&lt;/td>
&lt;td style="text-align:left">\chi&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\epsilon$&lt;/td>
&lt;td style="text-align:left">\epsilon&lt;/td>
&lt;td style="text-align:center">$\lambda$&lt;/td>
&lt;td style="text-align:left">\lambda&lt;/td>
&lt;td style="text-align:center">$\varrho$&lt;/td>
&lt;td style="text-align:left">\varrho&lt;/td>
&lt;td style="text-align:center">$\psi$&lt;/td>
&lt;td style="text-align:left">\psi&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\varepsilon$&lt;/td>
&lt;td style="text-align:left">\varepsilon&lt;/td>
&lt;td style="text-align:center">$\mu$&lt;/td>
&lt;td style="text-align:left">\mu&lt;/td>
&lt;td style="text-align:center">$\sigma$&lt;/td>
&lt;td style="text-align:left">\sigma&lt;/td>
&lt;td style="text-align:center">$\omega$&lt;/td>
&lt;td style="text-align:left">\omega&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\zeta$&lt;/td>
&lt;td style="text-align:left">\zeta&lt;/td>
&lt;td style="text-align:center">$\nu$&lt;/td>
&lt;td style="text-align:left">\nu&lt;/td>
&lt;td style="text-align:center">$\varsigma$&lt;/td>
&lt;td style="text-align:left">\varsigma&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:left">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\eta$&lt;/td>
&lt;td style="text-align:left">\eta&lt;/td>
&lt;td style="text-align:center">$\xi$&lt;/td>
&lt;td style="text-align:left">\xi&lt;/td>
&lt;td style="text-align:center">$\tau$&lt;/td>
&lt;td style="text-align:left">\tau&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:left">&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="大写">大写&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">&lt;/th>
&lt;th style="text-align:left">&lt;/th>
&lt;th style="text-align:center">&lt;/th>
&lt;th style="text-align:left">&lt;/th>
&lt;th style="text-align:center">&lt;/th>
&lt;th style="text-align:left">&lt;/th>
&lt;th style="text-align:center">&lt;/th>
&lt;th style="text-align:left">&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">$\Gamma$&lt;/td>
&lt;td style="text-align:left">\Gamma&lt;/td>
&lt;td style="text-align:center">$\Lambda$&lt;/td>
&lt;td style="text-align:left">\Lambda&lt;/td>
&lt;td style="text-align:center">$\Sigma$&lt;/td>
&lt;td style="text-align:left">\Sigma&lt;/td>
&lt;td style="text-align:center">$\Psi$&lt;/td>
&lt;td style="text-align:left">\Psi&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\Delta$&lt;/td>
&lt;td style="text-align:left">\Delta&lt;/td>
&lt;td style="text-align:center">$\Xi$&lt;/td>
&lt;td style="text-align:left">\Xi&lt;/td>
&lt;td style="text-align:center">$\Upsilon$&lt;/td>
&lt;td style="text-align:left">\Upsilon&lt;/td>
&lt;td style="text-align:center">$\Omega$&lt;/td>
&lt;td style="text-align:left">\Omega&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\Theta$&lt;/td>
&lt;td style="text-align:left">\Theta&lt;/td>
&lt;td style="text-align:center">$\Pi$&lt;/td>
&lt;td style="text-align:left">\Pi&lt;/td>
&lt;td style="text-align:center">$\Phi$&lt;/td>
&lt;td style="text-align:left">\Phi&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;td style="text-align:left">&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="上标--下标">上标 &amp;amp; 下标&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">x&lt;span class="nb">_{&lt;/span>1&lt;span class="nb">}&lt;/span> x&lt;span class="nb">^{&lt;/span>2&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$ x_{1} \qquad x^{2} $$&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">x&lt;span class="nb">_{&lt;/span>ij&lt;span class="nb">}^{&lt;/span>3&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$ x_{ij}^{3} $$&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">f(n) = n&lt;span class="nb">^&lt;/span>5 + 4n&lt;span class="nb">^&lt;/span>2 + 2 |&lt;span class="nb">_{&lt;/span>n=17&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$ f(n) = n^5 + 4n^2 + 2 |_{n=17} $$&lt;/p>
&lt;h3 id="声调">声调&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\bar&lt;/span>&lt;span class="nb">{&lt;/span>x&lt;span class="nb">}&lt;/span> &lt;span class="k">\acute&lt;/span>&lt;span class="nb">{&lt;/span>x&lt;span class="nb">}&lt;/span> &lt;span class="k">\check&lt;/span>&lt;span class="nb">{&lt;/span>x&lt;span class="nb">}&lt;/span> &lt;span class="k">\grave&lt;/span>&lt;span class="nb">{&lt;/span>x&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$\bar{x} \qquad \acute{x} \qquad \check{x} \qquad \grave{x}$$&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\dot&lt;/span>&lt;span class="nb">{&lt;/span>x&lt;span class="nb">}&lt;/span> &lt;span class="k">\ddot&lt;/span>&lt;span class="nb">{&lt;/span>x&lt;span class="nb">}&lt;/span> &lt;span class="k">\hat&lt;/span>&lt;span class="nb">{&lt;/span>x&lt;span class="nb">}&lt;/span> &lt;span class="k">\tilde&lt;/span>&lt;span class="nb">{&lt;/span>x&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$
\dot{x} \qquad \ddot{x} \qquad \hat{x} \qquad \tilde{x}
$$&lt;/p>
&lt;h3 id="微分">微分&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\nabla&lt;/span> &lt;span class="k">\partial&lt;/span> x &lt;span class="k">\mathrm&lt;/span>&lt;span class="nb">{&lt;/span>d&lt;span class="nb">}&lt;/span>x x&lt;span class="nb">^{&lt;/span>&lt;span class="k">\prime&lt;/span>&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$\nabla \qquad \partial x \qquad \mathrm{d}x \qquad x^{\prime}$$&lt;/p>
&lt;h3 id="求和">求和&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\sum&lt;/span>&lt;span class="nb">_{&lt;/span>i=1&lt;span class="nb">}^{&lt;/span>n&lt;span class="nb">}&lt;/span> t&lt;span class="nb">_&lt;/span>i
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$ \sum_{i=1}^{n} t_i $$&lt;/p>
&lt;h3 id="积分">积分&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\int&lt;/span>&lt;span class="nb">_&lt;/span>0&lt;span class="nb">^&lt;/span>&lt;span class="k">\infty&lt;/span> &lt;span class="k">\mathrm&lt;/span>&lt;span class="nb">{&lt;/span>e&lt;span class="nb">}^{&lt;/span>-x&lt;span class="nb">}&lt;/span>&lt;span class="k">\,\mathrm&lt;/span>&lt;span class="nb">{&lt;/span>d&lt;span class="nb">}&lt;/span>x
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$ \int_0^\infty \mathrm{e}^{-x},\mathrm{d}x $$&lt;/p>
&lt;h3 id="根式">根式&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\sqrt&lt;/span>&lt;span class="na">[3]&lt;/span>&lt;span class="nb">{&lt;/span>2&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$ \sqrt[3]{2} $$&lt;/p>
&lt;h3 id="上划线--下划线">上划线 &amp;amp; 下划线&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\overline&lt;/span>&lt;span class="nb">{&lt;/span>a+b&lt;span class="nb">}&lt;/span> &lt;span class="k">\underline&lt;/span>&lt;span class="nb">{&lt;/span>a+b&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$ \overline{a+b} \qquad \underline{a+b} $$&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\overbrace&lt;/span>&lt;span class="nb">{&lt;/span>a+b+&lt;span class="k">\cdots&lt;/span>+z&lt;span class="nb">}^{&lt;/span>26&lt;span class="nb">}&lt;/span> &lt;span class="k">\underbrace&lt;/span>&lt;span class="nb">{&lt;/span>a+b+&lt;span class="k">\cdots&lt;/span>+z&lt;span class="nb">}_{&lt;/span>26&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$
\overbrace{a+b+\cdots+z}^{26} \qquad \underbrace{a+b+\cdots+z}_{26}
$$&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\overrightarrow&lt;/span>&lt;span class="nb">{&lt;/span>AB&lt;span class="nb">}&lt;/span> &lt;span class="k">\overleftarrow&lt;/span>&lt;span class="nb">{&lt;/span>AB&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$ \overrightarrow{AB} \qquad \overleftarrow{AB}$$&lt;/p>
&lt;h3 id="分式">分式&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\frac&lt;/span>&lt;span class="nb">{&lt;/span>x&lt;span class="nb">^{&lt;/span>2&lt;span class="nb">}}{&lt;/span>k+1&lt;span class="nb">}&lt;/span> &lt;span class="k">\qquad&lt;/span> x&lt;span class="nb">^{&lt;/span>&lt;span class="k">\frac&lt;/span>&lt;span class="nb">{&lt;/span>2&lt;span class="nb">}{&lt;/span>k+1&lt;span class="nb">}}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$ \frac{x^{2}}{k+1} \qquad x^{\frac{2}{k+1}} $$&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\frac&lt;/span>&lt;span class="nb">{&lt;/span>n!&lt;span class="nb">}{&lt;/span>k!(n-k)!&lt;span class="nb">}&lt;/span> = &lt;span class="k">\binom&lt;/span>&lt;span class="nb">{&lt;/span>n&lt;span class="nb">}{&lt;/span>k&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$ \frac{n!}{k!(n-k)!} = \binom{n}{k} $$&lt;/p>
&lt;h3 id="大括号">大括号&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">f(n) =
&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>cases&lt;span class="nb">}&lt;/span>
n/2 &lt;span class="nb">&amp;amp;&lt;/span> &lt;span class="k">\quad&lt;/span> &lt;span class="k">\text&lt;/span>&lt;span class="nb">{&lt;/span>if &lt;span class="nb">}&lt;/span>&lt;span class="k">\,&lt;/span> n &lt;span class="k">\,&lt;/span> &lt;span class="k">\text&lt;/span>&lt;span class="nb">{&lt;/span> is even&lt;span class="nb">}&lt;/span>&lt;span class="k">\\&lt;/span>&lt;span class="na">[3pt]&lt;/span>
-(n+1)/2 &lt;span class="nb">&amp;amp;&lt;/span> &lt;span class="k">\quad&lt;/span> &lt;span class="k">\text&lt;/span>&lt;span class="nb">{&lt;/span>if &lt;span class="nb">}&lt;/span>&lt;span class="k">\,&lt;/span> n &lt;span class="k">\,\text&lt;/span>&lt;span class="nb">{&lt;/span> is odd&lt;span class="nb">}&lt;/span>
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>cases&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$
f(n) =
\begin{cases}
n/2 &amp;amp; \quad \text{if }, n , \text{ is even}\\[3pt]
-(n+1)/2 &amp;amp; \quad \text{if }, n ,\text{ is odd}
\end{cases}
$$&lt;/p>
&lt;h3 id="二元关系符">二元关系符&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">&lt;/th>
&lt;th style="text-align:center">&lt;/th>
&lt;th style="text-align:center">&lt;/th>
&lt;th style="text-align:center">&lt;/th>
&lt;th style="text-align:center">&lt;/th>
&lt;th style="text-align:center">&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">$&amp;lt;$&lt;/td>
&lt;td style="text-align:center">&amp;lt;&lt;/td>
&lt;td style="text-align:center">$&amp;gt;$&lt;/td>
&lt;td style="text-align:center">&amp;gt;&lt;/td>
&lt;td style="text-align:center">$=$&lt;/td>
&lt;td style="text-align:center">=&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\leq$&lt;/td>
&lt;td style="text-align:center">\leq&lt;/td>
&lt;td style="text-align:center">$\geq$&lt;/td>
&lt;td style="text-align:center">\geq&lt;/td>
&lt;td style="text-align:center">$\equiv$&lt;/td>
&lt;td style="text-align:center">\equiv&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\ll$&lt;/td>
&lt;td style="text-align:center">\ll&lt;/td>
&lt;td style="text-align:center">$\gg$&lt;/td>
&lt;td style="text-align:center">\gg&lt;/td>
&lt;td style="text-align:center">$\doteq$&lt;/td>
&lt;td style="text-align:center">\doteq&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\prec$&lt;/td>
&lt;td style="text-align:center">\prec&lt;/td>
&lt;td style="text-align:center">$\succ$&lt;/td>
&lt;td style="text-align:center">\succ&lt;/td>
&lt;td style="text-align:center">$\sim$&lt;/td>
&lt;td style="text-align:center">\sim&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\preceq$&lt;/td>
&lt;td style="text-align:center">\preceq&lt;/td>
&lt;td style="text-align:center">$\succeq$&lt;/td>
&lt;td style="text-align:center">\succeq&lt;/td>
&lt;td style="text-align:center">$\simeq$&lt;/td>
&lt;td style="text-align:center">\simeq&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\subset$&lt;/td>
&lt;td style="text-align:center">\subset&lt;/td>
&lt;td style="text-align:center">$\supset$&lt;/td>
&lt;td style="text-align:center">\supset&lt;/td>
&lt;td style="text-align:center">$\approx$&lt;/td>
&lt;td style="text-align:center">\approx&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\subseteq$&lt;/td>
&lt;td style="text-align:center">\subseteq&lt;/td>
&lt;td style="text-align:center">$\supseteq$&lt;/td>
&lt;td style="text-align:center">\supseteq&lt;/td>
&lt;td style="text-align:center">$\cong$&lt;/td>
&lt;td style="text-align:center">\cong&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\in$&lt;/td>
&lt;td style="text-align:center">\in&lt;/td>
&lt;td style="text-align:center">$\ni$&lt;/td>
&lt;td style="text-align:center">\ni&lt;/td>
&lt;td style="text-align:center">$\notin$&lt;/td>
&lt;td style="text-align:center">\notin&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\mid$&lt;/td>
&lt;td style="text-align:center">\mid&lt;/td>
&lt;td style="text-align:center">$\parallel$&lt;/td>
&lt;td style="text-align:center">\parallel&lt;/td>
&lt;td style="text-align:center">$\perp$&lt;/td>
&lt;td style="text-align:center">\perp&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\because$&lt;/td>
&lt;td style="text-align:center">\because&lt;/td>
&lt;td style="text-align:center">$\therefore$&lt;/td>
&lt;td style="text-align:center">\therefore&lt;/td>
&lt;td style="text-align:center">$\neq$&lt;/td>
&lt;td style="text-align:center">\neq&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="箭头">箭头&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">&lt;/th>
&lt;th style="text-align:left">&lt;/th>
&lt;th style="text-align:center">&lt;/th>
&lt;th style="text-align:left">&lt;/th>
&lt;th style="text-align:center">&lt;/th>
&lt;th style="text-align:left">&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">$\gets$&lt;/td>
&lt;td style="text-align:left">\leftarrow or \gets&lt;/td>
&lt;td style="text-align:center">$\longleftarrow$&lt;/td>
&lt;td style="text-align:left">\longleftarrow&lt;/td>
&lt;td style="text-align:center">$\nearrow$&lt;/td>
&lt;td style="text-align:left">\nearrow&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\to$&lt;/td>
&lt;td style="text-align:left">\rightarrow or \to&lt;/td>
&lt;td style="text-align:center">$\longrightarrow$&lt;/td>
&lt;td style="text-align:left">\longrightarrow&lt;/td>
&lt;td style="text-align:center">$\searrow$&lt;/td>
&lt;td style="text-align:left">\searrow&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\leftrightarrow$&lt;/td>
&lt;td style="text-align:left">\leftrightarrow&lt;/td>
&lt;td style="text-align:center">$\longleftrightarrow$&lt;/td>
&lt;td style="text-align:left">\longleftrightarrow&lt;/td>
&lt;td style="text-align:center">$\swarrow$&lt;/td>
&lt;td style="text-align:left">\swarrow&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\Leftarrow$&lt;/td>
&lt;td style="text-align:left">\Leftarrow&lt;/td>
&lt;td style="text-align:center">$\Longleftarrow$&lt;/td>
&lt;td style="text-align:left">\Longleftarrow&lt;/td>
&lt;td style="text-align:center">$\nwarrow$&lt;/td>
&lt;td style="text-align:left">\nwarrow&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\Rightarrow$&lt;/td>
&lt;td style="text-align:left">\Rightarrow&lt;/td>
&lt;td style="text-align:center">$\Longrightarrow$&lt;/td>
&lt;td style="text-align:left">\Longrightarrow&lt;/td>
&lt;td style="text-align:center">$\leadsto$&lt;/td>
&lt;td style="text-align:left">\leadsto&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\Leftrightarrow$&lt;/td>
&lt;td style="text-align:left">\Leftrightarrow&lt;/td>
&lt;td style="text-align:center">$\Longleftrightarrow$&lt;/td>
&lt;td style="text-align:left">\Longleftrightarrow&lt;/td>
&lt;td style="text-align:center">$\rightleftharpoons$&lt;/td>
&lt;td style="text-align:left">\uparrow&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\mapsto$&lt;/td>
&lt;td style="text-align:left">\mapsto&lt;/td>
&lt;td style="text-align:center">$\longmapsto$&lt;/td>
&lt;td style="text-align:left">\longmapsto&lt;/td>
&lt;td style="text-align:center">$\uparrow$&lt;/td>
&lt;td style="text-align:left">\downarrow&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\hookleftarrow$&lt;/td>
&lt;td style="text-align:left">\hookleftarrow&lt;/td>
&lt;td style="text-align:center">$\hookrightarrow$&lt;/td>
&lt;td style="text-align:left">\hookrightarrow&lt;/td>
&lt;td style="text-align:center">$\downarrow$&lt;/td>
&lt;td style="text-align:left">\updownarrow&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\leftharpoonup$&lt;/td>
&lt;td style="text-align:left">\leftharpoonup&lt;/td>
&lt;td style="text-align:center">$\rightharpoonup$&lt;/td>
&lt;td style="text-align:left">\rightharpoonup&lt;/td>
&lt;td style="text-align:center">$\updownarrow$&lt;/td>
&lt;td style="text-align:left">\Uparrow&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\leftharpoondown$&lt;/td>
&lt;td style="text-align:left">\leftharpoondown&lt;/td>
&lt;td style="text-align:center">$\rightharpoondown$&lt;/td>
&lt;td style="text-align:left">\rightharpoondown&lt;/td>
&lt;td style="text-align:center">$\Uparrow$&lt;/td>
&lt;td style="text-align:left">\Downarrow&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">$\rightleftharpoons$&lt;/td>
&lt;td style="text-align:left">\rightleftharpoons&lt;/td>
&lt;td style="text-align:center">$\iff$&lt;/td>
&lt;td style="text-align:left">\iff&lt;/td>
&lt;td style="text-align:center">$\Downarrow$&lt;/td>
&lt;td style="text-align:left">\Updownarrow&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="点">点&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>a \dots b&lt;/td>
&lt;td>a \cdots b&lt;/td>
&lt;td>\vdots&lt;/td>
&lt;td>\ddots&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$a \dots b$&lt;/td>
&lt;td>$a \cdots b$&lt;/td>
&lt;td>$ \vdots $&lt;/td>
&lt;td>$ \ddots $&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="矩阵">矩阵&lt;/h3>
&lt;h4 id="普通">普通&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>matrix&lt;span class="nb">}&lt;/span>
1 &lt;span class="nb">&amp;amp;&lt;/span> 2 &lt;span class="nb">&amp;amp;&lt;/span> 3&lt;span class="k">\\&lt;/span>
a &lt;span class="nb">&amp;amp;&lt;/span> b &lt;span class="nb">&amp;amp;&lt;/span> c
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>matrix&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$
\begin{matrix}
1 &amp;amp; 2 &amp;amp; 3\\&lt;br>
a &amp;amp; b &amp;amp; c
\end{matrix}
$$&lt;/p>
&lt;h4 id="圆括号">圆括号&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>pmatrix&lt;span class="nb">}&lt;/span>
1 &lt;span class="nb">&amp;amp;&lt;/span> 2 &lt;span class="nb">&amp;amp;&lt;/span> 3&lt;span class="k">\\&lt;/span>
a &lt;span class="nb">&amp;amp;&lt;/span> b &lt;span class="nb">&amp;amp;&lt;/span> c
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>pmatrix&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$
\begin{pmatrix}
1 &amp;amp; 2 &amp;amp; 3\\&lt;br>
a &amp;amp; b &amp;amp; c
\end{pmatrix}
$$&lt;/p>
&lt;h4 id="中括号">中括号&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>bmatrix&lt;span class="nb">}&lt;/span>
1 &lt;span class="nb">&amp;amp;&lt;/span> 2 &lt;span class="nb">&amp;amp;&lt;/span> 3&lt;span class="k">\\&lt;/span>
a &lt;span class="nb">&amp;amp;&lt;/span> b &lt;span class="nb">&amp;amp;&lt;/span> c
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>bmatrix&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$
\begin{bmatrix}
1 &amp;amp; 2 &amp;amp; 3\\&lt;br>
a &amp;amp; b &amp;amp; c
\end{bmatrix}
$$&lt;/p>
&lt;h4 id="大括号-1">大括号&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>Bmatrix&lt;span class="nb">}&lt;/span>
1 &lt;span class="nb">&amp;amp;&lt;/span> 2 &lt;span class="nb">&amp;amp;&lt;/span> 3&lt;span class="k">\\\\&lt;/span>
a &lt;span class="nb">&amp;amp;&lt;/span> b &lt;span class="nb">&amp;amp;&lt;/span> c
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>Bmatrix&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$
\begin{Bmatrix}
1 &amp;amp; 2 &amp;amp; 3\\&lt;br>
a &amp;amp; b &amp;amp; c
\end{Bmatrix}
$$&lt;/p>
&lt;h4 id="行列式">行列式&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>vmatrix&lt;span class="nb">}&lt;/span>
1 &lt;span class="nb">&amp;amp;&lt;/span> 2 &lt;span class="nb">&amp;amp;&lt;/span> 3&lt;span class="k">\\\\&lt;/span>
a &lt;span class="nb">&amp;amp;&lt;/span> b &lt;span class="nb">&amp;amp;&lt;/span> c
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>vmatrix&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$
\begin{vmatrix}
1 &amp;amp; 2 &amp;amp; 3\\&lt;br>
a &amp;amp; b &amp;amp; c
\end{vmatrix}
$$&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\begin&lt;/span>&lt;span class="nb">{&lt;/span>Vmatrix&lt;span class="nb">}&lt;/span>
1 &lt;span class="nb">&amp;amp;&lt;/span> 2 &lt;span class="nb">&amp;amp;&lt;/span> 3&lt;span class="k">\\\\&lt;/span>
a &lt;span class="nb">&amp;amp;&lt;/span> b &lt;span class="nb">&amp;amp;&lt;/span> c
&lt;span class="k">\end&lt;/span>&lt;span class="nb">{&lt;/span>Vmatrix&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$
\begin{Vmatrix}
1 &amp;amp; 2 &amp;amp; 3\\&lt;br>
a &amp;amp; b &amp;amp; c
\end{Vmatrix}
$$&lt;/p>
&lt;h3 id="非公式">非公式&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-tex" data-lang="tex">&lt;span class="k">\textrm&lt;/span>&lt;span class="nb">{&lt;/span>apples&lt;span class="nb">}&lt;/span> &lt;span class="k">\textbf&lt;/span>&lt;span class="nb">{&lt;/span>apples&lt;span class="nb">}&lt;/span> &lt;span class="k">\textit&lt;/span>&lt;span class="nb">{&lt;/span>apples&lt;span class="nb">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$ \textrm{apples} \qquad \textbf{apples} \qquad \textit{apples} $$&lt;/p></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/latex/">latex</category><category domain="https://matnoble.me/tags/latex/">LaTeX</category></item><item><title>2018年华中科技大学数学专业考研复试回忆 + 经验分享</title><link>https://matnoble.me/life/hust/postgraduate_experience_sharing/</link><guid isPermaLink="true">https://matnoble.me/life/hust/postgraduate_experience_sharing/</guid><pubDate>Wed, 20 Feb 2019 00:00:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/a5e5afb8-433d-47dc-8346-aff06a54a01a.jpg" title="学校正门" alt="双一流森林式校园华中科技大学校大门" width=95% />&lt;/p>
&lt;p>&lt;b>复试&lt;/b>是考研的最后一个考验, 你准备好了吗？你有没有这些问题：英语口试怎么准备？综合面试需要注意什么？需要提前联系导师吗？面对诸如此类的问题, 去年的我也是找不到头脑, 今年, 写出经验帖, 希望能帮助到你！&lt;/p>
&lt;p>距离我准备考研复试, 已经有一整年的时间了, 在华科学习生活一个学期之后, 再写这篇经验分享, 希望能够更好的帮助到考研的学弟学妹们! &lt;strong>本文经验最为适合考华科数学的同学, 其他专业、其他学校的同学, 仅供参考！&lt;/strong>&lt;/p>
&lt;p>&lt;strong>考研并不是我们唯一的出路&lt;/strong>
2019年考研人数又创造了历史, 考研失利的同学不在少数, 对于这类同学, 有以下选择:&lt;/p>
&lt;ol>
&lt;li>再坚持考一年的, 我身边就有一些这样的同学, 在这里祝福他们考研成功!&lt;/li>
&lt;li>考公务员, 这方面我不是很了解&lt;/li>
&lt;li>去春招市场, 准备工作的&lt;/li>
&lt;li>其他&lt;/li>
&lt;/ol>
&lt;p>我认为, 无论做出什么选择都是好的, 只要是适合自己的. 当然, 还有的同学可以选择调剂这条路, 这样的话, 就要早些去寻找调剂信息了.&lt;/p>
&lt;h2 id="复试流程">复试流程&lt;/h2>
&lt;p>华中科技大学的复试时间真的很早, 很早, 很早！去年, 我复试结果都出来了, 我身边的同学还没有一个去复试的. 复试早, 其实是件很好的事情! 所以, 请大家浏览目标院校的官网, 留意学校的复试时间.&lt;/p>
&lt;p>华科数学的复试, 主要分为三个环节(体检是全学校都要参加): 英语口语面试, 专业综合面试和笔试. 最重要的是&lt;strong>专业综合面试&lt;/strong>.&lt;/p>
&lt;h3 id="英语口语面试">英语口语面试&lt;/h3>
&lt;p>英语口语面试又包括听力测试和口语交流测试. 总共8分钟, 分值20. 主考官是一位发音很标准的老师, 以及其他数院的五位专业课老师.&lt;/p>
&lt;p>&lt;strong>听力测试&lt;/strong>是类似4, 6级的一小段对话, 听完之后, 向考官陈述对话大意, 或者一些关键词.&lt;/p>
&lt;p>&lt;strong>口语交流测试&lt;/strong>就是老师们交叉着向考生用英语提问一些问题, 我们需要一一回答, 并且尽量不要总是说不出来. 问题大致包括: 自我介绍, 大学所学课程英语名称, 介绍自己的家乡, 对武汉, 华科的感受, 读过哪些英文的专业书籍……&lt;/p>
&lt;p>&lt;strong>建议&lt;/strong>
临近复试, 要坚持每天听听力, 4, 6级即可. 准备一些常被问到的问题, 背熟, 背熟, 背熟！！！However, 考场上尽量不要有背诵痕迹, 适当的停顿思考. 个人建议, 如果专业方向明确, 而且又比较了解专业方向, 可以引导老师向专业方向提问, 问题不会很难. 另外, 针对我犯的错误, 建议在考场上尽量&lt;strong>用句子回答问题&lt;/strong>, 能多说就多说一些.&lt;/p>
&lt;h3 id="专业综合面试">专业综合面试&lt;/h3>
&lt;p>面试时间20分钟, 分值40分. 综合面试直接关系到我们能不能被录取, 因此, 十分重要！！！&lt;/p>
&lt;p>在我之前面试完的同学回忆: 问的都是课本上的重要的知识点, 问到不会为止. 流程大致是: 自我介绍 + 回答问题（包括在黑板上作答）.&lt;/p>
&lt;p>&lt;strong>我的面试流程&lt;/strong>: 进入面试考场, 向老师们问好并递交求学简历(后文提及), 然后根据老师的要求在黑板上写姓名, 意向专业, 本科院校等基本信息. 接着是自我介绍, 我介绍了自己的本科学习情况, 说自己在本科时, 学习过用有限体积法解扩散方程. 之后, 老师就主要问我这方面的掌握情况. 最后老师还问了我一个比较喜欢的高等代数的问题.&lt;/p>
&lt;p>&lt;strong>总结&lt;/strong>: 老师对于本科院校是有些参考的, 但不是很大. 另外, 老师比较关心的是本科成绩和科研潜力. 一般情况, 老师会问数学分析, 高等代数等基础课的一些重要的定义定理.&lt;/p>
&lt;p>&lt;strong>面试资料&lt;/strong>: 可以包括求学简历, 如果本科成绩拿的出手, 就复印几份成绩单放在里面. 另外, 本科参加的学科竞赛的成绩证书也可以放进去. 下面附上当时我用$ \LaTeX $做的简历, 以供参考:&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/ad7c3295-06f2-4485-89e2-f556384e2683.png" title="LaTeX 求学简历" alt="LaTeX 求学简历" />&lt;/p>
&lt;p>&lt;strong>建议&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>综合面试很重要, 一定要重视！一定要重视！一定要重视!&lt;/li>
&lt;li>一定要把分析代数等基础课的重要定理再记一记;&lt;/li>
&lt;li>如果有科研经历, 能清晰地展示出来的话, 更好;&lt;/li>
&lt;li>自我介绍时, 说一些自己有优势的方向, 以引导老师们提问该方向.&lt;/li>
&lt;/ol>
&lt;h3 id="笔试">笔试&lt;/h3>
&lt;p>华科数学的笔试还是有分析和代数, 另外包括常微分方程. 如果想在复试中取得好成绩, 笔试也是很重要的, 题目跟初试相仿, 大家努力看书就好！&lt;/p>
&lt;p>去年是 10 道题, 数分高代各 4 道, 常微分 2 道.&lt;/p>
&lt;h2 id="联系导师">联系导师&lt;/h2>
&lt;p>在查到初试成绩之后, 联系意向导师也是很有必要的！对于导师的选择, 请同学们自行谷歌或百度, 也可以私下和我交流, 数学学院官网也有导师的相关信息(包括联系方式). 一般来说, 数学下的概率统计和计算数学是相对比较热门的选择, 有这些方向的同学一定要提前联系导师, 以免被调到非意向专业.&lt;/p>
&lt;h2 id="官方宣传视频">官方宣传视频&lt;/h2>
&lt;h3 id="遇见华中大">遇见华中大&lt;/h3>
&lt;div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">&lt;iframe src="https://matnoble.me//player.bilibili.com/player.html?aid=56170676&amp;cid=98179520&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"> &lt;/iframe>&lt;/div>
&lt;h3 id="遇见森林式大学">遇见森林式大学&lt;/h3>
&lt;div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">&lt;iframe src="https://matnoble.me//player.bilibili.com/player.html?aid=56551950&amp;cid=98808951&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"> &lt;/iframe>&lt;/div>
&lt;h3 id="遇见地铁时代">遇见地铁时代&lt;/h3>
&lt;div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">&lt;iframe src="https://matnoble.me//player.bilibili.com/player.html?aid=56299596&amp;cid=98393641&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"> &lt;/iframe>&lt;/div>
&lt;h3 id="遇见舌尖上的华中大">遇见舌尖上的华中大&lt;/h3>
&lt;div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">&lt;iframe src="https://matnoble.me//player.bilibili.com/player.html?aid=56330731&amp;cid=98444212&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"> &lt;/iframe>&lt;/div>
&lt;h2 id="其他">其他&lt;/h2>
&lt;h3 id="衣食住行">衣食住行&lt;/h3>
&lt;p>&lt;strong>衣&lt;/strong>: 要看天气预报哟, 不下雨的话, 应该会很暖和的. 但是, 不能掉以轻心, 去年还在东北上学的我, 来到南方, 竟然还觉得冷. 这些天就一直下雨... 😭&lt;/p>
&lt;p>&lt;strong>食&lt;/strong>: 华科的食堂据说在武汉的高校中应该是最好的(傲娇脸), 最重要是可以办理临时卡.&lt;/p>
&lt;p>&lt;strong>住&lt;/strong>：华科周边应该可以找到适合你的旅馆, 可以选择青年旅社, 相对便宜一些, 复试那段时间, 青旅住的大多是考研的学生, 一般不用担心太吵.&lt;/p>
&lt;p>&lt;strong>行&lt;/strong>: 据说, 地铁 2 号线南延长线已经开通了, 也就是说, 下了火车, 就可以直接坐地铁到学校门口了, 真的很 nice！最好提前 1-2 天来华科踩点儿奥！&lt;/p>
&lt;h3 id="华科地图">华科地图&lt;/h3>
&lt;p>华科真的很大很大, 进校园一定要借助地图!!!&lt;/p>
&lt;img src="https://i.postimg.cc/kGWwyTYx/mmexport1520566095026.jpg" title="华科真的很大很大, 进校园一定要借助地图!!!" alt="双一流森林式校园华中大地图" width=95%/>
&lt;h3 id="祝福">祝福&lt;/h3>
&lt;p>祝福看到本帖的考研人, 无论是否为华科考生, 是否为数学考生, 都能顺利通过复试！&lt;/p>
&lt;p>如果大家有相关问题, 可以在下方留言和我交流！&lt;/p>
&lt;p>同时, 欢迎大家关注公众号: ..数系家园..&lt;/p></description><category domain="https://matnoble.me/life/">life</category><category domain="https://matnoble.me/life/hust/">hust</category><category domain="https://matnoble.me/tags/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/">经验分享</category><category domain="https://matnoble.me/tags/%E8%80%83%E7%A0%94/">考研</category></item><item><title>神的编辑器 Emacs</title><link>https://matnoble.me/tech/emacs/emacs-intro/</link><guid isPermaLink="true">https://matnoble.me/tech/emacs/emacs-intro/</guid><pubDate>Fri, 01 Jun 2018 00:00:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/1cef4c32-2ea9-4ed5-be57-b20b8fa8d789.jpeg" title="Emacs vs vim vs text" alt="Emacs vs vim vs text" width=95% />&lt;/p>
&lt;p>&lt;i style="display:block;text-align:center;color:gray">Emacs 是一种生活方式&lt;/i>&lt;/p>
&lt;p>Emacs 是我目前主要的编辑器: 写 Python 代码, 写 $\LaTeX$ 文档, 使用 Org-mode ..提纲式..记录想法.&lt;/p>
&lt;h2 id="界面及安装">界面及安装&lt;/h2>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/5ab0ab4b-00b1-483f-9c4d-26651c81946a.png" title="自定义后的界面--清爽之极" alt="Emacs 自定义后的界面--清爽之极" width=95% />&lt;/p>
&lt;p>Emacs 是一个支持多平台的自由软件, 我在 Windows 和 Ubuntu 上都安装使用过, 在 Ubuntu 上体验更好一些. 另外, Emacs 有众多版本, 我用的是 25.3.1.&lt;/p>
&lt;blockquote>
&lt;p>Windows 默认的 Emacs 貌似对中文不友好, 需要手动设置字体, 具体方法请自行 Google 或百度.&lt;/p>
&lt;/blockquote>
&lt;h2 id="基本操作">基本操作&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>组合按键&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>C-* &lt;/code> : 表示按住 &lt;code>Ctrl&lt;/code> 键不松开, 再去按 &lt;code>*&lt;/code> 键;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>M-*&lt;/code> 表示按住&lt;code>Alt&lt;/code>键不松开, 再去按 &lt;code>*&lt;/code> 键.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>退出 Emacs&lt;/p>
&lt;p>&lt;code>C-x&lt;/code> 然后 &lt;code>C-c&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>官方学习文档&lt;/p>
&lt;p>&lt;code>C-h t&lt;/code> : 表示按住 &lt;code>Ctrl&lt;/code> 键不松开, 再按住 &lt;code>h&lt;/code> 键, 然后按 &lt;code>t&lt;/code> 键. 试一试, &lt;code>C-h t&lt;/code> 可以打开 Emacs 官方文档.&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/e6c8c7e8-af72-45db-b1fd-a43936d96719.png" title="Emacs 官方帮助文档" alt="Emacs 官方帮助文档" width=95% />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>移屏&lt;/p>
&lt;p>查看下一屏: &lt;code>C-v&lt;/code>&lt;/p>
&lt;p>查看上一屏: &lt;code>M-v&lt;/code>&lt;/p>
&lt;p>将光标位置的文本行移动到屏幕中央: &lt;code>C-l&lt;/code> (实际上, 是顶部, 中部和底部的循环)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>上下左右&lt;/p>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/7e9d0777-73c0-41b4-b66d-c1636326bd4c.png" title="Emacs 键盘操作" alt="Emacs 官方帮助文档　键盘操作" width=95% />&lt;/p>
&lt;p>&lt;code>C-f&lt;/code> 和 &lt;code>C-b&lt;/code> 分别表示向前和向后移动&lt;strong>一个字符&lt;/strong>, &lt;code>M-f&lt;/code> 和&lt;code>M-b&lt;/code> 则可以相应的移动的更多.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>* 首 * 尾&lt;/p>
&lt;ul>
&lt;li>
&lt;p>文章开头: &lt;code>M-Shift-&amp;lt;&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>文章结尾: &lt;code>M-Shift-&amp;gt;&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>行首: &lt;code>C-a&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>行尾: &lt;code>C-e&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>句首: &lt;code>M-a&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>句尾: &lt;code>M-e&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>终止命令&lt;/p>
&lt;p>当输入命令有误时, &lt;code>C-g&lt;/code> 能帮到你.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="矩形操作">矩形操作&lt;/h2>
&lt;h2 id="基本配置">基本配置&lt;/h2>
&lt;blockquote>
&lt;p>未配置过的 Emacs, 就像没安装插件的 Chrome 浏览器, “暴殄天物”. 当我们花时间, 用心去“鼓捣”它, 才可以发挥它应有的能力!&lt;/p>
&lt;/blockquote>
&lt;p>我的配置参考自 &lt;a href="https://github.com/zilongshanren/emacs.d">子龙山人&lt;/a>, 这是 &lt;a href="https://github.com/MatNoble/.emacs.d">我的配置&lt;/a> . 做的主要改变是对 python, $\LaTeX$ , org-mode 的自定义设置.&lt;/p>
&lt;h2 id="python-编辑器">Python 编辑器&lt;/h2>
&lt;blockquote>
&lt;p>没有固定的编辑框, 没有固定的输出框, 支持同时打开多个文件(文件类型不定)&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/f82c62b9-8149-4e88-80a5-c9218aab5976.png" title="Emacs + Python" alt="Emacs + Python" width=95% />&lt;/p>
&lt;h2 id="latex-配置">$\LaTeX$ 配置&lt;/h2>
&lt;blockquote>
&lt;p>简单快速&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/ef044f36-8a22-4882-8c7a-bd2c018343d4.png" title="Emacs + $\LaTeX$" alt="Emacs + $\LaTeX$" width=95% />&lt;/p>
&lt;h2 id="org-mode">Org-mode&lt;/h2>
&lt;blockquote>
&lt;p>类似 &lt;code>Markdown&lt;/code> 的语法, 提纲式记录想法, 输出格式支持: $\TeX \to$ PDF, HTML等&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://imgkr.cn-bj.ufileos.com/bffb935f-834f-4d68-affe-1a488e35bc76.png" title="Emacs　org-mode" alt="Emacs org-mode" width=95% />&lt;/p>
&lt;h2 id="推荐阅读">推荐阅读&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/redguardtoo/mastering-emacs-in-one-year-guide/blob/master/guide-zh.org">一年成为Emacs高手 (像神一样使用编辑器)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://book.emacs-china.org/#orgheadline1">Master Emacs in 21 Days&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://zh.wikipedia.org/wiki/%E7%BC%96%E8%BE%91%E5%99%A8%E4%B9%8B%E6%88%98">编辑器之战&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description><category domain="https://matnoble.me/tech/">tech</category><category domain="https://matnoble.me/tech/emacs/">emacs</category><category domain="https://matnoble.me/tags/emacs/">Emacs</category></item><item><title>不仅适用于数学系的数学系考研经验</title><link>https://matnoble.me/life/hust/postgraduate_experience_sharing_a/</link><guid isPermaLink="true">https://matnoble.me/life/hust/postgraduate_experience_sharing_a/</guid><pubDate>Mon, 21 May 2018 00:00:00 +0000</pubDate><author>hustmatnoble@gmail.com (数学小兵儿)</author><copyright>本博客遵循 [CC 4.0 BY-SA](https://creativecommons.org/licenses/by-nc-sa/4.0/) 版权协议，转载请附上原文出处链接和本声明</copyright><description>&lt;p>牛顿开创了万有引力定律和力学三定律后, 说自己是站在了巨人的肩膀上. 我经历了一年的备考准备, 初试, 复试, 肯定不是巨人, 但应该比去年的自己“站”得高了一些. 我期望您读完我这篇经验贴后, 能够比去年同期的我, 起点更高一些！&lt;/p>
&lt;p>本人 18 考研学生, 本科双非一本, 考研至华中科技大学, 数学与统计学院. 下面我将结合我的备考经历给出一些考研建议. 本文除专业课版块, 适用于大部分理工科考生.&lt;/p>
&lt;h2 id="考研目的">考研目的&lt;/h2>
&lt;p>考研, 被许多人认为是..二次高考.., 对于对本科院校不太满意的考生, 考研是一次提升最终学位院校层次的机会, 每年..双非逆袭985..的例子不在少数. 我认为选择考研, 还可以有以下考虑:&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>本科就业压力大, 提升就业竞争力;&lt;/li>
&lt;li>通过考研选择真正感兴趣的专业;&lt;/li>
&lt;li>继续深造, 提高学术研究能力;&lt;/li>
&lt;li>看别人考研, 自己也想考.&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>以上4种考虑中, 我认为第4种是值得商榷的. 希望我们最终的考研目的会是前3种中的几种.&lt;/p>
&lt;p>另外, 考研是有相当一部分人是失败的, 我想, 无论成功失败, 至少应该通过考研增强了自身的专业技能. 或者说考研应该是: 增强自己的专业技能, 顺便考上研究生. 而且, 在备考阶段遇到问题时, 应该更多地去想解决办法, 而不是抱怨.&lt;/p>
&lt;h2 id="公共课">公共课&lt;/h2>
&lt;h3 id="考研政治">考研政治&lt;/h3>
&lt;p>考研政治是考研中最简单的一门——低付出, 高回报(相对而言). 34所自主划线学校理工类的分数线一般是50分. 但如果想取得好的名次, 70+是一个比较理想的分数.&lt;/p>
&lt;p>考研政治包括马原, 史纲, 毛概, 思修和当代5门. 选择题和分析题各50分. 分析题决定能不能过线, 选择题决定能不能考高分！&lt;/p>
&lt;p>复习时间最好是从暑假开始, 最晚到大四开学时开始复习. 考研政治, 不是思想政治课, 所以之前的课本都不需要(一定不要看, 浪费时间). 为节省考研时间, 提高复习效率, 建议报考研班. 前期选择题以徐涛老师为主, 后期分析题以肖秀荣老师为主.&lt;/p>
&lt;p>11月份以前都可以看作是复习考研政治的前期, 可以把所有时间都给选择题. 以看视频（当然(必须)要用视频加速器看）为主, 做题为辅. 推荐徐涛老师, 其讲课逻辑性强, 清晰易懂, 适合一轮复习. 一轮完成之后, 可以做历年选择题真题, 感受真题的出题方式, 回顾忘记的知识点.&lt;/p>
&lt;p>后期要着手开始看分析题了, 也就是进入11月份以后, 当然, 优先推荐肖秀荣老师的8套卷和4套卷, 但这两套试卷要等到11月底和12月中旬才出（据肖老说是为了避免出题人在出题之前看到）. 在这之前, 还是推荐徐涛老师, 徐老师会出选择题和分析题技巧班, 以及押题班, 建议观看. 另外, 12月份肖4出来后, 肖老会有配套视频, 讲解怎么使用肖4和出题原因, 也建议观看. Ps: 视频资源, 就看你的搜索本领了.&lt;/p>
&lt;p>强调：选择题要一直做到考研, 不能停. 考前推荐看徐涛选择题技巧班, 背熟肖8和肖4上的选择题. 分析题推荐徐涛“小黄书”+肖秀荣4套卷, “小黄书”是答题模板, 可以灵活应用, 肖4是和真题比较接近的, 但二者的内容都比较多, 尤其是在考研冲刺阶段, 时间紧迫, 灵活运用非常重要.&lt;/p>
&lt;p>我的情况：选择题25分左右, 分析题40分左右, 总分65分. 由于选择题中多选题失分太多, 导致总分中规中矩, 不算理想.&lt;/p>
&lt;p>考场经验: 我的成绩也验证了前面所说的: 分析题决定能不能过线, 选择题决定能不能考高分！&lt;/p>
&lt;p>我认为我分析题还不错的原因有: 考前复习徐涛“小黄书”+肖4, 自己总结了很多, 把二者都有的问题做了汇总, 并且重新写了答案（分条目写强调逻辑, 简单易于背诵）. 在考场上, 避免写字潦草, 在答题纸上用铅笔轻轻划线, 最终呈现的书写效果还不错, 而且, 每道题都答满了.&lt;/p>
&lt;h3 id="考研英语">考研英语&lt;/h3>
&lt;p>对于英语不好的人, 考研英语应该是比较头疼的一科, 大阅读从六级的两个变成了四个人, 作文从六级一个变成一大一小, 题量变大了, 考题变难了. 但是也不用过于担心, 理工科的国家线, 只有三十几分, 34所自划线也就50分左右. 如果, 英语水平不高, 加把劲, 过线还是没有问题的！&lt;/p>
&lt;p>最终, 我的考研英语成绩是55分, 比我考前预期低了一些, 但对于我这种英语不太好的人来说, 已经达到了我的最低要求——过线即可.&lt;/p>
&lt;p>虽然我成绩不算优秀, 但我认为: 通过一定的练习和方法, 考到65+应该是没有问题的.&lt;/p>
&lt;p>英语题型包括: 阅读4篇, 每篇5道小题, 共40分. 作文包括大作文20分和小作文10分. 新题型, 英译汉, 完型各10分. 可以发现, 阅读和作文两项就占到了70分！！！因此, 大部分时间都要分给阅读和作文.&lt;/p>
&lt;p>单词是一定要背的. 推荐朱伟的恋练有词, 有配套的视频课(19考研出了新版视频), 视频课因人而异, 我是认为视频当中有许多和考试无关的东西, 前期可以尝试看看, 再作决定.&lt;/p>
&lt;p>至于语法基础, 可以系统地学习一遍来增加自己的英语硬实力, 建议一定要及时复习, 否则还不如不学. 我在考研初期, 跟着新东方老师把语法系统了学习了一遍, 但由于没有及时复习, 后期全都忘记了. 所以, 语法可以学, 重要的是一定要及时复习.&lt;/p>
&lt;p>只做真题, 不做模拟题. 做10年的考研真题应该是完全够了, 推荐黄剑的“黄皮书”,讲解巨详细. 阅读理解, 可以在4月份开始做, 一周一套就可以, 每做一套, 都要及时总结做题方法, 形成一个做题的套路, 到真正考研时, 就是真正地——按部就班！做题要求: 没有不认识的单词, 没有不认识的语法结构, 理解所有选项, 对的为什么对, 错的为什么错. 视频课推荐新东方的唐迟老师, 他有录历年阅读真题的详解. 作文, 推荐多背几篇范文, 推荐新东方王江涛老师. 考研冲刺我还看过刘晓燕老师的冲刺班, 感觉还不错, 也可以在备考时参考. 针对作文的书写, 参考衡水地区高考的英语作文, 一笔一划的写, 注意的是, 一定要考前模拟一笔一划的写几篇自己背诵的范文, 而且掐着时间. 我考研时, 就是因为没有练习, 结果英语作文就用了一个多小时, 也间接的造成了我英语成绩不高.&lt;/p>
&lt;p>完型, 翻译, 新题型我只是在考前看了一些视频, 有一定的技巧, 当然这是英语学渣的做法了.&lt;/p>
&lt;img src="https://imgkr.cn-bj.ufileos.com/1e333c49-b2ad-42b5-8548-f0e08ca715dc.jpg" width="95%" title="衡水高考英语满分作文" alt="衡水高考满分英语作文"/>
&lt;span class="caption">◎ 快坐下 常规操作&lt;/span>
&lt;h2 id="专业课">专业课&lt;/h2>
&lt;p>专业课是备考复习的重中之重, 专业课考察的是我们对基础知识的掌握程度, 不仅关系到考研成绩, 更重要的是和我们将来研究生所学方向息息相关.&lt;/p>
&lt;p>专业课是各个学校自主命题, 首先, 我们要去目标院校官网查找上一年的考试大纲, 按照考点去复习.&lt;/p>
&lt;h3 id="数学分析">数学分析&lt;/h3>
&lt;p>数学分析, 满分150分, 10道题左右, 每题10-15分. 推荐备考时间: 3月份到考研结束.&lt;/p>
&lt;p>前期, 看课本的基本知识, 例题, 课后习题(华科会出课本上的题). 暑假结束前结束即可. 课本最好使用学校推荐的课本, 一般是华东师大版或者陈纪修版.&lt;/p>
&lt;p>中期, 结合习题册, 多做题, 集中做题两个月. 习题册根据目标院校的不同, 也有区别. 清华, 北大, 中科大的应该是看谢惠民吧！(起初我就看的这一本, 有很多好的数学思想, 可惜不适合备考华科!) 考较好的学校, 推荐裴礼文, 书很厚, 习题很多. 我是从9月份开始做的. 如果感觉困难, 也可以看看钱吉林.&lt;/p>
&lt;p>后期, 研究考研目标院校的真题(很重要, 但不要太早接触, 11月开始即可).&lt;/p>
&lt;p>对于考华科这类学校来说, 课本上的例题, 习题是最重要的！多做一些题, 就够用了. 但是, 要考北大, 中科院这类数学强校的话, 除了做题强化, 更重要的是多思考, 理解课本上的每一个证明, 将课本上的知识“串联”起来, 形成知识网络. (如果是考数学类名校, 推荐谢惠民的习题册, 非常给力! )&lt;/p>
&lt;p>我对数学分析的小总结:&lt;/p>
&lt;div class="mytag">
&lt;p style="margin:25px">
&lt;b>
「 在无限维空间中研究各种极限 」
&lt;br /> &lt;br />
分析基础包括实数系的连续性, 数列和函数的极限; 微分学是以化曲为直为思想, 以Taloy展开为研究顶峰的部分; 积分学包括微分学的逆运算的不定积分, 以研究一系类有物理意义的定积分以及联系级数理论的反常积分; 级数理论的简单部分可以看成数列极限的升华——数列和的极限. 复杂一些的包括可以与 Taloy 展开媲美的傅里叶级数来刻画复杂函数.&lt;/b>
&lt;/p>
&lt;/div>
&lt;h3 id="高等代数">高等代数&lt;/h3>
&lt;p>高等代数, 满分150分, 10道题左右, 大多是证明题, 每题10-15分. 推荐备考时间: 3月份到考研结束.&lt;/p>
&lt;p>跟数学分析一样, 也是前期看课本(最晚暑假结束之前完成), 中期做练习册, 后期练习真题.&lt;/p>
&lt;p>高等代数, 多数院校会推荐北大第三版的《高等代数》, 但是这本书实在不适合自学,习题倒是非常值得做一遍. 有的同学推荐说北大丘维声的教材比较合适, 我没有看过这本教材, 也是非常的厚! 我用的是北航李尚志的数学系的《线性代数》教材及其视频, 李老师思维敏捷, 讲课讲得很有魅力! 当然, 代数也要看目标院校的考试大纲.&lt;/p>
&lt;p>大三结束前, 最好要看完一遍高代课本！暑假开始, 推荐看李扬的高等代数强化讲义(可微信搜索: 数学考研李扬), 可以看配套的视频. 里面讲了很多经典习题, 有一部分是北大第三版课后习题. 考前看3遍强化讲义, 考研代数就不用愁了.&lt;/p>
&lt;p>复习重点: 形成自己的知识体系. 因为高代章与章之间都有逻辑关系, 最终要将其编织成一张网. 这张网对你考研之后的科研生活, 估计会比较有用.&lt;/p>
&lt;p>我对高等代数的小总结:&lt;/p>
&lt;div class="mytag">
&lt;p style="margin:25px">
&lt;b>
在有限维空间研究「 加 」和「 乘 」. 研究的对象是向量和矩阵.
&lt;br /> &lt;br />
所谓..空间..，就是容纳..运动..的对象的集合. 向量刻画对象, 矩阵刻画对象的运动. 而将运动施加给对象就是用矩阵乘以向量. 而且矩阵乘法不仅可以把一个对象变换到这个空间, 还可以将其映射到其他空间. 这也就是矩阵和线性变换(映射)是同构的.
&lt;br /> &lt;br />
Jordan 标准型是对矩阵分类或简化的顶峰, 因为任何方阵都可以相似到一个 Jordan 标准型, 这样看似不同的矩阵, 可以看成是一个矩阵.
&lt;blockquote>
&lt;ul>
&lt;li>相抵：同一线性映射在不同基下的矩阵;&lt;/li>
&lt;li>相似：同一线性变换在不同基下的矩阵;&lt;/li>
&lt;li>相合：同一内积在不同基下的矩阵.
&lt;/b>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;/p>
&lt;/div>
&lt;h3 id="小结">小结&lt;/h3>
&lt;p>数学分析很难, 难在内容繁多, 尤其是后面的知识, 公式又长又难懂. 高等代数的难, 难在她的抽象, 课本中的很多定义很难以理解. 在李尚志老师的线性代数课里有这么一句话: 空间为体, 矩阵为用. 矩阵是高等代数的主要研究对象, 矩阵的特点是容易运算, 但不好理解. 而利用空间解释是容易理解的, 但缺点是不好运算. 二者结合, 可以使抽象的代数变得容易理解起来.&lt;/p>
&lt;img src="https://imgkr.cn-bj.ufileos.com/0ffa20b1-db0b-474d-8add-170cbd28da38.jpg" width="85%" title="考研成绩单" alt="2018年华中科技大学考研成绩单"/>
&lt;span class="caption">◎ 我的学号也是 365&lt;/span>
&lt;h2 id="考研常识">考研常识&lt;/h2>
&lt;h3 id="分数线">分数线&lt;/h3>
&lt;p>单科分数线, 总分分数线都必须同时过线, 才能进复试. 34所自主划线院校, 初试成绩出的早, 复试也较早进行.&lt;/p>
&lt;h3 id="院校选择">院校选择&lt;/h3>
&lt;blockquote>
&lt;p>城市优先, 学校次之, 综合考虑&lt;/p>
&lt;/blockquote>
&lt;p>好城市一定有好大学, 好城市的大学一定发展快! 在一个发展快的好大学读书, 可以让我们开阔眼界!&lt;/p>
&lt;p>有双一流, 985, 211等头衔的学校有可能是好学校, 好学校不一定都是有这三个头衔. 中国科学院大学有着全国最好的研究生院, 北京应用物理与计算数学研究所的计算数学的实力也是非常强悍, 南方科技大学等一批新兴院校也是不错的选择.&lt;/p>
&lt;blockquote>
&lt;p>我的选择: 南方$\to$武汉$\to$华中科技大学&lt;/p>
&lt;/blockquote>
&lt;p>我来自河北, 本科在东北, 研究生选择去南方深造. 理由: 相比北方, 南方经济发达, 学校办学理念新颖.&lt;/p>
&lt;p>武汉是除北京, 上海外的第三高等教育中心, 高等教育资源丰富, 是中原地区政治, 经济, 文化中心.&lt;/p>
&lt;p>就数学专业排名来说, 武汉大学要比华科略好, 我考虑到专业排名中, 基础数学占得比重要大一些, 我的目标专业时计算数学. 另一方面, 考虑到自己的复习情况和学校命题特点, 武大分析难, 代数稍简单. 而华科, 代数难, 分析稍简单. 所以就选择华科了.&lt;/p>
&lt;h3 id="专业选择结合兴趣和自身情况综合考虑">专业选择(结合兴趣和自身情况综合考虑)&lt;/h3>
&lt;p>数学 or 计算机 or 金融 （就数学专业而言）&lt;/p>
&lt;p>数学：学硕(科研or文凭) or 专硕(应用统计) or 师范类(人民教师)&lt;/p>
&lt;p>计算机：机器学习, 人工智能&lt;/p>
&lt;h3 id="考研重要时间点">考研重要时间点&lt;/h3>
&lt;p>大三下: 初步确定目标院校, 专业（城市优先, 综合考虑）&lt;/p>
&lt;p>暑 假： 坚持, 量变积累. 开始复习政治.&lt;/p>
&lt;p>国庆节: 预报名与正式报名的黄金复习时间, 一定不要荒废. 国庆节之后, 会感觉时间过得非常快. 预报名是只有本科生填报, 但是前两天非常卡, 建议不要浪费时间. 只要心中有数, 正式报名也不晚.&lt;/p>
&lt;p>11月: 开始冲刺, 现场报名.&lt;/p>
&lt;p>12月: 数天倒计时.&lt;/p>
&lt;h3 id="心态">心态&lt;/h3>
&lt;p>保持平常心, 因为在考研考试期间, 可能遇到很多情况, 以我举例:&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>四场考试要在三个考点进行, 要提前安排好出行时间, 以免迟到;&lt;/li>
&lt;li>由于考场设在高中, 桌子很小, 有的还会晃, 能否快速适应环境, 专心考试?&lt;/li>
&lt;li>考试期间会有人选择上厕所, 考试结束前半个小时, 有许多人会选择交卷, 怎样调整自己不受他们影响?&lt;/li>
&lt;li>专业课一, 我被安排在第一排, 正对监考老师, 而且老师们在我旁边的桌子上整理试卷袋一类的东西.&lt;/li>
&lt;li>专业课二, 我安排在最后一桌, 监考老师就在我旁边坐着, 非常的近. 怎样调整自己的心态, 专心考试?&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>这是一场成人考试, 大家都想考出好成绩, 不影响他人, 也不被他人影响, 专心考试! 专心考试! 专心考试!&lt;/p>
&lt;h2 id="祝福语">祝福语&lt;/h2>
&lt;blockquote class="blockquote-center">
&lt;p>
但行好事&lt;br/>莫问前程&lt;br/>念念不忘&lt;br/>必有回响
&lt;/p>
&lt;/blockquote>
&lt;h2 id="附录">附录&lt;/h2></description><category domain="https://matnoble.me/life/">life</category><category domain="https://matnoble.me/life/hust/">hust</category><category domain="https://matnoble.me/tags/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/">经验分享</category><category domain="https://matnoble.me/tags/%E8%80%83%E7%A0%94/">考研</category></item></channel></rss>